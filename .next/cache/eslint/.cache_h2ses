[{"/mnt/c/Users/peter/Documents/jig/src/__tests__/components/PropertyCard.test.tsx":"1","/mnt/c/Users/peter/Documents/jig/src/__tests__/lib/auth.test.ts":"2","/mnt/c/Users/peter/Documents/jig/src/backup-index.tsx":"3","/mnt/c/Users/peter/Documents/jig/src/components/admin/AdRequestCard.tsx":"4","/mnt/c/Users/peter/Documents/jig/src/components/admin/AdminLayout.tsx":"5","/mnt/c/Users/peter/Documents/jig/src/components/admin/AdminSidebar.tsx":"6","/mnt/c/Users/peter/Documents/jig/src/components/admin/MenuManager.tsx":"7","/mnt/c/Users/peter/Documents/jig/src/components/admin/PropertyReviewCard.tsx":"8","/mnt/c/Users/peter/Documents/jig/src/components/analytics/GoogleAnalytics.tsx":"9","/mnt/c/Users/peter/Documents/jig/src/components/common/DynamicHeader.tsx":"10","/mnt/c/Users/peter/Documents/jig/src/components/common/FloatingContactButton.tsx":"11","/mnt/c/Users/peter/Documents/jig/src/components/common/Header.tsx":"12","/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookHeader.tsx":"13","/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookLayout.tsx":"14","/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookRightSidebar.tsx":"15","/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookSidebar.tsx":"16","/mnt/c/Users/peter/Documents/jig/src/components/layout/PortalLayout.tsx":"17","/mnt/c/Users/peter/Documents/jig/src/components/messages/SendMessageButton.tsx":"18","/mnt/c/Users/peter/Documents/jig/src/components/owner/PropertySubmissionForm.tsx":"19","/mnt/c/Users/peter/Documents/jig/src/components/property/CategorySelector.tsx":"20","/mnt/c/Users/peter/Documents/jig/src/components/property/MonthlyStayCard.tsx":"21","/mnt/c/Users/peter/Documents/jig/src/components/property/PropertyCard.tsx":"22","/mnt/c/Users/peter/Documents/jig/src/components/property/PropertyGrid.tsx":"23","/mnt/c/Users/peter/Documents/jig/src/components/property/PropertyGridByRegion.tsx":"24","/mnt/c/Users/peter/Documents/jig/src/components/property/PropertySearch.tsx":"25","/mnt/c/Users/peter/Documents/jig/src/components/seo/JsonLd.tsx":"26","/mnt/c/Users/peter/Documents/jig/src/components/seo/SEOHead.tsx":"27","/mnt/c/Users/peter/Documents/jig/src/components/template/FacebookImporter.tsx":"28","/mnt/c/Users/peter/Documents/jig/src/components/template/TemplateManager.tsx":"29","/mnt/c/Users/peter/Documents/jig/src/components/template/TemplateRenderer.tsx":"30","/mnt/c/Users/peter/Documents/jig/src/components/template/TemplateSelector.tsx":"31","/mnt/c/Users/peter/Documents/jig/src/contexts/AuthContext.tsx":"32","/mnt/c/Users/peter/Documents/jig/src/data/facebookImportTemplate.ts":"33","/mnt/c/Users/peter/Documents/jig/src/data/mockMonthlyStayProperties.ts":"34","/mnt/c/Users/peter/Documents/jig/src/data/mockPendingProperties.ts":"35","/mnt/c/Users/peter/Documents/jig/src/data/mockProperties.ts":"36","/mnt/c/Users/peter/Documents/jig/src/data/philippinesRegions.ts":"37","/mnt/c/Users/peter/Documents/jig/src/data/propertiesData.ts":"38","/mnt/c/Users/peter/Documents/jig/src/data/propertyTemplates.ts":"39","/mnt/c/Users/peter/Documents/jig/src/hooks/useAutoUpdates.ts":"40","/mnt/c/Users/peter/Documents/jig/src/hooks/useDashboardStats.ts":"41","/mnt/c/Users/peter/Documents/jig/src/hooks/useMenuManager.ts":"42","/mnt/c/Users/peter/Documents/jig/src/lib/auth.ts":"43","/mnt/c/Users/peter/Documents/jig/src/lib/mongodb.ts":"44","/mnt/c/Users/peter/Documents/jig/src/lib/mongoose.ts":"45","/mnt/c/Users/peter/Documents/jig/src/lib/prisma.ts":"46","/mnt/c/Users/peter/Documents/jig/src/lib/scrapers/immigration-scraper.ts":"47","/mnt/c/Users/peter/Documents/jig/src/lib/scrapers/police-scraper.ts":"48","/mnt/c/Users/peter/Documents/jig/src/models/CommunityPost.ts":"49","/mnt/c/Users/peter/Documents/jig/src/models/Property.ts":"50","/mnt/c/Users/peter/Documents/jig/src/models/User.ts":"51","/mnt/c/Users/peter/Documents/jig/src/pages/404.tsx":"52","/mnt/c/Users/peter/Documents/jig/src/pages/_app.tsx":"53","/mnt/c/Users/peter/Documents/jig/src/pages/_error.tsx":"54","/mnt/c/Users/peter/Documents/jig/src/pages/about.tsx":"55","/mnt/c/Users/peter/Documents/jig/src/pages/admin/ads.tsx":"56","/mnt/c/Users/peter/Documents/jig/src/pages/admin/index.tsx":"57","/mnt/c/Users/peter/Documents/jig/src/pages/admin/live-users.tsx":"58","/mnt/c/Users/peter/Documents/jig/src/pages/admin/menu.tsx":"59","/mnt/c/Users/peter/Documents/jig/src/pages/admin/oauth-status.tsx":"60","/mnt/c/Users/peter/Documents/jig/src/pages/admin/properties.tsx":"61","/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-add.tsx":"62","/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-approvals.tsx":"63","/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-edit/[id].tsx":"64","/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-import.tsx":"65","/mnt/c/Users/peter/Documents/jig/src/pages/admin/setup-oauth.tsx":"66","/mnt/c/Users/peter/Documents/jig/src/pages/admin/templates.tsx":"67","/mnt/c/Users/peter/Documents/jig/src/pages/admin/users.tsx":"68","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/approve-property.ts":"69","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/dashboard/activities.ts":"70","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/dashboard/stats.ts":"71","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/pending-properties.ts":"72","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/properties/index.ts":"73","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/reject-property.ts":"74","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/users.ts":"75","/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/[...nextauth].ts":"76","/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/login.ts":"77","/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/refresh.ts":"78","/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/verify.ts":"79","/mnt/c/Users/peter/Documents/jig/src/pages/api/community/create-post.ts":"80","/mnt/c/Users/peter/Documents/jig/src/pages/api/community/groups.ts":"81","/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts/[id]/comment.ts":"82","/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts/[id]/like.ts":"83","/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts/[id].ts":"84","/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts.ts":"85","/mnt/c/Users/peter/Documents/jig/src/pages/api/cron/daily-updates.ts":"86","/mnt/c/Users/peter/Documents/jig/src/pages/api/debug/oauth.ts":"87","/mnt/c/Users/peter/Documents/jig/src/pages/api/drivers/register.ts":"88","/mnt/c/Users/peter/Documents/jig/src/pages/api/icons/apple-touch-icon.png.ts":"89","/mnt/c/Users/peter/Documents/jig/src/pages/api/immigration/updates.ts":"90","/mnt/c/Users/peter/Documents/jig/src/pages/api/jobs/[id].ts":"91","/mnt/c/Users/peter/Documents/jig/src/pages/api/jobs/index.ts":"92","/mnt/c/Users/peter/Documents/jig/src/pages/api/language/[locale].ts":"93","/mnt/c/Users/peter/Documents/jig/src/pages/api/language/index.ts":"94","/mnt/c/Users/peter/Documents/jig/src/pages/api/marketplace/create.ts":"95","/mnt/c/Users/peter/Documents/jig/src/pages/api/marketplace/items.ts":"96","/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/[id]/read.ts":"97","/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/conversations.ts":"98","/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/reply.ts":"99","/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/send.ts":"100","/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/user/[email].ts":"101","/mnt/c/Users/peter/Documents/jig/src/pages/api/police/updates.ts":"102","/mnt/c/Users/peter/Documents/jig/src/pages/api/profile/update.ts":"103","/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/[id]/like.ts":"104","/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/[id].ts":"105","/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/index.ts":"106","/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/search.ts":"107","/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/submit.ts":"108","/mnt/c/Users/peter/Documents/jig/src/pages/api/travel/destinations.ts":"109","/mnt/c/Users/peter/Documents/jig/src/pages/api/travel/guides.ts":"110","/mnt/c/Users/peter/Documents/jig/src/pages/api/trips/create.ts":"111","/mnt/c/Users/peter/Documents/jig/src/pages/api/upload/images/[id].ts":"112","/mnt/c/Users/peter/Documents/jig/src/pages/api/upload/images/index.ts":"113","/mnt/c/Users/peter/Documents/jig/src/pages/api/weather/current.ts":"114","/mnt/c/Users/peter/Documents/jig/src/pages/auth/error.tsx":"115","/mnt/c/Users/peter/Documents/jig/src/pages/auth/login.tsx":"116","/mnt/c/Users/peter/Documents/jig/src/pages/auth/signup.tsx":"117","/mnt/c/Users/peter/Documents/jig/src/pages/auth/verify-email.tsx":"118","/mnt/c/Users/peter/Documents/jig/src/pages/blog/index.tsx":"119","/mnt/c/Users/peter/Documents/jig/src/pages/community/create-post.tsx":"120","/mnt/c/Users/peter/Documents/jig/src/pages/community/post/[id].tsx":"121","/mnt/c/Users/peter/Documents/jig/src/pages/community.tsx":"122","/mnt/c/Users/peter/Documents/jig/src/pages/contact.tsx":"123","/mnt/c/Users/peter/Documents/jig/src/pages/faq.tsx":"124","/mnt/c/Users/peter/Documents/jig/src/pages/friends.tsx":"125","/mnt/c/Users/peter/Documents/jig/src/pages/grab-drivers.tsx":"126","/mnt/c/Users/peter/Documents/jig/src/pages/immigration.tsx":"127","/mnt/c/Users/peter/Documents/jig/src/pages/index-broken.tsx":"128","/mnt/c/Users/peter/Documents/jig/src/pages/index.tsx":"129","/mnt/c/Users/peter/Documents/jig/src/pages/ja.tsx":"130","/mnt/c/Users/peter/Documents/jig/src/pages/jobs.tsx":"131","/mnt/c/Users/peter/Documents/jig/src/pages/ko.tsx":"132","/mnt/c/Users/peter/Documents/jig/src/pages/load.tsx":"133","/mnt/c/Users/peter/Documents/jig/src/pages/location/angeles.tsx":"134","/mnt/c/Users/peter/Documents/jig/src/pages/location/cebu.tsx":"135","/mnt/c/Users/peter/Documents/jig/src/pages/location/manila.tsx":"136","/mnt/c/Users/peter/Documents/jig/src/pages/login.tsx":"137","/mnt/c/Users/peter/Documents/jig/src/pages/marketplace/sell.tsx":"138","/mnt/c/Users/peter/Documents/jig/src/pages/marketplace.tsx":"139","/mnt/c/Users/peter/Documents/jig/src/pages/messages.tsx":"140","/mnt/c/Users/peter/Documents/jig/src/pages/my-posts.tsx":"141","/mnt/c/Users/peter/Documents/jig/src/pages/my-properties.tsx":"142","/mnt/c/Users/peter/Documents/jig/src/pages/owner/submit.tsx":"143","/mnt/c/Users/peter/Documents/jig/src/pages/police.tsx":"144","/mnt/c/Users/peter/Documents/jig/src/pages/profile/dashboard.tsx":"145","/mnt/c/Users/peter/Documents/jig/src/pages/profile/edit.tsx":"146","/mnt/c/Users/peter/Documents/jig/src/pages/profile.tsx":"147","/mnt/c/Users/peter/Documents/jig/src/pages/properties/add.tsx":"148","/mnt/c/Users/peter/Documents/jig/src/pages/properties.tsx":"149","/mnt/c/Users/peter/Documents/jig/src/pages/property/[id].tsx":"150","/mnt/c/Users/peter/Documents/jig/src/pages/robots.txt.ts":"151","/mnt/c/Users/peter/Documents/jig/src/pages/roommates.tsx":"152","/mnt/c/Users/peter/Documents/jig/src/pages/sitemap.xml.ts":"153","/mnt/c/Users/peter/Documents/jig/src/pages/tl.tsx":"154","/mnt/c/Users/peter/Documents/jig/src/pages/travel.tsx":"155","/mnt/c/Users/peter/Documents/jig/src/pages/weather.tsx":"156","/mnt/c/Users/peter/Documents/jig/src/pages/zh.tsx":"157","/mnt/c/Users/peter/Documents/jig/src/types/admin.ts":"158","/mnt/c/Users/peter/Documents/jig/src/types/api.ts":"159","/mnt/c/Users/peter/Documents/jig/src/types/lucide-react.d.ts":"160","/mnt/c/Users/peter/Documents/jig/src/types/marketplace.ts":"161","/mnt/c/Users/peter/Documents/jig/src/types/menu.ts":"162","/mnt/c/Users/peter/Documents/jig/src/types/next-auth.d.ts":"163","/mnt/c/Users/peter/Documents/jig/src/types/property.ts":"164","/mnt/c/Users/peter/Documents/jig/src/types/template.ts":"165","/mnt/c/Users/peter/Documents/jig/src/types/user.ts":"166","/mnt/c/Users/peter/Documents/jig/src/utils/generateIcon.ts":"167","/mnt/c/Users/peter/Documents/jig/src/utils/logger.ts":"168","/mnt/c/Users/peter/Documents/jig/src/utils/resetMenu.ts":"169","/mnt/c/Users/peter/Documents/jig/src/utils/seo.ts":"170"},{"size":3376,"mtime":1752199120096,"results":"171","hashOfConfig":"172"},{"size":2641,"mtime":1752198266598,"results":"173","hashOfConfig":"172"},{"size":39,"mtime":1752217474205,"results":"174","hashOfConfig":"172"},{"size":10118,"mtime":1752116213297,"results":"175","hashOfConfig":"172"},{"size":1353,"mtime":1752118150587,"results":"176","hashOfConfig":"172"},{"size":10331,"mtime":1752129306673,"results":"177","hashOfConfig":"172"},{"size":25760,"mtime":1752117968051,"results":"178","hashOfConfig":"172"},{"size":11579,"mtime":1752114681131,"results":"179","hashOfConfig":"172"},{"size":4729,"mtime":1752121702160,"results":"180","hashOfConfig":"172"},{"size":15205,"mtime":1752241676179,"results":"181","hashOfConfig":"172"},{"size":6467,"mtime":1752114390721,"results":"182","hashOfConfig":"172"},{"size":5180,"mtime":1752113927427,"results":"183","hashOfConfig":"172"},{"size":14430,"mtime":1752243110613,"results":"184","hashOfConfig":"172"},{"size":4196,"mtime":1752225882802,"results":"185","hashOfConfig":"172"},{"size":17023,"mtime":1752233702838,"results":"186","hashOfConfig":"172"},{"size":11945,"mtime":1752244314217,"results":"187","hashOfConfig":"172"},{"size":5032,"mtime":1752115998242,"results":"188","hashOfConfig":"172"},{"size":5806,"mtime":1752243141044,"results":"189","hashOfConfig":"172"},{"size":24476,"mtime":1752247317901,"results":"190","hashOfConfig":"172"},{"size":8549,"mtime":1752116694912,"results":"191","hashOfConfig":"172"},{"size":11633,"mtime":1752199758601,"results":"192","hashOfConfig":"172"},{"size":7353,"mtime":1752291530269,"results":"193","hashOfConfig":"172"},{"size":1128,"mtime":1752112319814,"results":"194","hashOfConfig":"172"},{"size":6714,"mtime":1752148709713,"results":"195","hashOfConfig":"172"},{"size":9894,"mtime":1752290161074,"results":"196","hashOfConfig":"172"},{"size":7362,"mtime":1752120884575,"results":"197","hashOfConfig":"172"},{"size":8366,"mtime":1752157643568,"results":"198","hashOfConfig":"172"},{"size":27971,"mtime":1752200679088,"results":"199","hashOfConfig":"172"},{"size":19811,"mtime":1752127800129,"results":"200","hashOfConfig":"172"},{"size":13967,"mtime":1752201364298,"results":"201","hashOfConfig":"172"},{"size":8992,"mtime":1752127344195,"results":"202","hashOfConfig":"172"},{"size":4209,"mtime":1752221502053,"results":"203","hashOfConfig":"172"},{"size":18633,"mtime":1752136668959,"results":"204","hashOfConfig":"172"},{"size":17735,"mtime":1752201548870,"results":"205","hashOfConfig":"172"},{"size":5529,"mtime":1752114627545,"results":"206","hashOfConfig":"172"},{"size":19790,"mtime":1752201709990,"results":"207","hashOfConfig":"172"},{"size":13964,"mtime":1752132365627,"results":"208","hashOfConfig":"172"},{"size":15079,"mtime":1752201827431,"results":"209","hashOfConfig":"172"},{"size":14946,"mtime":1752127197733,"results":"210","hashOfConfig":"172"},{"size":5169,"mtime":1752142395876,"results":"211","hashOfConfig":"172"},{"size":3210,"mtime":1752197073554,"results":"212","hashOfConfig":"172"},{"size":7592,"mtime":1752123179160,"results":"213","hashOfConfig":"172"},{"size":3978,"mtime":1752196275185,"results":"214","hashOfConfig":"172"},{"size":1254,"mtime":1752197837929,"results":"215","hashOfConfig":"172"},{"size":911,"mtime":1752197987037,"results":"216","hashOfConfig":"172"},{"size":257,"mtime":1752246905271,"results":"217","hashOfConfig":"172"},{"size":11575,"mtime":1752144810078,"results":"218","hashOfConfig":"172"},{"size":13673,"mtime":1752144859405,"results":"219","hashOfConfig":"172"},{"size":3052,"mtime":1752197967010,"results":"220","hashOfConfig":"172"},{"size":3929,"mtime":1752197928415,"results":"221","hashOfConfig":"172"},{"size":2338,"mtime":1752197894783,"results":"222","hashOfConfig":"172"},{"size":2453,"mtime":1752128618165,"results":"223","hashOfConfig":"172"},{"size":2374,"mtime":1752246997156,"results":"224","hashOfConfig":"172"},{"size":3468,"mtime":1752128586864,"results":"225","hashOfConfig":"172"},{"size":17809,"mtime":1752290396947,"results":"226","hashOfConfig":"172"},{"size":13669,"mtime":1752116291838,"results":"227","hashOfConfig":"172"},{"size":10678,"mtime":1752197300109,"results":"228","hashOfConfig":"172"},{"size":7166,"mtime":1752241684382,"results":"229","hashOfConfig":"172"},{"size":5121,"mtime":1752118210970,"results":"230","hashOfConfig":"172"},{"size":12170,"mtime":1752241694263,"results":"231","hashOfConfig":"172"},{"size":24786,"mtime":1752202194866,"results":"232","hashOfConfig":"172"},{"size":8249,"mtime":1752129379793,"results":"233","hashOfConfig":"172"},{"size":11240,"mtime":1752242148210,"results":"234","hashOfConfig":"172"},{"size":44468,"mtime":1752202644799,"results":"235","hashOfConfig":"172"},{"size":13863,"mtime":1752127684472,"results":"236","hashOfConfig":"172"},{"size":11417,"mtime":1752241704006,"results":"237","hashOfConfig":"172"},{"size":882,"mtime":1752127826131,"results":"238","hashOfConfig":"172"},{"size":15848,"mtime":1752290611443,"results":"239","hashOfConfig":"172"},{"size":2074,"mtime":1752291145891,"results":"240","hashOfConfig":"172"},{"size":3987,"mtime":1752197267815,"results":"241","hashOfConfig":"172"},{"size":2305,"mtime":1752197180200,"results":"242","hashOfConfig":"172"},{"size":1481,"mtime":1752291864092,"results":"243","hashOfConfig":"172"},{"size":11600,"mtime":1752202734111,"results":"244","hashOfConfig":"172"},{"size":2305,"mtime":1752291890113,"results":"245","hashOfConfig":"172"},{"size":6128,"mtime":1752292290038,"results":"246","hashOfConfig":"172"},{"size":3108,"mtime":1752238224333,"results":"247","hashOfConfig":"172"},{"size":9220,"mtime":1752202858937,"results":"248","hashOfConfig":"172"},{"size":7314,"mtime":1752202969992,"results":"249","hashOfConfig":"172"},{"size":985,"mtime":1752196338867,"results":"250","hashOfConfig":"172"},{"size":1067,"mtime":1752247086552,"results":"251","hashOfConfig":"172"},{"size":17800,"mtime":1752196942268,"results":"252","hashOfConfig":"172"},{"size":3445,"mtime":1752196795957,"results":"253","hashOfConfig":"172"},{"size":2164,"mtime":1752196770575,"results":"254","hashOfConfig":"172"},{"size":14816,"mtime":1752212149962,"results":"255","hashOfConfig":"172"},{"size":62118,"mtime":1752211400057,"results":"256","hashOfConfig":"172"},{"size":6957,"mtime":1752147785048,"results":"257","hashOfConfig":"172"},{"size":1214,"mtime":1752235029681,"results":"258","hashOfConfig":"172"},{"size":1719,"mtime":1752246882913,"results":"259","hashOfConfig":"172"},{"size":2734,"mtime":1752158407067,"results":"260","hashOfConfig":"172"},{"size":8562,"mtime":1752154677826,"results":"261","hashOfConfig":"172"},{"size":19037,"mtime":1752149894714,"results":"262","hashOfConfig":"172"},{"size":27019,"mtime":1752149812877,"results":"263","hashOfConfig":"172"},{"size":4419,"mtime":1752151588481,"results":"264","hashOfConfig":"172"},{"size":2466,"mtime":1752151650488,"results":"265","hashOfConfig":"172"},{"size":1420,"mtime":1752247132858,"results":"266","hashOfConfig":"172"},{"size":25317,"mtime":1752150070739,"results":"267","hashOfConfig":"172"},{"size":992,"mtime":1752247610997,"results":"268","hashOfConfig":"172"},{"size":3072,"mtime":1752243071877,"results":"269","hashOfConfig":"172"},{"size":1174,"mtime":1752247624489,"results":"270","hashOfConfig":"172"},{"size":3681,"mtime":1752243050349,"results":"271","hashOfConfig":"172"},{"size":3200,"mtime":1752292518882,"results":"272","hashOfConfig":"172"},{"size":4962,"mtime":1752147750923,"results":"273","hashOfConfig":"172"},{"size":2378,"mtime":1752247982918,"results":"274","hashOfConfig":"172"},{"size":1019,"mtime":1752247581162,"results":"275","hashOfConfig":"172"},{"size":12945,"mtime":1752147310979,"results":"276","hashOfConfig":"172"},{"size":10466,"mtime":1752203254779,"results":"277","hashOfConfig":"172"},{"size":2399,"mtime":1752247407053,"results":"278","hashOfConfig":"172"},{"size":2867,"mtime":1752292690667,"results":"279","hashOfConfig":"172"},{"size":26787,"mtime":1752150519161,"results":"280","hashOfConfig":"172"},{"size":28532,"mtime":1752234239389,"results":"281","hashOfConfig":"172"},{"size":1758,"mtime":1752246897610,"results":"282","hashOfConfig":"172"},{"size":7614,"mtime":1752203359027,"results":"283","hashOfConfig":"172"},{"size":10061,"mtime":1752147469055,"results":"284","hashOfConfig":"172"},{"size":6008,"mtime":1752154916978,"results":"285","hashOfConfig":"172"},{"size":3665,"mtime":1752214490185,"results":"286","hashOfConfig":"172"},{"size":12354,"mtime":1752214870337,"results":"287","hashOfConfig":"172"},{"size":26259,"mtime":1752137106584,"results":"288","hashOfConfig":"172"},{"size":12283,"mtime":1752133299696,"results":"289","hashOfConfig":"172"},{"size":20378,"mtime":1752220357412,"results":"290","hashOfConfig":"172"},{"size":12682,"mtime":1752296855027,"results":"291","hashOfConfig":"172"},{"size":16651,"mtime":1752212049024,"results":"292","hashOfConfig":"172"},{"size":12716,"mtime":1752241757794,"results":"293","hashOfConfig":"172"},{"size":20136,"mtime":1752292866667,"results":"294","hashOfConfig":"172"},{"size":16105,"mtime":1752293068573,"results":"295","hashOfConfig":"172"},{"size":23251,"mtime":1752244706486,"results":"296","hashOfConfig":"172"},{"size":51702,"mtime":1752296808768,"results":"297","hashOfConfig":"172"},{"size":21033,"mtime":1752296584864,"results":"298","hashOfConfig":"172"},{"size":23177,"mtime":1752310079221,"results":"299","hashOfConfig":"172"},{"size":7229,"mtime":1752241465638,"results":"300","hashOfConfig":"172"},{"size":853,"mtime":1752151620284,"results":"301","hashOfConfig":"172"},{"size":20674,"mtime":1752297934720,"results":"302","hashOfConfig":"172"},{"size":857,"mtime":1752151600260,"results":"303","hashOfConfig":"172"},{"size":6700,"mtime":1752296980247,"results":"304","hashOfConfig":"172"},{"size":20544,"mtime":1752296493562,"results":"305","hashOfConfig":"172"},{"size":14568,"mtime":1752296333079,"results":"306","hashOfConfig":"172"},{"size":14716,"mtime":1752296371934,"results":"307","hashOfConfig":"172"},{"size":3539,"mtime":1752241729466,"results":"308","hashOfConfig":"172"},{"size":31239,"mtime":1752294369091,"results":"309","hashOfConfig":"172"},{"size":30587,"mtime":1752297903038,"results":"310","hashOfConfig":"172"},{"size":19569,"mtime":1752294902707,"results":"311","hashOfConfig":"172"},{"size":10430,"mtime":1752242570121,"results":"312","hashOfConfig":"172"},{"size":13851,"mtime":1752242629643,"results":"313","hashOfConfig":"172"},{"size":1887,"mtime":1752114348094,"results":"314","hashOfConfig":"172"},{"size":21581,"mtime":1752296301281,"results":"315","hashOfConfig":"172"},{"size":21521,"mtime":1752133590894,"results":"316","hashOfConfig":"172"},{"size":11292,"mtime":1752247947989,"results":"317","hashOfConfig":"172"},{"size":12920,"mtime":1752242474503,"results":"318","hashOfConfig":"172"},{"size":19854,"mtime":1752242079600,"results":"319","hashOfConfig":"172"},{"size":18535,"mtime":1752247566190,"results":"320","hashOfConfig":"172"},{"size":22483,"mtime":1752296163663,"results":"321","hashOfConfig":"172"},{"size":1461,"mtime":1752120974003,"results":"322","hashOfConfig":"172"},{"size":19437,"mtime":1752244598502,"results":"323","hashOfConfig":"172"},{"size":1412,"mtime":1752125184303,"results":"324","hashOfConfig":"172"},{"size":859,"mtime":1752151631699,"results":"325","hashOfConfig":"172"},{"size":30666,"mtime":1752297069898,"results":"326","hashOfConfig":"172"},{"size":19609,"mtime":1752296925098,"results":"327","hashOfConfig":"172"},{"size":842,"mtime":1752151611380,"results":"328","hashOfConfig":"172"},{"size":1680,"mtime":1752114584795,"results":"329","hashOfConfig":"172"},{"size":2978,"mtime":1752154116899,"results":"330","hashOfConfig":"172"},{"size":10468,"mtime":1752309840889,"results":"331","hashOfConfig":"172"},{"size":10805,"mtime":1752137331115,"results":"332","hashOfConfig":"172"},{"size":826,"mtime":1752136517463,"results":"333","hashOfConfig":"172"},{"size":531,"mtime":1752214296939,"results":"334","hashOfConfig":"172"},{"size":4024,"mtime":1752289999234,"results":"335","hashOfConfig":"172"},{"size":8792,"mtime":1752155041785,"results":"336","hashOfConfig":"172"},{"size":7477,"mtime":1752154830400,"results":"337","hashOfConfig":"172"},{"size":2231,"mtime":1752158184684,"results":"338","hashOfConfig":"172"},{"size":4161,"mtime":1752154870147,"results":"339","hashOfConfig":"172"},{"size":428,"mtime":1752122429114,"results":"340","hashOfConfig":"172"},{"size":9976,"mtime":1752120933094,"results":"341","hashOfConfig":"172"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q1hmmt",{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466"},{"filePath":"467","messages":"468","suppressedMessages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470"},{"filePath":"471","messages":"472","suppressedMessages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532"},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536"},{"filePath":"537","messages":"538","suppressedMessages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","suppressedMessages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546"},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553"},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560"},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","suppressedMessages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","suppressedMessages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","suppressedMessages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","suppressedMessages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","suppressedMessages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","suppressedMessages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","suppressedMessages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","suppressedMessages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"693","messages":"694","suppressedMessages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","suppressedMessages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715"},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719"},{"filePath":"720","messages":"721","suppressedMessages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723"},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727"},{"filePath":"728","messages":"729","suppressedMessages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731"},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735"},{"filePath":"736","messages":"737","suppressedMessages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739"},{"filePath":"740","messages":"741","suppressedMessages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743"},{"filePath":"744","messages":"745","suppressedMessages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","suppressedMessages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760"},{"filePath":"761","messages":"762","suppressedMessages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","suppressedMessages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","suppressedMessages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","suppressedMessages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","suppressedMessages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","suppressedMessages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","suppressedMessages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782"},{"filePath":"783","messages":"784","suppressedMessages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786"},{"filePath":"787","messages":"788","suppressedMessages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790"},{"filePath":"791","messages":"792","suppressedMessages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","suppressedMessages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","suppressedMessages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","suppressedMessages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","suppressedMessages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806"},{"filePath":"807","messages":"808","suppressedMessages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810"},{"filePath":"811","messages":"812","suppressedMessages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814"},{"filePath":"815","messages":"816","suppressedMessages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","suppressedMessages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821"},{"filePath":"822","messages":"823","suppressedMessages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825"},{"filePath":"826","messages":"827","suppressedMessages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","suppressedMessages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832"},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","suppressedMessages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","suppressedMessages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842"},{"filePath":"843","messages":"844","suppressedMessages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","suppressedMessages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","suppressedMessages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","suppressedMessages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","suppressedMessages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","suppressedMessages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"870","messages":"871","suppressedMessages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"873","messages":"874","suppressedMessages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","suppressedMessages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","suppressedMessages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","suppressedMessages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","suppressedMessages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/peter/Documents/jig/src/__tests__/components/PropertyCard.test.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/__tests__/lib/auth.test.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/backup-index.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/admin/AdRequestCard.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/admin/AdminLayout.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/admin/AdminSidebar.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/admin/MenuManager.tsx",["888","889","890","891"],[],"import { useState, useEffect } from 'react';\nimport { MenuItem, MenuFormData, MenuTranslations } from '@/types/menu';\nimport { \n  Plus, \n  Edit, \n  Trash2, \n  Eye, \n  EyeOff, \n  GripVertical, \n  ExternalLink,\n  Save,\n  X,\n  ChevronUp,\n  ChevronDown,\n  AlertTriangle,\n  Info,\n  Sparkles\n} from 'lucide-react';\n\ninterface MenuManagerProps {\n  language?: string;\n}\n\nexport default function MenuManager({ language = 'en' }: MenuManagerProps) {\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [isAddingItem, setIsAddingItem] = useState(false);\n  const [editingItem, setEditingItem] = useState<MenuItem | null>(null);\n  const [formData, setFormData] = useState<MenuFormData>({\n    title: '',\n    url: '',\n    icon: '',\n    isVisible: true,\n    isExternal: false,\n    parentId: '',\n    translations: {\n      ko: { title: '' },\n      zh: { title: '' },\n      ja: { title: '' },\n      en: { title: '' }\n    }\n  });\n\n  // 초기 메뉴 데이터 로드\n  useEffect(() => {\n    loadMenuItems();\n  }, []);\n\n  const loadMenuItems = () => {\n    // 실제로는 API에서 가져올 데이터\n    const mockMenuItems: MenuItem[] = [\n      {\n        id: '1',\n        title: 'Home',\n        url: '/',\n        icon: '🏠',\n        order: 1,\n        isVisible: true,\n        isExternal: false,\n        translations: {\n          ko: { title: '홈' },\n          zh: { title: '首页' },\n          ja: { title: 'ホーム' },\n          en: { title: 'Home' }\n        },\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z'\n      },\n      {\n        id: '2',\n        title: 'Properties',\n        url: '/properties',\n        icon: '🏢',\n        order: 2,\n        isVisible: true,\n        isExternal: false,\n        translations: {\n          ko: { title: '매물' },\n          zh: { title: '房源' },\n          ja: { title: '物件' },\n          en: { title: 'Properties' }\n        },\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z'\n      },\n      {\n        id: '3',\n        title: 'Monthly Stay',\n        url: '/monthly-stay',\n        icon: '📅',\n        order: 3,\n        isVisible: true,\n        isExternal: false,\n        translations: {\n          ko: { title: '한달살기' },\n          zh: { title: '月租' },\n          ja: { title: '月滞在' },\n          en: { title: 'Monthly Stay' }\n        },\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z'\n      },\n      {\n        id: '4',\n        title: 'Contact',\n        url: '/contact',\n        icon: '📞',\n        order: 4,\n        isVisible: true,\n        isExternal: false,\n        translations: {\n          ko: { title: '문의' },\n          zh: { title: '联系' },\n          ja: { title: '連絡' },\n          en: { title: 'Contact' }\n        },\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z'\n      }\n    ];\n    setMenuItems(mockMenuItems);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (editingItem) {\n      // 수정 모드\n      const updatedItems = menuItems.map(item => \n        item.id === editingItem.id \n          ? {\n              ...item,\n              ...formData,\n              updatedAt: new Date().toISOString()\n            }\n          : item\n      );\n      setMenuItems(updatedItems);\n      setEditingItem(null);\n    } else {\n      // 추가 모드\n      const newItem: MenuItem = {\n        id: Date.now().toString(),\n        ...formData,\n        order: menuItems.length + 1,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setMenuItems([...menuItems, newItem]);\n      setIsAddingItem(false);\n    }\n    \n    resetForm();\n  };\n\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      url: '',\n      icon: '',\n      isVisible: true,\n      isExternal: false,\n      parentId: '',\n      translations: {\n        ko: { title: '' },\n        zh: { title: '' },\n        ja: { title: '' },\n        en: { title: '' }\n      }\n    });\n  };\n\n  const handleEdit = (item: MenuItem) => {\n    setEditingItem(item);\n    setFormData({\n      title: item.title,\n      url: item.url,\n      icon: item.icon || '',\n      isVisible: item.isVisible,\n      isExternal: item.isExternal,\n      parentId: item.parentId || '',\n      translations: item.translations\n    });\n  };\n\n  const [deleteConfirm, setDeleteConfirm] = useState<string | null>(null);\n  const [showDeleteWarning, setShowDeleteWarning] = useState(false);\n\n  const handleDelete = (id: string) => {\n    const item = menuItems.find(m => m.id === id);\n    if (!item) return;\n    \n    setDeleteConfirm(id);\n    setShowDeleteWarning(true);\n  };\n\n  const confirmDelete = () => {\n    if (deleteConfirm) {\n      setMenuItems(menuItems.filter(item => item.id !== deleteConfirm));\n      setDeleteConfirm(null);\n      setShowDeleteWarning(false);\n    }\n  };\n\n  const cancelDelete = () => {\n    setDeleteConfirm(null);\n    setShowDeleteWarning(false);\n  };\n\n  const toggleVisibility = (id: string) => {\n    setMenuItems(menuItems.map(item => \n      item.id === id \n        ? { ...item, isVisible: !item.isVisible, updatedAt: new Date().toISOString() }\n        : item\n    ));\n  };\n\n  const moveItem = (id: string, direction: 'up' | 'down') => {\n    const itemIndex = menuItems.findIndex(item => item.id === id);\n    if (itemIndex === -1) return;\n\n    const newItems = [...menuItems];\n    const targetIndex = direction === 'up' ? itemIndex - 1 : itemIndex + 1;\n    \n    if (targetIndex >= 0 && targetIndex < newItems.length) {\n      // 순서 교환\n      [newItems[itemIndex], newItems[targetIndex]] = [newItems[targetIndex], newItems[itemIndex]];\n      \n      // order 값 업데이트\n      newItems.forEach((item, index) => {\n        item.order = index + 1;\n        item.updatedAt = new Date().toISOString();\n      });\n      \n      setMenuItems(newItems);\n    }\n  };\n\n  const getTranslatedTitle = (item: MenuItem) => {\n    const translation = item.translations[language as keyof MenuTranslations];\n    return translation?.title || item.title;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center space-x-2\">\n            <Sparkles className=\"h-6 w-6 text-primary\" />\n            <span>메뉴 관리</span>\n          </h2>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            웹사이트 메뉴를 추가, 수정, 삭제하고 순서를 조정할 수 있습니다.\n          </p>\n        </div>\n        <button\n          onClick={() => setIsAddingItem(true)}\n          className=\"flex items-center space-x-2 bg-primary text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors shadow-sm hover:shadow-md\"\n        >\n          <Plus className=\"h-5 w-5\" />\n          <span className=\"font-medium\">새 메뉴 추가</span>\n        </button>\n      </div>\n\n      {/* 도움말 */}\n      <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n        <div className=\"flex items-start space-x-3\">\n          <Info className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n          <div className=\"text-sm text-blue-800\">\n            <p className=\"font-medium mb-2\">메뉴 관리 도움말</p>\n            <ul className=\"space-y-1 text-xs\">\n              <li>• 👁️ 눈 아이콘: 메뉴 표시/숨김 토글</li>\n              <li>• ✏️ 편집 아이콘: 메뉴 내용 수정</li>\n              <li>• 🗑️ 삭제 아이콘: 메뉴 삭제 (확인 필요)</li>\n              <li>• ⬆️⬇️ 화살표: 메뉴 순서 조정</li>\n              <li>• 🔗 외부 링크는 새 창에서 열립니다</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/* 메뉴 목록 */}\n      <div className=\"space-y-3\">\n        {menuItems.length === 0 ? (\n          <div className=\"text-center py-12 text-gray-500\">\n            <div className=\"text-4xl mb-4\">📋</div>\n            <p className=\"text-lg font-medium mb-2\">메뉴가 없습니다</p>\n            <p className=\"text-sm\">새 메뉴를 추가해보세요!</p>\n          </div>\n        ) : (\n          menuItems.map((item, index) => (\n            <div\n              key={item.id}\n              className={`border-2 rounded-xl p-5 transition-all duration-200 ${\n                item.isVisible \n                  ? 'border-gray-200 bg-white shadow-sm hover:shadow-md' \n                  : 'border-gray-300 bg-gray-50 opacity-75'\n              }`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">\n                  {/* 순서 조정 버튼 */}\n                  <div className=\"flex flex-col space-y-1\">\n                    <button\n                      onClick={() => moveItem(item.id, 'up')}\n                      disabled={index === 0}\n                      className={`p-2 rounded-lg transition-colors ${\n                        index === 0\n                          ? 'text-gray-300 cursor-not-allowed'\n                          : 'text-gray-500 hover:text-gray-700 hover:bg-gray-100'\n                      }`}\n                      title=\"위로 이동\"\n                    >\n                      <ChevronUp className=\"h-4 w-4\" />\n                    </button>\n                    <button\n                      onClick={() => moveItem(item.id, 'down')}\n                      disabled={index === menuItems.length - 1}\n                      className={`p-2 rounded-lg transition-colors ${\n                        index === menuItems.length - 1\n                          ? 'text-gray-300 cursor-not-allowed'\n                          : 'text-gray-500 hover:text-gray-700 hover:bg-gray-100'\n                      }`}\n                      title=\"아래로 이동\"\n                    >\n                      <ChevronDown className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                  \n                  {/* 드래그 핸들 */}\n                  <div className=\"text-gray-400 cursor-move\" title=\"드래그하여 순서 변경\">\n                    <GripVertical className=\"h-5 w-5\" />\n                  </div>\n                  \n                  {/* 메뉴 정보 */}\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"text-2xl p-2 bg-gray-100 rounded-lg\">\n                      {item.icon || '📄'}\n                    </div>\n                    <div>\n                      <div className=\"font-semibold text-gray-900 text-lg\">\n                        {getTranslatedTitle(item)}\n                      </div>\n                      <div className=\"text-sm text-gray-500 flex items-center space-x-2\">\n                        <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">{item.url}</span>\n                        {item.isExternal && (\n                          <span className=\"flex items-center space-x-1 text-blue-600\">\n                            <ExternalLink className=\"h-3 w-3\" />\n                            <span className=\"text-xs\">외부링크</span>\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"text-xs text-gray-400 mt-1\">\n                        순서: {item.order} | 생성: {new Date(item.createdAt).toLocaleDateString()}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 액션 버튼들 */}\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={() => toggleVisibility(item.id)}\n                    className={`p-3 rounded-lg transition-colors font-medium ${\n                      item.isVisible \n                        ? 'text-green-700 bg-green-50 hover:bg-green-100 border border-green-200' \n                        : 'text-gray-500 bg-gray-100 hover:bg-gray-200 border border-gray-300'\n                    }`}\n                    title={item.isVisible ? '메뉴 숨기기' : '메뉴 표시'}\n                  >\n                    {item.isVisible ? (\n                      <>\n                        <Eye className=\"h-4 w-4\" />\n                      </>\n                    ) : (\n                      <>\n                        <EyeOff className=\"h-4 w-4\" />\n                      </>\n                    )}\n                  </button>\n                  \n                  <button\n                    onClick={() => handleEdit(item)}\n                    className=\"p-3 text-blue-700 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors border border-blue-200\"\n                    title=\"메뉴 편집\"\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                  \n                  <button\n                    onClick={() => handleDelete(item.id)}\n                    className=\"p-3 text-red-700 bg-red-50 hover:bg-red-100 rounded-lg transition-colors border border-red-200\"\n                    title=\"메뉴 삭제\"\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* 삭제 확인 모달 */}\n      {showDeleteWarning && deleteConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-xl p-6 max-w-md w-full shadow-2xl\">\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <div className=\"p-2 bg-red-100 rounded-full\">\n                <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n              </div>\n              <h3 className=\"text-lg font-bold text-gray-900\">\n                메뉴 삭제 확인\n              </h3>\n            </div>\n            \n            <div className=\"mb-6\">\n              <p className=\"text-gray-600 mb-4\">\n                다음 메뉴를 삭제하시겠습니까?\n              </p>\n              <div className=\"p-4 bg-gray-50 rounded-lg border-l-4 border-red-500\">\n                <div className=\"font-medium text-gray-900\">\n                  {menuItems.find(item => item.id === deleteConfirm)?.title}\n                </div>\n                <div className=\"text-sm text-gray-500 mt-1\">\n                  {menuItems.find(item => item.id === deleteConfirm)?.url}\n                </div>\n              </div>\n              <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n                <p className=\"text-sm text-red-700\">\n                  <strong>주의:</strong> 삭제된 메뉴는 복구할 수 없습니다. 웹사이트에서 해당 메뉴가 즉시 사라집니다.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={confirmDelete}\n                className=\"flex-1 bg-red-600 text-white px-4 py-3 rounded-lg hover:bg-red-700 transition-colors font-medium\"\n              >\n                삭제하기\n              </button>\n              <button\n                onClick={cancelDelete}\n                className=\"flex-1 bg-gray-100 text-gray-700 px-4 py-3 rounded-lg hover:bg-gray-200 transition-colors font-medium\"\n              >\n                취소\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 메뉴 추가/수정 폼 */}\n      {(isAddingItem || editingItem) && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-xl p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto shadow-2xl\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-2xl font-bold text-gray-900 flex items-center space-x-2\">\n                {editingItem ? (\n                  <>\n                    <Edit className=\"h-6 w-6 text-blue-600\" />\n                    <span>메뉴 수정</span>\n                  </>\n                ) : (\n                  <>\n                    <Plus className=\"h-6 w-6 text-green-600\" />\n                    <span>새 메뉴 추가</span>\n                  </>\n                )}\n              </h3>\n              <button\n                onClick={() => {\n                  setIsAddingItem(false);\n                  setEditingItem(null);\n                  resetForm();\n                }}\n                className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* 기본 정보 */}\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-gray-900 mb-4\">기본 정보</h4>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      메뉴 이름 (기본) *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.title}\n                      onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"예: Home\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      아이콘 (이모지)\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.icon}\n                      onChange={(e) => setFormData({ ...formData, icon: e.target.value })}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"🏠\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  URL 주소 *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.url}\n                  onChange={(e) => setFormData({ ...formData, url: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  placeholder=\"내부: /about | 외부: https://example.com\"\n                  required\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                </p>\n              </div>\n\n              {/* 다국어 번역 */}\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-gray-900 mb-4\">다국어 번역</h4>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      🇰🇷 한국어\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.translations.ko?.title || ''}\n                      onChange={(e) => setFormData({ \n                        ...formData, \n                        translations: { \n                          ...formData.translations, \n                          ko: { title: e.target.value } \n                        } \n                      })}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"예: 홈\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      🇨🇳 중국어\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.translations.zh?.title || ''}\n                      onChange={(e) => setFormData({ \n                        ...formData, \n                        translations: { \n                          ...formData.translations, \n                          zh: { title: e.target.value } \n                        } \n                      })}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"예: 首页\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      🇯🇵 일본어\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.translations.ja?.title || ''}\n                      onChange={(e) => setFormData({ \n                        ...formData, \n                        translations: { \n                          ...formData.translations, \n                          ja: { title: e.target.value } \n                        } \n                      })}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"예: ホーム\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      🇺🇸 영어\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.translations.en?.title || ''}\n                      onChange={(e) => setFormData({ \n                        ...formData, \n                        translations: { \n                          ...formData.translations, \n                          en: { title: e.target.value } \n                        } \n                      })}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"예: Home\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* 옵션 설정 */}\n              <div className=\"bg-green-50 p-4 rounded-lg\">\n                <h4 className=\"font-semibold text-gray-900 mb-4\">옵션 설정</h4>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-white transition-colors\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.isVisible}\n                      onChange={(e) => setFormData({ ...formData, isVisible: e.target.checked })}\n                      className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                    />\n                    <div className=\"ml-3\">\n                      <span className=\"text-sm font-medium text-gray-700\">👁️ 메뉴 표시</span>\n                      <p className=\"text-xs text-gray-500\">체크하면 웹사이트에 메뉴가 표시됩니다</p>\n                    </div>\n                  </label>\n                  \n                  <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-white transition-colors\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.isExternal}\n                      onChange={(e) => setFormData({ ...formData, isExternal: e.target.checked })}\n                      className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                    />\n                    <div className=\"ml-3\">\n                      <span className=\"text-sm font-medium text-gray-700\">🔗 외부 링크</span>\n                      <p className=\"text-xs text-gray-500\">체크하면 새 창에서 링크가 열립니다</p>\n                    </div>\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-4 pt-6 border-t border-gray-200\">\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 flex items-center justify-center space-x-2 bg-primary text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n                >\n                  <Save className=\"h-5 w-5\" />\n                  <span>{editingItem ? '수정 완료' : '추가 완료'}</span>\n                </button>\n                \n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setIsAddingItem(false);\n                    setEditingItem(null);\n                    resetForm();\n                  }}\n                  className=\"flex-1 px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\n                >\n                  취소\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/components/admin/PropertyReviewCard.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/analytics/GoogleAnalytics.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/common/DynamicHeader.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/common/FloatingContactButton.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/common/Header.tsx",["892","893","894","895","896","897"],[],"import { useState } from 'react';\nimport { Globe, Menu, X } from 'lucide-react';\n\ninterface HeaderProps {\n  currentLanguage: string;\n  onLanguageChange: (lang: string) => void;\n}\n\nconst languages = [\n  { code: 'ko', name: '한국어', flag: '🇰🇷' },\n  { code: 'zh', name: '中文', flag: '🇨🇳' },\n  { code: 'ja', name: '日本語', flag: '🇯🇵' },\n  { code: 'en', name: 'English', flag: '🇺🇸' },\n];\n\nexport default function Header({ currentLanguage, onLanguageChange }: HeaderProps) {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isLanguageOpen, setIsLanguageOpen] = useState(false);\n\n  const currentLang = languages.find(lang => lang.code === currentLanguage);\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-100 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <h1 className=\"text-xl font-bold text-primary\">\n                🏠 Philippines Rental\n              </h1>\n            </div>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <nav className=\"flex items-center space-x-6\">\n              <a href=\"/\" className=\"text-gray-600 hover:text-primary transition-colors\">\n                Home\n              </a>\n              <a href=\"/properties\" className=\"text-gray-600 hover:text-primary transition-colors\">\n                Properties\n              </a>\n              <a href=\"/about\" className=\"text-gray-600 hover:text-primary transition-colors\">\n                About\n              </a>\n            </nav>\n\n            {/* Language Selector */}\n            <div className=\"relative\">\n              <button\n                onClick={() => setIsLanguageOpen(!isLanguageOpen)}\n                className=\"flex items-center space-x-2 px-3 py-2 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors\"\n              >\n                <Globe className=\"h-4 w-4\" />\n                <span className=\"text-sm\">{currentLang?.flag} {currentLang?.name}</span>\n              </button>\n\n              {isLanguageOpen && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-1\">\n                  {languages.map((lang) => (\n                    <button\n                      key={lang.code}\n                      onClick={() => {\n                        onLanguageChange(lang.code);\n                        setIsLanguageOpen(false);\n                      }}\n                      className={`w-full flex items-center space-x-3 px-4 py-2 text-left hover:bg-gray-50 transition-colors ${\n                        currentLanguage === lang.code ? 'bg-blue-50 text-primary' : 'text-gray-700'\n                      }`}\n                    >\n                      <span className=\"text-lg\">{lang.flag}</span>\n                      <span className=\"text-sm\">{lang.name}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Hidden Admin Access - Only via /admin URL */}\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100\"\n            >\n              {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile menu */}\n      {isMenuOpen && (\n        <div className=\"md:hidden border-t border-gray-200\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 bg-white\">\n            <a href=\"/\" className=\"block px-3 py-2 text-gray-600 hover:text-primary\">\n              Home\n            </a>\n            <a href=\"/properties\" className=\"block px-3 py-2 text-gray-600 hover:text-primary\">\n              Properties\n            </a>\n            <a href=\"/about\" className=\"block px-3 py-2 text-gray-600 hover:text-primary\">\n              About\n            </a>\n            <div className=\"border-t border-gray-200 pt-2\">\n              <div className=\"px-3 py-2 text-sm text-gray-500\">Language</div>\n              {languages.map((lang) => (\n                <button\n                  key={lang.code}\n                  onClick={() => {\n                    onLanguageChange(lang.code);\n                    setIsMenuOpen(false);\n                  }}\n                  className={`w-full flex items-center space-x-3 px-6 py-2 text-left hover:bg-gray-50 ${\n                    currentLanguage === lang.code ? 'bg-blue-50 text-primary' : 'text-gray-700'\n                  }`}\n                >\n                  <span>{lang.flag}</span>\n                  <span className=\"text-sm\">{lang.name}</span>\n                </button>\n              ))}\n            </div>\n            {/* Admin access hidden from mobile menu too */}\n          </div>\n        </div>\n      )}\n    </header>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookHeader.tsx",["898","899"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useSession, signIn, signOut } from 'next-auth/react';\n\nconst FacebookHeader: React.FC = () => {\n  const router = useRouter();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const { data: session } = useSession();\n  const profileDropdownRef = useRef<HTMLDivElement>(null);\n\n  const isActive = (path: string) => router.pathname === path;\n\n  // 드롭다운 외부 클릭 시 닫기\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (profileDropdownRef.current && !profileDropdownRef.current.contains(event.target as Node)) {\n        setProfileMenuOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 bg-white shadow-md z-50\">\n      <div className=\"flex items-center justify-between px-4 h-14\">\n        {/* Left Section - Logo and Search */}\n        <div className=\"flex items-center space-x-2 flex-1\">\n          <Link href=\"/\" className=\"flex items-center\">\n            <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center\">\n              <span className=\"text-white text-xl font-bold\">필직</span>\n            </div>\n          </Link>\n          \n          <div className=\"relative hidden sm:block\">\n            <input\n              type=\"text\"\n              placeholder=\"필직에서 검색...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"bg-gray-100 rounded-full py-2 pl-10 pr-4 w-60 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            <svg\n              className=\"absolute left-3 top-2.5 w-5 h-5 text-gray-500\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n        </div>\n\n        {/* Center Section - Main Navigation */}\n        <nav className=\"hidden lg:flex items-center space-x-2 flex-1 justify-center\">\n          <Link href=\"/community\" className={`relative px-8 py-3 rounded-lg hover:bg-gray-100 ${isActive('/community') ? 'text-blue-600' : 'text-gray-600'}`}>\n            <svg className=\"w-7 h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z\" />\n            </svg>\n            {isActive('/community') && <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-blue-600 rounded-t-lg\" />}\n          </Link>\n\n          <Link href=\"/properties\" className={`relative px-8 py-3 rounded-lg hover:bg-gray-100 ${isActive('/properties') ? 'text-blue-600' : 'text-gray-600'}`}>\n            <svg className=\"w-7 h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n            </svg>\n            {isActive('/properties') && <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-blue-600 rounded-t-lg\" />}\n          </Link>\n          \n          <Link href=\"/marketplace\" className={`relative px-8 py-3 rounded-lg hover:bg-gray-100 ${isActive('/marketplace') ? 'text-blue-600' : 'text-gray-600'}`}>\n            <svg className=\"w-7 h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\" clipRule=\"evenodd\" />\n            </svg>\n            {isActive('/marketplace') && <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-blue-600 rounded-t-lg\" />}\n          </Link>\n\n          <Link href=\"/jobs\" className={`relative px-8 py-3 rounded-lg hover:bg-gray-100 ${isActive('/jobs') ? 'text-blue-600' : 'text-gray-600'}`}>\n            <svg className=\"w-7 h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h2zm4-3a1 1 0 00-1 1v1h2V4a1 1 0 00-1-1zM4 9v7h12V9H4z\" clipRule=\"evenodd\" />\n            </svg>\n            {isActive('/jobs') && <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-blue-600 rounded-t-lg\" />}\n          </Link>\n        </nav>\n\n        {/* Right Section - User Menu */}\n        <div className=\"flex items-center space-x-2 flex-1 justify-end\">\n          {session ? (\n            <div className=\"flex items-center space-x-2\">\n              {/* 관리자 메뉴 */}\n              {session.user?.role === 'admin' && (\n                <div className=\"flex items-center space-x-2\">\n                  <Link \n                    href=\"/admin/property-approvals\"\n                    className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 text-sm flex items-center space-x-1\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                    </svg>\n                    <span>매물승인</span>\n                  </Link>\n                  <Link \n                    href=\"/admin/users\"\n                    className=\"px-3 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 text-sm flex items-center space-x-1\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <span>관리자</span>\n                  </Link>\n                </div>\n              )}\n              <span className=\"text-sm text-gray-700 hidden md:block\">\n                {session.user?.name}\n              </span>\n              \n              {/* 프로필 드롭다운 */}\n              <div className=\"relative\" ref={profileDropdownRef}>\n                <button\n                  onClick={() => setProfileMenuOpen(!profileMenuOpen)}\n                  className=\"flex items-center space-x-2 p-1 rounded-full hover:bg-gray-100 transition-colors\"\n                >\n                  {session.user?.image ? (\n                    <img \n                      src={session.user.image} \n                      alt={session.user.name || 'User'}\n                      className=\"w-8 h-8 rounded-full\"\n                    />\n                  ) : (\n                    <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-5 h-5 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )}\n                  <svg className=\"w-4 h-4 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n\n                {/* 드롭다운 메뉴 */}\n                {profileMenuOpen && (\n                  <div className=\"absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-4 border-b border-gray-200\">\n                      <div className=\"flex items-center space-x-3\">\n                        {session.user?.image ? (\n                          <img \n                            src={session.user.image} \n                            alt={session.user.name || 'User'}\n                            className=\"w-12 h-12 rounded-full\"\n                          />\n                        ) : (\n                          <div className=\"w-12 h-12 bg-gray-300 rounded-full flex items-center justify-center\">\n                            <svg className=\"w-8 h-8 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </div>\n                        )}\n                        <div>\n                          <div className=\"font-medium text-gray-800\">{session.user?.name}</div>\n                          <div className=\"text-sm text-gray-500\">{session.user?.email}</div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"py-2\">\n                      <Link \n                        href=\"/profile\"\n                        onClick={() => setProfileMenuOpen(false)}\n                        className=\"flex items-center space-x-3 px-4 py-2 text-gray-700 hover:bg-gray-100\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <span>프로필 보기</span>\n                      </Link>\n                      \n                      <Link \n                        href=\"/profile/edit\"\n                        onClick={() => setProfileMenuOpen(false)}\n                        className=\"flex items-center space-x-3 px-4 py-2 text-gray-700 hover:bg-gray-100\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\n                        </svg>\n                        <span>프로필 수정</span>\n                      </Link>\n\n                      <Link \n                        href=\"/my-posts\"\n                        onClick={() => setProfileMenuOpen(false)}\n                        className=\"flex items-center space-x-3 px-4 py-2 text-gray-700 hover:bg-gray-100\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <span>내 게시글</span>\n                      </Link>\n\n                      <Link \n                        href=\"/my-properties\"\n                        onClick={() => setProfileMenuOpen(false)}\n                        className=\"flex items-center space-x-3 px-4 py-2 text-gray-700 hover:bg-gray-100\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                        </svg>\n                        <span>내 매물</span>\n                      </Link>\n\n                      <Link \n                        href=\"/messages\"\n                        onClick={() => setProfileMenuOpen(false)}\n                        className=\"flex items-center space-x-3 px-4 py-2 text-gray-700 hover:bg-gray-100\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                          <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                        </svg>\n                        <span>쪽지함</span>\n                      </Link>\n                      \n                      <div className=\"border-t border-gray-200 mt-2 pt-2\">\n                        <button \n                          onClick={() => {\n                            setProfileMenuOpen(false);\n                            signOut();\n                          }}\n                          className=\"flex items-center space-x-3 w-full px-4 py-2 text-gray-700 hover:bg-gray-100\"\n                        >\n                          <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span>로그아웃</span>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center space-x-2\">\n              <button \n                onClick={() => signIn()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\n              >\n                로그인\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default FacebookHeader;","/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookLayout.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookRightSidebar.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/layout/FacebookSidebar.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/layout/PortalLayout.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/messages/SendMessageButton.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/owner/PropertySubmissionForm.tsx",["900","901","902","903"],[],"import { useState } from 'react';\nimport { Upload, X, MapPin, Home, DollarSign, Camera, Plus } from 'lucide-react';\nimport { toast } from 'react-hot-toast';\nimport { useRouter } from 'next/router';\n\ninterface PropertySubmissionData {\n  title: string;\n  description: string;\n  type: 'house' | 'condo' | 'village' | '';\n  region: string;\n  address: string;\n  price: string;\n  deposit: string;\n  bedrooms: string;\n  bathrooms: string;\n  area: string;\n  floor?: string;\n  furnished: boolean;\n  amenities: string[];\n  images: File[];\n  contact: {\n    name: string;\n    phone: string;\n    email: string;\n    whatsapp?: string;\n    telegram?: string;\n  };\n  preferredLanguage: string;\n}\n\nconst regions = [\n  { value: 'manila', label: 'Manila' },\n  { value: 'cebu', label: 'Cebu' },\n  { value: 'davao', label: 'Davao' },\n  { value: 'boracay', label: 'Boracay' },\n  { value: 'baguio', label: 'Baguio' },\n];\n\nconst propertyTypes = [\n  { value: 'house', label: 'House' },\n  { value: 'condo', label: 'Condominium' },\n  { value: 'village', label: 'Village House' },\n];\n\nconst commonAmenities = [\n  'Parking', 'Security', 'Air Conditioning', 'Internet Ready', 'Balcony',\n  'Swimming Pool', 'Gymnasium', 'Playground', 'Laundry Area', 'Garden',\n  'Elevator', 'CCTV', 'Generator', 'Water Tank', 'Garage'\n];\n\nexport default function PropertySubmissionForm() {\n  const [formData, setFormData] = useState<PropertySubmissionData>({\n    title: '',\n    description: '',\n    type: '',\n    region: '',\n    address: '',\n    price: '',\n    deposit: '',\n    bedrooms: '',\n    bathrooms: '',\n    area: '',\n    floor: '',\n    furnished: false,\n    amenities: [],\n    images: [],\n    contact: {\n      name: '',\n      phone: '',\n      email: '',\n      whatsapp: '',\n      telegram: '',\n    },\n    preferredLanguage: 'en',\n  });\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = (field: string, value: any) => {\n    if (field.includes('.')) {\n      const [parent, child] = field.split('.');\n      setFormData(prev => ({\n        ...prev,\n        [parent]: {\n          ...(prev[parent as keyof PropertySubmissionData] as Record<string, any> || {}),\n          [child]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const handleAmenityToggle = (amenity: string) => {\n    setFormData(prev => ({\n      ...prev,\n      amenities: prev.amenities.includes(amenity)\n        ? prev.amenities.filter(a => a !== amenity)\n        : [...prev.amenities, amenity]\n    }));\n  };\n\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, ...files].slice(0, 10) // Max 10 images\n    }));\n  };\n\n  const removeImage = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch('/api/properties/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...formData,\n          city: formData.region, // 임시로 region을 city로 사용\n          district: '', // 추후 구현\n          contactName: formData.contact.name,\n          whatsapp: formData.contact.whatsapp\n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        toast.success('매물이 성공적으로 등록되었습니다!');\n        \n        // Reset form\n        setFormData({\n          title: '',\n          description: '',\n          type: '',\n          region: '',\n          address: '',\n          price: '',\n          deposit: '',\n          bedrooms: '',\n          bathrooms: '',\n          area: '',\n          floor: '',\n          furnished: false,\n          amenities: [],\n          images: [],\n          contact: {\n            name: '',\n            phone: '',\n            email: '',\n            whatsapp: '',\n            telegram: '',\n          },\n          preferredLanguage: 'en',\n        });\n        setCurrentStep(1);\n        \n        // Redirect to properties page\n        setTimeout(() => {\n          window.location.href = '/properties';\n        }, 1500);\n      } else {\n        throw new Error(data.error?.message || 'Failed to submit property');\n      }\n    } catch (error) {\n      toast.error('매물 등록 중 오류가 발생했습니다. 다시 시도해주세요.');\n      console.error('Property submission error:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const nextStep = () => {\n    setCurrentStep(prev => Math.min(prev + 1, 4));\n  };\n\n  const prevStep = () => {\n    setCurrentStep(prev => Math.max(prev - 1, 1));\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\n          🏠 Submit Your Property\n        </h1>\n        <p className=\"text-gray-600\">\n          Let our professional team help you find the perfect tenant\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm text-gray-500\">Step {currentStep} of 4</span>\n          <span className=\"text-sm text-gray-500\">{Math.round((currentStep / 4) * 100)}% Complete</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className=\"bg-primary h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${(currentStep / 4) * 100}%` }}\n          ></div>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-8\">\n        {/* Step 1: Basic Information */}\n        {currentStep === 1 && (\n          <div className=\"bg-white rounded-lg shadow-card p-6\">\n            <h2 className=\"text-xl font-semibold mb-6 flex items-center\">\n              <Home className=\"h-5 w-5 mr-2 text-primary\" />\n              Basic Property Information\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Property Title *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"e.g., 2BR Modern House in Makati\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Property Type *\n                </label>\n                <select\n                  value={formData.type}\n                  onChange={(e) => handleInputChange('type', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                >\n                  <option value=\"\">Select Type</option>\n                  {propertyTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Region *\n                </label>\n                <select\n                  value={formData.region}\n                  onChange={(e) => handleInputChange('region', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                >\n                  <option value=\"\">Select Region</option>\n                  {regions.map(region => (\n                    <option key={region.value} value={region.value}>\n                      {region.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Full Address *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.address}\n                  onChange={(e) => handleInputChange('address', e.target.value)}\n                  placeholder=\"e.g., 123 Ayala Avenue, Makati City\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Property Description *\n                </label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  placeholder=\"Describe your property in detail...\"\n                  rows={4}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Property Details */}\n        {currentStep === 2 && (\n          <div className=\"bg-white rounded-lg shadow-card p-6\">\n            <h2 className=\"text-xl font-semibold mb-6 flex items-center\">\n              <DollarSign className=\"h-5 w-5 mr-2 text-primary\" />\n              Property Details & Pricing\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Monthly Rent (PHP) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.price}\n                  onChange={(e) => handleInputChange('price', e.target.value)}\n                  placeholder=\"25000\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Security Deposit (PHP) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.deposit}\n                  onChange={(e) => handleInputChange('deposit', e.target.value)}\n                  placeholder=\"50000\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Area (sqm) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.area}\n                  onChange={(e) => handleInputChange('area', e.target.value)}\n                  placeholder=\"80\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Bedrooms *\n                </label>\n                <select\n                  value={formData.bedrooms}\n                  onChange={(e) => handleInputChange('bedrooms', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"1\">1 Bedroom</option>\n                  <option value=\"2\">2 Bedrooms</option>\n                  <option value=\"3\">3 Bedrooms</option>\n                  <option value=\"4\">4 Bedrooms</option>\n                  <option value=\"5\">5+ Bedrooms</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Bathrooms *\n                </label>\n                <select\n                  value={formData.bathrooms}\n                  onChange={(e) => handleInputChange('bathrooms', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"1\">1 Bathroom</option>\n                  <option value=\"2\">2 Bathrooms</option>\n                  <option value=\"3\">3 Bathrooms</option>\n                  <option value=\"4\">4+ Bathrooms</option>\n                </select>\n              </div>\n\n              {formData.type === 'condo' && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Floor Number\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.floor}\n                    onChange={(e) => handleInputChange('floor', e.target.value)}\n                    placeholder=\"25\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-6\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.furnished}\n                  onChange={(e) => handleInputChange('furnished', e.target.checked)}\n                  className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">\n                  Property is fully furnished\n                </span>\n              </label>\n            </div>\n\n            <div className=\"mt-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Amenities & Features\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n                {commonAmenities.map(amenity => (\n                  <label key={amenity} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.amenities.includes(amenity)}\n                      onChange={() => handleAmenityToggle(amenity)}\n                      className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">\n                      {amenity}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Photos */}\n        {currentStep === 3 && (\n          <div className=\"bg-white rounded-lg shadow-card p-6\">\n            <h2 className=\"text-xl font-semibold mb-6 flex items-center\">\n              <Camera className=\"h-5 w-5 mr-2 text-primary\" />\n              Property Photos\n            </h2>\n\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Upload Photos (Max 10 images, JPG/PNG only)\n              </label>\n              \n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <input\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*\"\n                  onChange={handleImageUpload}\n                  className=\"hidden\"\n                  id=\"image-upload\"\n                />\n                <label\n                  htmlFor=\"image-upload\"\n                  className=\"cursor-pointer flex flex-col items-center\"\n                >\n                  <Upload className=\"h-12 w-12 text-gray-400 mb-4\" />\n                  <span className=\"text-lg font-medium text-gray-700\">\n                    Click to upload photos\n                  </span>\n                  <span className=\"text-sm text-gray-500\">\n                    or drag and drop images here\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {formData.images.length > 0 && (\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                {formData.images.map((image, index) => (\n                  <div key={index} className=\"relative\">\n                    <img\n                      src={URL.createObjectURL(image)}\n                      alt={`Property ${index + 1}`}\n                      className=\"w-full h-32 object-cover rounded-lg\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => removeImage(index)}\n                      className=\"absolute top-2 right-2 bg-red-500 text-white rounded-full p-1 hover:bg-red-600\"\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 4: Contact Information */}\n        {currentStep === 4 && (\n          <div className=\"bg-white rounded-lg shadow-card p-6\">\n            <h2 className=\"text-xl font-semibold mb-6 flex items-center\">\n              <MapPin className=\"h-5 w-5 mr-2 text-primary\" />\n              Contact Information\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Your Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.contact.name}\n                  onChange={(e) => handleInputChange('contact.name', e.target.value)}\n                  placeholder=\"John Doe\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Phone Number *\n                </label>\n                <input\n                  type=\"tel\"\n                  value={formData.contact.phone}\n                  onChange={(e) => handleInputChange('contact.phone', e.target.value)}\n                  placeholder=\"+63 912 345 6789\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address *\n                </label>\n                <input\n                  type=\"email\"\n                  value={formData.contact.email}\n                  onChange={(e) => handleInputChange('contact.email', e.target.value)}\n                  placeholder=\"john@example.com\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Preferred Language\n                </label>\n                <select\n                  value={formData.preferredLanguage}\n                  onChange={(e) => handleInputChange('preferredLanguage', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                >\n                  <option value=\"en\">English</option>\n                  <option value=\"ko\">Korean</option>\n                  <option value=\"zh\">Chinese</option>\n                  <option value=\"ja\">Japanese</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  WhatsApp Number\n                </label>\n                <input\n                  type=\"tel\"\n                  value={formData.contact.whatsapp}\n                  onChange={(e) => handleInputChange('contact.whatsapp', e.target.value)}\n                  placeholder=\"+63 912 345 6789\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Telegram Username\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.contact.telegram}\n                  onChange={(e) => handleInputChange('contact.telegram', e.target.value)}\n                  placeholder=\"@username\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                />\n              </div>\n            </div>\n\n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n              <h3 className=\"font-medium text-blue-900 mb-2\">\n                What happens next?\n              </h3>\n              <ul className=\"text-sm text-blue-800 space-y-1\">\n                <li>• Our team will review your submission within 24 hours</li>\n                <li>• We'll contact you if any information needs clarification</li>\n                <li>• Once approved, we'll discuss rental strategy and pricing</li>\n                <li>• Professional photos can be arranged (optional service)</li>\n                <li>• Your approved property will be listed on our platform</li>\n                <li>• We'll handle all tenant inquiries and arrange showings</li>\n                <li>• Commission is only charged upon successful rental</li>\n              </ul>\n            </div>\n          </div>\n        )}\n\n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between items-center pt-6\">\n          <button\n            type=\"button\"\n            onClick={prevStep}\n            className={`px-6 py-2 rounded-lg font-medium transition-colors ${\n              currentStep === 1\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n            disabled={currentStep === 1}\n          >\n            Previous\n          </button>\n\n          {currentStep < 4 ? (\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              className=\"px-6 py-2 bg-primary text-white rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n            >\n              Next Step\n            </button>\n          ) : (\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-8 py-2 bg-secondary text-white rounded-lg font-medium hover:bg-green-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Submitting...' : 'Submit Property'}\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/components/property/CategorySelector.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/property/MonthlyStayCard.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/property/PropertyCard.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/property/PropertyGrid.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/property/PropertyGridByRegion.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/property/PropertySearch.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/seo/JsonLd.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/seo/SEOHead.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/template/FacebookImporter.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/template/TemplateManager.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/template/TemplateRenderer.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/components/template/TemplateSelector.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/contexts/AuthContext.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/facebookImportTemplate.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/mockMonthlyStayProperties.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/mockPendingProperties.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/mockProperties.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/philippinesRegions.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/propertiesData.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/data/propertyTemplates.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/hooks/useAutoUpdates.ts",["904"],[],"import { useState, useEffect, useCallback } from 'react';\n\ninterface AutoUpdate {\n  id: string;\n  category: string;\n  title: string;\n  titleKo: string;\n  titleTl: string;\n  content: string;\n  contentKo: string;\n  contentTl: string;\n  date: string;\n  priority: 'high' | 'medium' | 'low';\n  isNew: boolean;\n  source: string;\n  region?: string;\n  attachments: string[];\n  relatedLinks: string[];\n  lastUpdated: string;\n}\n\ninterface UpdatesResponse {\n  success: boolean;\n  data: AutoUpdate[];\n  cached: boolean;\n  lastUpdated: string;\n  totalUpdates: number;\n}\n\ninterface UseAutoUpdatesProps {\n  service: 'immigration' | 'police' | 'weather';\n  autoRefresh?: boolean;\n  refreshInterval?: number; // 밀리초\n}\n\nexport const useAutoUpdates = ({ \n  service, \n  autoRefresh = true, \n  refreshInterval = 5 * 60 * 1000 // 5분 기본값\n}: UseAutoUpdatesProps) => {\n  const [updates, setUpdates] = useState<AutoUpdate[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<string | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // 업데이트 가져오기 함수\n  const fetchUpdates = useCallback(async (isManualRefresh = false) => {\n    try {\n      if (isManualRefresh) {\n        setIsRefreshing(true);\n      } else {\n        setLoading(true);\n      }\n      setError(null);\n\n      const response = await fetch(`/api/${service}/updates`);\n      const data: UpdatesResponse = await response.json();\n\n      if (data.success) {\n        setUpdates(data.data);\n        setLastUpdated(data.lastUpdated);\n        \n        // 새로운 업데이트가 있으면 브라우저 알림\n        if (autoRefresh && !isManualRefresh) {\n          const newUpdates = data.data.filter(update => update.isNew);\n          if (newUpdates.length > 0) {\n            showBrowserNotification(service, newUpdates.length);\n          }\n        }\n      } else {\n        setError('Failed to fetch updates');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error occurred');\n    } finally {\n      setLoading(false);\n      setIsRefreshing(false);\n    }\n  }, [service, autoRefresh]);\n\n  // 수동 새로고침\n  const refreshUpdates = useCallback(() => {\n    fetchUpdates(true);\n  }, [fetchUpdates]);\n\n  // 브라우저 알림\n  const showBrowserNotification = useCallback((service: string, count: number) => {\n    if ('Notification' in window && Notification.permission === 'granted') {\n      const serviceName = service === 'immigration' ? 'Immigration' : 'Police';\n      new Notification(`${serviceName} Updates`, {\n        body: `${count} new update(s) available`,\n        icon: '/icons/notification-icon.png',\n        badge: '/icons/badge-icon.png'\n      });\n    }\n  }, []);\n\n  // 알림 권한 요청\n  const requestNotificationPermission = useCallback(async () => {\n    if ('Notification' in window && Notification.permission === 'default') {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n    return Notification.permission === 'granted';\n  }, []);\n\n  // 컴포넌트 마운트 시 초기 데이터 로드\n  useEffect(() => {\n    fetchUpdates();\n  }, [fetchUpdates]);\n\n  // 자동 새로고침 설정\n  useEffect(() => {\n    if (!autoRefresh) return;\n\n    const intervalId = setInterval(() => {\n      fetchUpdates();\n    }, refreshInterval);\n\n    return () => clearInterval(intervalId);\n  }, [autoRefresh, refreshInterval, fetchUpdates]);\n\n  // 페이지 포커스 시 업데이트 확인\n  useEffect(() => {\n    const handleFocus = () => {\n      if (autoRefresh) {\n        fetchUpdates();\n      }\n    };\n\n    window.addEventListener('focus', handleFocus);\n    return () => window.removeEventListener('focus', handleFocus);\n  }, [autoRefresh, fetchUpdates]);\n\n  // 온라인 상태 변경 시 업데이트 확인\n  useEffect(() => {\n    const handleOnline = () => {\n      if (autoRefresh) {\n        fetchUpdates();\n      }\n    };\n\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [autoRefresh, fetchUpdates]);\n\n  return {\n    updates,\n    loading,\n    error,\n    lastUpdated,\n    isRefreshing,\n    refreshUpdates,\n    requestNotificationPermission\n  };\n};\n\n// 실시간 업데이트 상태를 관리하는 컨텍스트 훅\nexport const useUpdateStatus = () => {\n  const [isOnline, setIsOnline] = useState(typeof window !== 'undefined' ? navigator.onLine : true);\n  const [lastSync, setLastSync] = useState<string | null>(null);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  const updateLastSync = useCallback(() => {\n    setLastSync(new Date().toISOString());\n  }, []);\n\n  return {\n    isOnline,\n    lastSync,\n    updateLastSync\n  };\n};","/mnt/c/Users/peter/Documents/jig/src/hooks/useDashboardStats.ts",["905"],[],"import { useState, useEffect } from 'react';\n\ninterface DashboardStats {\n  totalProperties: number;\n  activeProperties: number;\n  totalUsers: number;\n  newUsers: number;\n  totalInquiries: number;\n  newInquiries: number;\n  monthlyRevenue: number;\n  revenueGrowth: number;\n}\n\ninterface RecentActivity {\n  id: string;\n  type: 'property' | 'user' | 'inquiry' | 'system';\n  message: string;\n  time: string;\n  status: 'pending' | 'urgent' | 'success' | 'info';\n}\n\nexport function useDashboardStats(dateRange: string = '7days') {\n  const [stats, setStats] = useState<DashboardStats>({\n    totalProperties: 0,\n    activeProperties: 0,\n    totalUsers: 0,\n    newUsers: 0,\n    totalInquiries: 0,\n    newInquiries: 0,\n    monthlyRevenue: 0,\n    revenueGrowth: 0\n  });\n\n  const [recentActivities, setRecentActivities] = useState<RecentActivity[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, [dateRange]);\n\n  const fetchDashboardData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // 통계 데이터 가져오기\n      const statsResponse = await fetch(`/api/admin/dashboard/stats?range=${dateRange}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n\n      if (!statsResponse.ok) {\n        throw new Error('Failed to fetch stats');\n      }\n\n      const statsData = await statsResponse.json();\n      setStats(statsData.data);\n\n      // 최근 활동 가져오기\n      const activitiesResponse = await fetch('/api/admin/dashboard/activities', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n\n      if (!activitiesResponse.ok) {\n        throw new Error('Failed to fetch activities');\n      }\n\n      const activitiesData = await activitiesResponse.json();\n      setRecentActivities(activitiesData.data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n      // 개발 중에는 임시 데이터 사용\n      setStats({\n        totalProperties: 156,\n        activeProperties: 134,\n        totalUsers: 892,\n        newUsers: 23,\n        totalInquiries: 45,\n        newInquiries: 12,\n        monthlyRevenue: 2450000,\n        revenueGrowth: 15.2\n      });\n      \n      setRecentActivities([\n        { id: '1', type: 'property', message: '새로운 매물이 등록되었습니다', time: '2분 전', status: 'pending' },\n        { id: '2', type: 'user', message: '새로운 사용자가 가입했습니다', time: '15분 전', status: 'info' },\n        { id: '3', type: 'inquiry', message: '매물 문의가 들어왔습니다', time: '1시간 전', status: 'urgent' },\n        { id: '4', type: 'property', message: '매물이 승인되었습니다', time: '2시간 전', status: 'success' },\n        { id: '5', type: 'system', message: '시스템 백업이 완료되었습니다', time: '3시간 전', status: 'info' }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    stats,\n    recentActivities,\n    isLoading,\n    error,\n    refresh: fetchDashboardData\n  };\n}","/mnt/c/Users/peter/Documents/jig/src/hooks/useMenuManager.ts",["906"],[],"import { useState, useEffect } from 'react';\nimport { MenuItem } from '@/types/menu';\n\nconst MENU_STORAGE_KEY = 'menuItems';\n\nexport const useMenuManager = () => {\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // 기본 메뉴 항목들\n  const defaultMenuItems: MenuItem[] = [\n    {\n      id: '1',\n      title: 'Home',\n      url: '/',\n      icon: '🏠',\n      order: 1,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '홈' },\n        zh: { title: '首页' },\n        ja: { title: 'ホーム' },\n        en: { title: 'Home' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '2',\n      title: 'Properties',\n      url: '/properties',\n      icon: '🏢',\n      order: 2,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '매물' },\n        zh: { title: '房源' },\n        ja: { title: '物件' },\n        en: { title: 'Properties' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '3',\n      title: 'Manila',\n      url: '/location/manila',\n      icon: '🏙️',\n      order: 3,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '마닐라' },\n        zh: { title: '马尼拉' },\n        ja: { title: 'マニラ' },\n        en: { title: 'Manila' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '4',\n      title: 'Cebu',\n      url: '/location/cebu',\n      icon: '🏝️',\n      order: 4,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '세부' },\n        zh: { title: '宿务' },\n        ja: { title: 'セブ' },\n        en: { title: 'Cebu' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '5',\n      title: 'Angeles',\n      url: '/location/angeles',\n      icon: '🏢',\n      order: 5,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '앙헬레스' },\n        zh: { title: '安吉利斯' },\n        ja: { title: 'アンヘレス' },\n        en: { title: 'Angeles' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '6',\n      title: 'Monthly Stay',\n      url: '/?category=monthly_stay',\n      icon: '📅',\n      order: 6,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '한달살기' },\n        zh: { title: '月租' },\n        ja: { title: '月滞在' },\n        en: { title: 'Monthly Stay' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '7',\n      title: 'Blog',\n      url: '/blog',\n      icon: '📖',\n      order: 7,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '블로그' },\n        zh: { title: '博客' },\n        ja: { title: 'ブログ' },\n        en: { title: 'Blog' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '8',\n      title: 'FAQ',\n      url: '/faq',\n      icon: '❓',\n      order: 8,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '자주묻는질문' },\n        zh: { title: '常见问题' },\n        ja: { title: 'よくある質問' },\n        en: { title: 'FAQ' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '9',\n      title: 'Contact',\n      url: '/contact',\n      icon: '📞',\n      order: 9,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '문의' },\n        zh: { title: '联系' },\n        ja: { title: '連絡' },\n        en: { title: 'Contact' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '10',\n      title: 'About',\n      url: '/about',\n      icon: '💡',\n      order: 10,\n      isVisible: true,\n      isExternal: false,\n      translations: {\n        ko: { title: '소개' },\n        zh: { title: '关于' },\n        ja: { title: '紹介' },\n        en: { title: 'About' }\n      },\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    }\n  ];\n\n  // 메뉴 항목 로드\n  useEffect(() => {\n    loadMenuItems();\n  }, []);\n\n  const loadMenuItems = () => {\n    try {\n      // 클라이언트 사이드에서만 localStorage 접근\n      if (typeof window !== 'undefined') {\n        const savedMenuItems = localStorage.getItem(MENU_STORAGE_KEY);\n        if (savedMenuItems) {\n          setMenuItems(JSON.parse(savedMenuItems));\n        } else {\n          setMenuItems(defaultMenuItems);\n          localStorage.setItem(MENU_STORAGE_KEY, JSON.stringify(defaultMenuItems));\n        }\n      } else {\n        // 서버 사이드에서는 기본값 사용\n        setMenuItems(defaultMenuItems);\n      }\n    } catch (error) {\n      console.error('Error loading menu items:', error);\n      setMenuItems(defaultMenuItems);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 메뉴 항목 저장\n  const saveMenuItems = (items: MenuItem[]) => {\n    try {\n      if (typeof window !== 'undefined') {\n        localStorage.setItem(MENU_STORAGE_KEY, JSON.stringify(items));\n      }\n      setMenuItems(items);\n    } catch (error) {\n      console.error('Error saving menu items:', error);\n    }\n  };\n\n  // 메뉴 항목 추가\n  const addMenuItem = (item: Omit<MenuItem, 'id' | 'createdAt' | 'updatedAt'>) => {\n    const newItem: MenuItem = {\n      ...item,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    const updatedItems = [...menuItems, newItem];\n    saveMenuItems(updatedItems);\n    return newItem;\n  };\n\n  // 메뉴 항목 수정\n  const updateMenuItem = (id: string, updates: Partial<MenuItem>) => {\n    const updatedItems = menuItems.map(item => \n      item.id === id \n        ? { ...item, ...updates, updatedAt: new Date().toISOString() }\n        : item\n    );\n    saveMenuItems(updatedItems);\n  };\n\n  // 메뉴 항목 삭제\n  const deleteMenuItem = (id: string) => {\n    const updatedItems = menuItems.filter(item => item.id !== id);\n    saveMenuItems(updatedItems);\n  };\n\n  // 메뉴 항목 순서 변경\n  const reorderMenuItems = (items: MenuItem[]) => {\n    const reorderedItems = items.map((item, index) => ({\n      ...item,\n      order: index + 1,\n      updatedAt: new Date().toISOString()\n    }));\n    saveMenuItems(reorderedItems);\n  };\n\n  // 메뉴 항목 가시성 토글\n  const toggleMenuItemVisibility = (id: string) => {\n    const updatedItems = menuItems.map(item => \n      item.id === id \n        ? { ...item, isVisible: !item.isVisible, updatedAt: new Date().toISOString() }\n        : item\n    );\n    saveMenuItems(updatedItems);\n  };\n\n  // 가시적인 메뉴 항목들 가져오기\n  const getVisibleMenuItems = () => {\n    return menuItems\n      .filter(item => item.isVisible)\n      .sort((a, b) => a.order - b.order);\n  };\n\n  // 메뉴 초기화\n  const resetMenuItems = () => {\n    saveMenuItems(defaultMenuItems);\n  };\n\n  return {\n    menuItems,\n    loading,\n    addMenuItem,\n    updateMenuItem,\n    deleteMenuItem,\n    reorderMenuItems,\n    toggleMenuItemVisibility,\n    getVisibleMenuItems,\n    resetMenuItems,\n    refreshMenuItems: loadMenuItems\n  };\n};","/mnt/c/Users/peter/Documents/jig/src/lib/auth.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/lib/mongodb.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/lib/mongoose.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/lib/prisma.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/lib/scrapers/immigration-scraper.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/lib/scrapers/police-scraper.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/models/CommunityPost.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/models/Property.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/models/User.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/404.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/_app.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/_error.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/about.tsx",["907","908"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport FloatingContactButton from '@/components/common/FloatingContactButton';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { BreadcrumbSchema, OrganizationSchema } from '@/components/seo/JsonLd';\nimport { defaultSEO, getLocalizedSEO } from '@/utils/seo';\nimport { \n  Users, Globe, Shield, Award, Heart, Target, \n  Zap, CheckCircle, Star, MessageCircle, Home, Building \n} from 'lucide-react';\n\nexport default function AboutPage() {\n  const router = useRouter();\n  const currentLanguage = 'ko';\n\n  // SEO 설정\n  const seoConfig = useMemo(() => {\n    const baseSEO = defaultSEO.about;\n    return getLocalizedSEO(baseSEO, currentLanguage);\n  }, [currentLanguage]);\n\n  const breadcrumbs = [\n    { name: 'Home', url: '/' },\n    { name: 'About', url: '/about' }\n  ];\n\n\n  const features = [\n    {\n      icon: <Users className=\"h-8 w-8\" />,\n      title: 'Expat Specialized',\n      description: 'Dedicated to serving foreign tenants with specialized knowledge of expat needs and requirements.',\n      color: 'bg-blue-100 text-blue-600'\n    },\n    {\n      icon: <Globe className=\"h-8 w-8\" />,\n      title: 'Multilingual Support',\n      description: 'Professional support in English, Korean, Chinese, and Japanese for seamless communication.',\n      color: 'bg-green-100 text-green-600'\n    },\n    {\n      icon: <Shield className=\"h-8 w-8\" />,\n      title: 'Verified Properties',\n      description: 'All properties are thoroughly inspected and verified to ensure quality and authenticity.',\n      color: 'bg-purple-100 text-purple-600'\n    },\n    {\n      icon: <Zap className=\"h-8 w-8\" />,\n      title: 'Fast Service',\n      description: 'Quick response times with property matches within 24-48 hours of your inquiry.',\n      color: 'bg-yellow-100 text-yellow-600'\n    }\n  ];\n\n  const stats = [\n    { number: '2000+', label: 'Happy Tenants', icon: <Users className=\"h-6 w-6\" /> },\n    { number: '500+', label: 'Properties Listed', icon: <Building className=\"h-6 w-6\" /> },\n    { number: '5', label: 'Cities Covered', icon: <Globe className=\"h-6 w-6\" /> },\n    { number: '98%', label: 'Satisfaction Rate', icon: <Star className=\"h-6 w-6\" /> }\n  ];\n\n  const team = [\n    {\n      id: '1',\n      name: 'Sarah Kim',\n      position: 'Founder & CEO',\n      image: '/images/team/sarah.jpg',\n      avatar: '/images/team/sarah.jpg',\n      bio: 'Former expat with 10+ years experience in Philippines real estate market.',\n      languages: ['English', 'Korean'],\n      expertise: 'Market Strategy, Business Development',\n      verified: true\n    },\n    {\n      id: '2',\n      name: 'Mike Rodriguez',\n      position: 'Head of Operations',\n      image: '/images/team/mike.jpg',\n      avatar: '/images/team/mike.jpg',\n      bio: 'Real estate professional specializing in property management and tenant relations.',\n      languages: ['English', 'Spanish'],\n      expertise: 'Operations, Property Management',\n      verified: true\n    },\n    {\n      id: '3',\n      name: 'Chen Wei',\n      position: 'Regional Manager - Manila',\n      image: '/images/team/chen.jpg',\n      avatar: '/images/team/chen.jpg',\n      bio: 'Local expert with deep knowledge of Manila real estate and expat community.',\n      languages: ['English', 'Chinese', 'Filipino'],\n      expertise: 'Manila Market, Property Sourcing',\n      verified: true\n    },\n    {\n      id: '4',\n      name: 'Yuki Tanaka',\n      position: 'Customer Success Manager',\n      image: '/images/team/yuki.jpg',\n      avatar: '/images/team/yuki.jpg',\n      bio: 'Dedicated to ensuring exceptional customer experience for all tenants.',\n      languages: ['English', 'Japanese'],\n      expertise: 'Customer Relations, Quality Assurance',\n      verified: true\n    }\n  ];\n\n  const values = [\n    {\n      icon: <Heart className=\"h-6 w-6\" />,\n      title: 'Customer First',\n      description: 'Every decision we make prioritizes our customers\\' needs and satisfaction.',\n      color: 'text-red-600'\n    },\n    {\n      icon: <Shield className=\"h-6 w-6\" />,\n      title: 'Trust & Transparency',\n      description: 'Honest communication and transparent processes in every interaction.',\n      color: 'text-blue-600'\n    },\n    {\n      icon: <Target className=\"h-6 w-6\" />,\n      title: 'Excellence',\n      description: 'Continuous improvement and commitment to delivering exceptional service.',\n      color: 'text-green-600'\n    },\n    {\n      icon: <Globe className=\"h-6 w-6\" />,\n      title: 'Cultural Understanding',\n      description: 'Respecting and understanding diverse cultural backgrounds and needs.',\n      color: 'text-purple-600'\n    }\n  ];\n\n  const milestones = [\n    {\n      year: '2019',\n      title: 'Company Founded',\n      description: 'Started with a vision to help foreign tenants find quality rentals in Philippines.'\n    },\n    {\n      year: '2020',\n      title: 'Manila Expansion',\n      description: 'Established strong presence in Manila with over 100 verified properties.'\n    },\n    {\n      year: '2021',\n      title: 'Multi-City Growth',\n      description: 'Expanded to Cebu, Davao, and other major cities across Philippines.'\n    },\n    {\n      year: '2022',\n      title: 'Digital Platform Launch',\n      description: 'Launched comprehensive online platform with multilingual support.'\n    },\n    {\n      year: '2023',\n      title: 'Monthly Stay Program',\n      description: 'Introduced specialized monthly stay program for digital nomads and short-term residents.'\n    },\n    {\n      year: '2024',\n      title: 'Premium Service Tier',\n      description: 'Launched premium concierge services for high-end property seekers.'\n    }\n  ];\n\n  const testimonials = [\n    {\n      name: 'John Park',\n      nationality: 'Korean',\n      occupation: 'Digital Nomad',\n      text: 'Philippines Rental made my move to Manila so easy. The team understood exactly what I needed as a Korean expat.',\n      rating: 5,\n      image: '/images/testimonials/john.jpg'\n    },\n    {\n      name: 'Liu Wei',\n      nationality: 'Chinese',\n      occupation: 'Business Executive',\n      text: 'Excellent service with Chinese language support. They found me the perfect condo in BGC within 2 days.',\n      rating: 5,\n      image: '/images/testimonials/liu.jpg'\n    },\n    {\n      name: 'Emma Johnson',\n      nationality: 'American',\n      occupation: 'Teacher',\n      text: 'Professional, reliable, and honest. They helped me understand the rental process in Philippines completely.',\n      rating: 5,\n      image: '/images/testimonials/emma.jpg'\n    }\n  ];\n\n  return (\n    <>\n      <SEOHead\n        title={seoConfig.title}\n        description={seoConfig.description}\n        keywords={seoConfig.keywords}\n        image={seoConfig.image}\n        type=\"website\"\n        locale={currentLanguage}\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n      />\n      \n      <BreadcrumbSchema items={breadcrumbs} />\n      \n      <OrganizationSchema\n        name=\"Philippines Rental\"\n        url={process.env.NEXT_PUBLIC_SITE_URL || 'https://philippines-rental.com'}\n        logo={`${process.env.NEXT_PUBLIC_SITE_URL || 'https://philippines-rental.com'}/images/logo.png`}\n        description=\"Premium rental apartments in Philippines for foreigners\"\n        contactPoint={{\n          telephone: \"+63-912-345-6789\",\n          contactType: \"customer service\",\n          areaServed: \"Philippines\",\n          availableLanguage: [\"English\", \"Korean\", \"Chinese\", \"Japanese\"]\n        }}\n        address={{\n          streetAddress: \"123 Ayala Avenue\",\n          addressLocality: \"Makati City\",\n          addressRegion: \"Metro Manila\",\n          postalCode: \"1200\",\n          addressCountry: \"Philippines\"\n        }}\n        sameAs={[\n          \"https://www.facebook.com/philippinesrental\",\n          \"https://www.instagram.com/philippinesrental\"\n        ]}\n      />\n\n      <FacebookLayout section=\"about\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-16\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                💡 About Philippines Rental\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\n                {(currentLanguage as string) === 'ko' && '외국인을 위한 필리핀 최고의 렌탈 서비스. 전문적이고 신뢰할 수 있는 팀이 완벽한 집을 찾아드립니다.'}\n                {(currentLanguage as string) === 'zh' && '菲律宾外国人专业租房服务。专业可靠的团队帮您找到完美的家。'}\n                {(currentLanguage as string) === 'ja' && 'フィリピンの外国人向け賃貸サービス。専門的で信頼できるチームが完璧な住まいを見つけます。'}\n                {(currentLanguage as string) === 'en' && 'Philippines premier rental service for foreigners. Our professional and trusted team helps you find the perfect home.'}\n              </p>\n            </div>\n\n            {/* Mission Statement */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl p-8 md:p-12 mb-16\">\n              <div className=\"max-w-4xl mx-auto text-center\">\n                <h2 className=\"text-3xl font-bold mb-6\">Our Mission</h2>\n                <p className=\"text-xl opacity-90 leading-relaxed\">\n                  To bridge the gap between foreign tenants and quality rental properties in the Philippines, \n                  providing exceptional service with cultural understanding, professional integrity, and \n                  multilingual support that makes finding your perfect home effortless and enjoyable.\n                </p>\n              </div>\n            </div>\n\n            {/* Stats Section */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\">\n              {stats.map((stat, index) => (\n                <div key={index} className=\"bg-white rounded-2xl p-6 text-center shadow-sm border border-gray-200\">\n                  <div className=\"w-12 h-12 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center mx-auto mb-3\">\n                    {stat.icon}\n                  </div>\n                  <div className=\"text-2xl font-bold text-gray-900 mb-1\">{stat.number}</div>\n                  <div className=\"text-sm text-gray-600\">{stat.label}</div>\n                </div>\n              ))}\n            </div>\n\n            {/* Features */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-3xl font-bold text-center mb-12\">Why Choose Us</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {features.map((feature, index) => (\n                  <div key={index} className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200 text-center\">\n                    <div className={`w-16 h-16 ${feature.color} rounded-full flex items-center justify-center mx-auto mb-4`}>\n                      {feature.icon}\n                    </div>\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-3\">{feature.title}</h3>\n                    <p className=\"text-gray-600\">{feature.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Our Values */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-3xl font-bold text-center mb-12\">Our Values</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {values.map((value, index) => (\n                  <div key={index} className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200\">\n                    <div className={`w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mb-4 ${value.color}`}>\n                      {value.icon}\n                    </div>\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-3\">{value.title}</h3>\n                    <p className=\"text-gray-600\">{value.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Our Story */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-3xl font-bold text-center mb-12\">Our Journey</h2>\n              <div className=\"max-w-4xl mx-auto\">\n                <div className=\"relative\">\n                  {/* Timeline line */}\n                  <div className=\"absolute left-4 top-0 bottom-0 w-0.5 bg-blue-200 md:left-1/2 md:transform md:-translate-x-0.5\"></div>\n                  \n                  {milestones.map((milestone, index) => (\n                    <div key={index} className={`relative flex items-center mb-8 ${\n                      index % 2 === 0 ? 'md:flex-row' : 'md:flex-row-reverse'\n                    }`}>\n                      {/* Timeline dot */}\n                      <div className=\"absolute left-2 w-4 h-4 bg-blue-600 rounded-full md:left-1/2 md:transform md:-translate-x-2\"></div>\n                      \n                      {/* Content */}\n                      <div className={`ml-12 md:ml-0 md:w-1/2 ${\n                        index % 2 === 0 ? 'md:pr-8' : 'md:pl-8'\n                      }`}>\n                        <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200\">\n                          <div className=\"text-blue-600 font-bold text-lg mb-2\">{milestone.year}</div>\n                          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{milestone.title}</h3>\n                          <p className=\"text-gray-600\">{milestone.description}</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Team Section */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-3xl font-bold text-center mb-12\">Meet Our Team</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {team.map((member, index) => (\n                  <div key={index} className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200 text-center\">\n                    <div className=\"w-24 h-24 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                      <Users className=\"h-12 w-12 text-gray-400\" />\n                    </div>\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-1\">{member.name}</h3>\n                    <div className=\"text-blue-600 font-medium mb-3\">{member.position}</div>\n                    <p className=\"text-sm text-gray-600 mb-3\">{member.bio}</p>\n                    <div className=\"text-xs text-gray-500 mb-2\">\n                      <strong>Languages:</strong> {member.languages.join(', ')}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      <strong>Expertise:</strong> {member.expertise}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Testimonials */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-3xl font-bold text-center mb-12\">What Our Clients Say</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {testimonials.map((testimonial, index) => (\n                  <div key={index} className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200\">\n                    <div className=\"flex items-center mb-4\">\n                      {[...Array(testimonial.rating)].map((_, i) => (\n                        <Star key={i} className=\"h-5 w-5 text-yellow-400 fill-current\" />\n                      ))}\n                    </div>\n                    <p className=\"text-gray-600 mb-4 italic\">\"{testimonial.text}\"</p>\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center mr-3\">\n                        <Users className=\"h-6 w-6 text-gray-400\" />\n                      </div>\n                      <div>\n                        <div className=\"font-medium text-gray-900\">{testimonial.name}</div>\n                        <div className=\"text-sm text-gray-500\">{testimonial.nationality} {testimonial.occupation}</div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* CTA Section */}\n            <div className=\"bg-blue-50 rounded-2xl p-8 text-center\">\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Ready to Find Your Perfect Home?</h3>\n              <p className=\"text-gray-600 mb-6 max-w-2xl mx-auto\">\n                Join thousands of satisfied tenants who found their ideal rental through our professional service. \n                Let us help you find your perfect home in the Philippines.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button\n                  onClick={() => router.push('/contact')}\n                  className=\"bg-blue-600 text-white px-8 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n                >\n                  Contact Us Today\n                </button>\n                <button\n                  onClick={() => router.push('/properties')}\n                  className=\"border border-blue-600 text-blue-600 px-8 py-3 rounded-lg font-medium hover:bg-blue-50 transition-colors\"\n                >\n                  Browse Properties\n                </button>\n              </div>\n            </div>\n          </main>\n        <FloatingContactButton />\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/ads.tsx",["909"],[],"import { useState } from 'react';\nimport Head from 'next/head';\nimport AdRequestCard, { AdRequest } from '@/components/admin/AdRequestCard';\nimport { \n  BarChart3, \n  Clock, \n  CheckCircle, \n  XCircle, \n  Target,\n  Search,\n  Filter\n} from 'lucide-react';\n\n// Mock ad requests data\nconst mockAdRequests: AdRequest[] = [\n  {\n    id: 'ad-001',\n    companyName: '한국마트 Manila',\n    contactName: 'Kim Min-soo',\n    email: 'marketing@koreanmart.ph',\n    phone: '+63 917 123 4567',\n    adType: 'banner',\n    position: 'left',\n    budget: 15000,\n    duration: 30,\n    targetAudience: 'Korean residents in Manila',\n    adContent: {\n      title: '🇰🇷 한국마트',\n      description: '김치, 라면, 한국식품 배송',\n      linkUrl: 'https://koreanmart.ph',\n      buttonText: '주문하기'\n    },\n    status: 'pending',\n    submittedAt: '2024-01-15T09:30:00Z'\n  },\n  {\n    id: 'ad-002',\n    companyName: 'Globe Telecom',\n    contactName: 'Maria Santos',\n    email: 'partnerships@globe.com.ph',\n    phone: '+63 905 987 6543',\n    adType: 'featured',\n    position: 'right',\n    budget: 50000,\n    duration: 60,\n    targetAudience: 'All foreign residents',\n    adContent: {\n      title: '📱 Globe',\n      description: '외국인 전용 요금제 50% 할인',\n      linkUrl: 'https://globe.com.ph/expat-plans',\n      buttonText: '가입하기'\n    },\n    status: 'approved',\n    submittedAt: '2024-01-14T14:15:00Z',\n    reviewedAt: '2024-01-14T16:30:00Z',\n    startDate: '2024-01-15T00:00:00Z',\n    endDate: '2024-03-15T23:59:59Z',\n    notes: 'Approved for premium placement'\n  },\n  {\n    id: 'ad-003',\n    companyName: 'ABC Moving Services',\n    contactName: 'John Cruz',\n    email: 'info@abcmoving.ph',\n    phone: '+63 912 345 6789',\n    adType: 'banner',\n    position: 'left',\n    budget: 8000,\n    duration: 15,\n    targetAudience: 'People looking for moving services',\n    adContent: {\n      title: '🚚 이사업체',\n      description: '안전하고 빠른 이사 서비스',\n      linkUrl: 'https://abcmoving.ph',\n      buttonText: '견적 문의'\n    },\n    status: 'active',\n    submittedAt: '2024-01-10T11:20:00Z',\n    reviewedAt: '2024-01-10T15:45:00Z',\n    startDate: '2024-01-11T00:00:00Z',\n    endDate: '2024-01-26T23:59:59Z'\n  },\n  {\n    id: 'ad-004',\n    companyName: 'Suspicious Company Inc',\n    contactName: 'Fake Name',\n    email: 'fake@suspicious.com',\n    phone: '+63 900 000 0000',\n    adType: 'banner',\n    position: 'right',\n    budget: 5000,\n    duration: 7,\n    targetAudience: 'Everyone',\n    adContent: {\n      title: 'Get Rich Quick!',\n      description: 'Make money fast with this trick',\n      linkUrl: 'https://suspicious-site.com',\n      buttonText: 'Click Now!'\n    },\n    status: 'rejected',\n    submittedAt: '2024-01-12T08:00:00Z',\n    reviewedAt: '2024-01-12T09:15:00Z',\n    notes: 'Rejected due to suspicious content and unrealistic claims'\n  }\n];\n\nconst statusTabs = [\n  { key: 'all', label: 'All Requests', icon: Target },\n  { key: 'pending', label: 'Pending', icon: Clock },\n  { key: 'approved', label: 'Approved', icon: CheckCircle },\n  { key: 'active', label: 'Active', icon: CheckCircle },\n  { key: 'rejected', label: 'Rejected', icon: XCircle },\n];\n\nexport default function AdManagement() {\n  const [adRequests, setAdRequests] = useState<AdRequest[]>(mockAdRequests);\n  const [activeTab, setActiveTab] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleApprove = async (id: string, notes?: string) => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    setAdRequests(prev => prev.map(request => \n      request.id === id \n        ? { \n            ...request, \n            status: 'approved',\n            reviewedAt: new Date().toISOString(),\n            notes: notes || undefined\n          }\n        : request\n    ));\n    \n    alert('Ad request approved successfully!');\n  };\n\n  const handleReject = async (id: string, notes?: string) => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    setAdRequests(prev => prev.map(request => \n      request.id === id \n        ? { \n            ...request, \n            status: 'rejected',\n            reviewedAt: new Date().toISOString(),\n            notes: notes || undefined\n          }\n        : request\n    ));\n    \n    alert('Ad request rejected.');\n  };\n\n  const filteredAdRequests = adRequests\n    .filter(request => {\n      if (activeTab === 'all') return true;\n      return request.status === activeTab;\n    })\n    .filter(request => {\n      if (!searchTerm) return true;\n      return request.companyName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n             request.contactName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n             request.email.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n\n  const getStatusCount = (status: string) => {\n    if (status === 'all') return adRequests.length;\n    return adRequests.filter(r => r.status === status).length;\n  };\n\n  const stats = {\n    total: adRequests.length,\n    pending: adRequests.filter(r => r.status === 'pending').length,\n    approved: adRequests.filter(r => r.status === 'approved').length,\n    active: adRequests.filter(r => r.status === 'active').length,\n    rejected: adRequests.filter(r => r.status === 'rejected').length,\n    totalRevenue: adRequests\n      .filter(r => r.status === 'approved' || r.status === 'active')\n      .reduce((sum, r) => sum + r.budget, 0)\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Ad Management - Philippines Rental Admin</title>\n        <meta name=\"description\" content=\"Manage advertising requests and campaigns\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Header */}\n        <header className=\"bg-white shadow-sm border-b border-gray-200\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-16\">\n              <div className=\"flex items-center space-x-4\">\n                <a href=\"/admin\" className=\"text-xl font-bold text-primary\">\n                  🏠 Philippines Rental - Admin\n                </a>\n                <span className=\"text-gray-300\">|</span>\n                <h1 className=\"text-lg font-medium text-gray-700\">Ad Management</h1>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm text-gray-600\">Welcome, Admin</span>\n                <button className=\"text-sm text-gray-600 hover:text-primary\">\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Statistics Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-6 gap-6 mb-8\">\n            <div className=\"bg-white rounded-lg shadow-card p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-blue-100 rounded-lg\">\n                  <BarChart3 className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total Requests</p>\n                  <p className=\"text-2xl font-semibold text-gray-900\">{stats.total}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-card p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                  <Clock className=\"h-6 w-6 text-yellow-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Pending</p>\n                  <p className=\"text-2xl font-semibold text-gray-900\">{stats.pending}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-card p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-green-100 rounded-lg\">\n                  <CheckCircle className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Approved</p>\n                  <p className=\"text-2xl font-semibold text-gray-900\">{stats.approved}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-card p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-blue-100 rounded-lg\">\n                  <Target className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Active</p>\n                  <p className=\"text-2xl font-semibold text-gray-900\">{stats.active}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-card p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-red-100 rounded-lg\">\n                  <XCircle className=\"h-6 w-6 text-red-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Rejected</p>\n                  <p className=\"text-2xl font-semibold text-gray-900\">{stats.rejected}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-card p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-green-100 rounded-lg\">\n                  <span className=\"text-green-600 text-lg\">₱</span>\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-gray-600\">Revenue</p>\n                  <p className=\"text-2xl font-semibold text-gray-900\">\n                    ₱{stats.totalRevenue.toLocaleString()}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Filters and Search */}\n          <div className=\"bg-white rounded-lg shadow-card p-6 mb-8\">\n            <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n              {/* Status Tabs */}\n              <div className=\"flex flex-wrap gap-2\">\n                {statusTabs.map((tab) => {\n                  const TabIcon = tab.icon;\n                  const count = getStatusCount(tab.key);\n                  const isActive = activeTab === tab.key;\n                  \n                  return (\n                    <button\n                      key={tab.key}\n                      onClick={() => setActiveTab(tab.key)}\n                      className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${\n                        isActive\n                          ? 'bg-primary text-white'\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <TabIcon className=\"h-4 w-4\" />\n                      <span>{tab.label}</span>\n                      <span className={`text-xs px-2 py-1 rounded-full ${\n                        isActive\n                          ? 'bg-white/20 text-white'\n                          : 'bg-gray-300 text-gray-700'\n                      }`}>\n                        {count}\n                      </span>\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Search */}\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search companies, contacts, emails...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary w-full lg:w-80\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Ad Requests List */}\n          <div className=\"space-y-6\">\n            {filteredAdRequests.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"text-gray-500 text-lg mb-2\">\n                  No ad requests found\n                </div>\n                <div className=\"text-gray-400 text-sm\">\n                  {searchTerm \n                    ? 'Try adjusting your search criteria'\n                    : 'No requests match the selected status'\n                  }\n                </div>\n              </div>\n            ) : (\n              filteredAdRequests.map((request) => (\n                <AdRequestCard\n                  key={request.id}\n                  adRequest={request}\n                  onApprove={handleApprove}\n                  onReject={handleReject}\n                />\n              ))\n            )}\n          </div>\n\n          {/* Load More Button */}\n          {filteredAdRequests.length > 0 && (\n            <div className=\"text-center mt-8\">\n              <button className=\"px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\">\n                Load More Requests\n              </button>\n            </div>\n          )}\n        </main>\n      </div>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/index.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/admin/live-users.tsx",["910","911","912","913","914"],[],"import { useState, useEffect } from 'react';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { Users, RefreshCw, Eye } from 'lucide-react';\n\ninterface LoginAttempt {\n  email: string;\n  name: string;\n  image?: string;\n  provider: string;\n  timestamp: string;\n}\n\nexport default function LiveUsersPage() {\n  const [loginAttempts, setLoginAttempts] = useState<LoginAttempt[]>([]);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // 실시간으로 로그인 시도를 확인하는 함수\n  const checkLoginAttempts = async () => {\n    setIsRefreshing(true);\n    try {\n      // 브라우저 localStorage에서 로그인 기록 가져오기\n      const stored = localStorage.getItem('login_attempts');\n      if (stored) {\n        setLoginAttempts(JSON.parse(stored));\n      }\n    } catch (error) {\n      console.error('Failed to load login attempts:', error);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  useEffect(() => {\n    checkLoginAttempts();\n    \n    // 5초마다 자동 새로고침\n    const interval = setInterval(checkLoginAttempts, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // 로그인 기록을 localStorage에 저장하는 함수 (개발자 도구에서 실행용)\n  const addLoginAttempt = (user: any) => {\n    const attempt: LoginAttempt = {\n      email: user.email,\n      name: user.name,\n      image: user.image,\n      provider: 'google',\n      timestamp: new Date().toISOString()\n    };\n    \n    const existing = JSON.parse(localStorage.getItem('login_attempts') || '[]');\n    const updated = [attempt, ...existing.slice(0, 9)]; // 최신 10개만 유지\n    localStorage.setItem('login_attempts', JSON.stringify(updated));\n    setLoginAttempts(updated);\n  };\n\n  // 전역 함수로 등록 (개발자 도구에서 사용)\n  useEffect(() => {\n    (window as any).addLoginAttempt = addLoginAttempt;\n  }, []);\n\n  return (\n    <>\n      <SEOHead\n        title=\"실시간 로그인 모니터 - 필직 (Phil Jig)\"\n        description=\"실시간으로 로그인한 사용자를 확인합니다\"\n        keywords=\"admin, users, login, monitor\"\n        type=\"website\"\n        locale=\"ko\"\n      />\n\n      <FacebookLayout section=\"admin\">\n        <main className=\"py-8\">\n          <div className=\"mb-8 flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                <Users className=\"inline-block h-8 w-8 mr-2\" />\n                실시간 로그인 모니터\n              </h1>\n              <p className=\"text-gray-600\">\n                Google 로그인한 사용자들을 실시간으로 확인할 수 있습니다.\n              </p>\n            </div>\n            \n            <button\n              onClick={checkLoginAttempts}\n              disabled={isRefreshing}\n              className={`flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors ${\n                isRefreshing ? 'opacity-50' : ''\n              }`}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n              새로고침\n            </button>\n          </div>\n\n          {/* 로그인 시도 목록 */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h2 className=\"text-lg font-semibold\">최근 로그인 ({loginAttempts.length})</h2>\n            </div>\n            \n            <div className=\"divide-y divide-gray-200\">\n              {loginAttempts.length === 0 ? (\n                <div className=\"p-6 text-center text-gray-500\">\n                  <Eye className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                  <p className=\"text-lg mb-2\">아직 로그인한 사용자가 없습니다</p>\n                  <p className=\"text-sm\">Google 로그인을 시도해보세요!</p>\n                </div>\n              ) : (\n                loginAttempts.map((attempt, index) => (\n                  <div key={index} className=\"p-6 hover:bg-gray-50\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"flex-shrink-0\">\n                        {attempt.image ? (\n                          <img\n                            className=\"h-12 w-12 rounded-full\"\n                            src={attempt.image}\n                            alt={attempt.name}\n                          />\n                        ) : (\n                          <div className=\"h-12 w-12 rounded-full bg-gray-200 flex items-center justify-center\">\n                            <Users className=\"h-6 w-6 text-gray-500\" />\n                          </div>\n                        )}\n                      </div>\n                      \n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-lg font-medium text-gray-900 truncate\">\n                          {attempt.name}\n                        </p>\n                        <p className=\"text-sm text-gray-500 truncate\">\n                          {attempt.email}\n                        </p>\n                      </div>\n                      \n                      <div className=\"flex-shrink-0 text-right\">\n                        <p className=\"text-sm font-medium text-gray-900 capitalize\">\n                          {attempt.provider}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {new Date(attempt.timestamp).toLocaleString('ko-KR')}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n\n          {/* 사용 방법 안내 */}\n          <div className=\"mt-8 bg-blue-50 border border-blue-200 rounded-xl p-6\">\n            <h3 className=\"text-lg font-semibold text-blue-900 mb-3\">\n              💡 사용 방법\n            </h3>\n            <div className=\"text-blue-800 space-y-2\">\n              <p>1. <strong>Google 로그인 테스트:</strong> /login 페이지에서 Google 로그인</p>\n              <p>2. <strong>자동 기록:</strong> 로그인하면 자동으로 여기에 표시됩니다</p>\n              <p>3. <strong>실시간 업데이트:</strong> 5초마다 자동으로 새로고침됩니다</p>\n            </div>\n          </div>\n\n          {/* 개발자 도구 */}\n          <div className=\"mt-6 bg-gray-50 border border-gray-200 rounded-xl p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n              🔧 개발자 도구\n            </h3>\n            <div className=\"text-gray-700 space-y-2 text-sm\">\n              <p><strong>수동 추가:</strong> 브라우저 개발자 도구에서 다음 실행:</p>\n              <code className=\"block bg-gray-100 p-2 rounded text-xs\">\n                addLoginAttempt(&#123;email: 'test@example.com', name: '테스트 사용자', image: null&#125;)\n              </code>\n            </div>\n          </div>\n        </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/menu.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/admin/oauth-status.tsx",["915"],[],"import { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { \n  CheckCircle, \n  XCircle, \n  AlertTriangle,\n  RefreshCw,\n  Copy,\n  ExternalLink\n} from 'lucide-react';\n\ninterface OAuthStatus {\n  google: {\n    clientId: string;\n    clientSecret: string;\n    length: number;\n  };\n  facebook: {\n    clientId: string;\n    clientSecret: string;\n    length: number;\n  };\n  nextAuth: {\n    url: string;\n    secret: string;\n  };\n  environment: string;\n  timestamp: string;\n}\n\nexport default function OAuthStatusPage() {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n  const [oauthStatus, setOauthStatus] = useState<OAuthStatus | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // 권한 확인\n  useEffect(() => {\n    if (status === 'loading') return;\n    if (!session || session.user.role !== 'admin') {\n      router.push('/');\n    }\n  }, [session, status, router]);\n\n  // OAuth 상태 가져오기\n  useEffect(() => {\n    const fetchOAuthStatus = async () => {\n      try {\n        const response = await fetch('/api/debug/oauth');\n        const data = await response.json();\n        setOauthStatus(data);\n      } catch (error) {\n        console.error('Failed to fetch OAuth status:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (session?.user.role === 'admin') {\n      fetchOAuthStatus();\n    }\n  }, [session]);\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  const getStatusIcon = (isSet: boolean, isValid: boolean = true) => {\n    if (!isSet) return <XCircle className=\"h-5 w-5 text-red-500\" />;\n    if (!isValid) return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />;\n    return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n  };\n\n  const getStatusText = (isSet: boolean, isValid: boolean = true) => {\n    if (!isSet) return '설정되지 않음';\n    if (!isValid) return '형식 오류';\n    return '올바르게 설정됨';\n  };\n\n  if (status === 'loading' || loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!session || session.user.role !== 'admin') {\n    return <div>Access denied</div>;\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"OAuth 설정 상태 - 필직 Admin\"\n        description=\"OAuth 설정 확인 페이지\"\n        keywords=\"admin, oauth, configuration\"\n        type=\"website\"\n        locale=\"ko\"\n      />\n\n      <FacebookLayout section=\"admin\">\n        <main className=\"py-8\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              OAuth 설정 상태\n            </h1>\n            <p className=\"text-gray-600\">\n              Google과 Facebook OAuth 설정을 확인하고 문제를 진단합니다.\n            </p>\n          </div>\n\n          {oauthStatus && (\n            <div className=\"space-y-6\">\n              {/* Google OAuth */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <h2 className=\"text-xl font-semibold mb-4 flex items-center\">\n                  <img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google\" className=\"w-6 h-6 mr-2\" />\n                  Google OAuth\n                </h2>\n                \n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getStatusIcon(\n                        oauthStatus.google.clientId !== 'NOT_SET',\n                        oauthStatus.google.clientId.includes('.apps.googleusercontent.com')\n                      )}\n                      <div>\n                        <div className=\"font-medium\">Client ID</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {oauthStatus.google.clientId === 'NOT_SET' ? \n                            '설정되지 않음' : \n                            `${oauthStatus.google.clientId} (${oauthStatus.google.length}자)`\n                          }\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-sm\">\n                      {getStatusText(\n                        oauthStatus.google.clientId !== 'NOT_SET',\n                        oauthStatus.google.clientId.includes('.apps.googleusercontent.com')\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getStatusIcon(oauthStatus.google.clientSecret === 'SET')}\n                      <div>\n                        <div className=\"font-medium\">Client Secret</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {oauthStatus.google.clientSecret === 'SET' ? '설정됨' : '설정되지 않음'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-sm\">\n                      {oauthStatus.google.clientSecret === 'SET' ? '올바르게 설정됨' : '설정되지 않음'}\n                    </div>\n                  </div>\n                </div>\n\n                {oauthStatus.google.clientId === 'NOT_SET' && (\n                  <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n                    <div className=\"text-red-800 text-sm\">\n                      <strong>해결 방법:</strong>\n                      <ol className=\"list-decimal list-inside mt-2 space-y-1\">\n                        <li>Google Cloud Console에서 OAuth 클라이언트 생성</li>\n                        <li>.env.local 파일에 GOOGLE_CLIENT_ID와 GOOGLE_CLIENT_SECRET 추가</li>\n                        <li>서버 재시작</li>\n                      </ol>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Facebook OAuth */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <h2 className=\"text-xl font-semibold mb-4 flex items-center\">\n                  <div className=\"w-6 h-6 mr-2 bg-blue-600 rounded\"></div>\n                  Facebook OAuth\n                </h2>\n                \n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getStatusIcon(oauthStatus.facebook.clientId !== 'NOT_SET')}\n                      <div>\n                        <div className=\"font-medium\">App ID</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {oauthStatus.facebook.clientId === 'NOT_SET' ? \n                            '설정되지 않음' : \n                            `${oauthStatus.facebook.clientId} (${oauthStatus.facebook.length}자)`\n                          }\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-sm\">\n                      {getStatusText(oauthStatus.facebook.clientId !== 'NOT_SET')}\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getStatusIcon(oauthStatus.facebook.clientSecret === 'SET')}\n                      <div>\n                        <div className=\"font-medium\">App Secret</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {oauthStatus.facebook.clientSecret === 'SET' ? '설정됨' : '설정되지 않음'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-sm\">\n                      {oauthStatus.facebook.clientSecret === 'SET' ? '올바르게 설정됨' : '설정되지 않음'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* NextAuth 설정 */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <h2 className=\"text-xl font-semibold mb-4\">NextAuth 설정</h2>\n                \n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getStatusIcon(oauthStatus.nextAuth.url !== 'NOT_SET')}\n                      <div>\n                        <div className=\"font-medium\">NEXTAUTH_URL</div>\n                        <div className=\"text-sm text-gray-500\">{oauthStatus.nextAuth.url}</div>\n                      </div>\n                    </div>\n                    <button\n                      onClick={() => copyToClipboard(oauthStatus.nextAuth.url)}\n                      className=\"p-1 hover:bg-gray-200 rounded\"\n                    >\n                      <Copy className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getStatusIcon(oauthStatus.nextAuth.secret === 'SET')}\n                      <div>\n                        <div className=\"font-medium\">NEXTAUTH_SECRET</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {oauthStatus.nextAuth.secret === 'SET' ? '설정됨' : '설정되지 않음'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 환경 정보 */}\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <h2 className=\"text-xl font-semibold mb-4\">환경 정보</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"font-medium\">환경</div>\n                    <div className=\"text-gray-600\">{oauthStatus.environment}</div>\n                  </div>\n                  <div>\n                    <div className=\"font-medium\">마지막 확인</div>\n                    <div className=\"text-gray-600\">\n                      {new Date(oauthStatus.timestamp).toLocaleString('ko-KR')}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 유용한 링크 */}\n              <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-blue-900 mb-4\">유용한 링크</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <a\n                    href=\"https://console.cloud.google.com/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"flex items-center space-x-2 text-blue-700 hover:text-blue-800\"\n                  >\n                    <ExternalLink className=\"h-4 w-4\" />\n                    <span>Google Cloud Console</span>\n                  </a>\n                  <a\n                    href=\"https://developers.facebook.com/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"flex items-center space-x-2 text-blue-700 hover:text-blue-800\"\n                  >\n                    <ExternalLink className=\"h-4 w-4\" />\n                    <span>Facebook Developers</span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          )}\n        </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/properties.tsx",["916","917","918"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport AdminLayout from '@/components/admin/AdminLayout';\nimport { propertiesData, getPropertyStats } from '@/data/propertiesData';\nimport { Property, PropertyImage } from '@/types/property';\nimport { \n  Building, \n  Search, \n  Filter, \n  Eye, \n  EyeOff, \n  Edit, \n  Trash2, \n  Star,\n  MapPin,\n  Calendar,\n  TrendingUp,\n  Plus,\n  Download,\n  Upload,\n  MoreVertical,\n  Home,\n  Users,\n  DollarSign,\n  Image as ImageIcon,\n  X\n} from 'lucide-react';\n\nexport default function AdminProperties() {\n  const router = useRouter();\n  const [properties, setProperties] = useState<Property[]>(propertiesData);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [savedFilters, setSavedFilters] = useState<{[key: string]: any}>({});\n  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'inactive'>('all');\n  const [filterType, setFilterType] = useState<'all' | 'house' | 'condo' | 'village'>('all');\n  const [filterRegion, setFilterRegion] = useState<'all' | 'manila' | 'cebu' | 'davao' | 'boracay' | 'baguio'>('all');\n  const [sortBy, setSortBy] = useState<'date' | 'price' | 'views' | 'title'>('date');\n  const [selectedProperties, setSelectedProperties] = useState<string[]>([]);\n\n  // 통계 데이터\n  const stats = getPropertyStats();\n\n  // 필터링된 매물\n  const filteredProperties = useMemo(() => {\n    let filtered = [...properties];\n\n    // 검색\n    if (searchTerm) {\n      filtered = filtered.filter(property =>\n        property.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        property.address.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        property.contact.contactName?.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // 상태 필터\n    if (filterStatus !== 'all') {\n      filtered = filtered.filter(property => property.status === filterStatus);\n    }\n\n    // 유형 필터\n    if (filterType !== 'all') {\n      filtered = filtered.filter(property => property.type === filterType);\n    }\n\n    // 지역 필터\n    if (filterRegion !== 'all') {\n      filtered = filtered.filter(property => property.region === filterRegion);\n    }\n\n    // 정렬\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'date':\n          return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n        case 'price':\n          return b.price - a.price;\n        case 'views':\n          return (b.viewCount || 0) - (a.viewCount || 0);\n        case 'title':\n          return a.title.localeCompare(b.title);\n        default:\n          return 0;\n      }\n    });\n\n    return filtered;\n  }, [properties, searchTerm, filterStatus, filterType, filterRegion, sortBy]);\n\n  const handleToggleStatus = (propertyId: string) => {\n    setProperties(prev => prev.map(property =>\n      property.id === propertyId\n        ? { ...property, status: property.status === 'active' ? 'inactive' : 'active' }\n        : property\n    ));\n  };\n\n  const handleToggleFeatured = (propertyId: string) => {\n    setProperties(prev => prev.map(property =>\n      property.id === propertyId\n        ? { ...property, featured: !property.featured }\n        : property\n    ));\n  };\n\n  const handleDelete = (propertyId: string) => {\n    if (confirm('이 매물을 삭제하시겠습니까?')) {\n      setProperties(prev => prev.filter(property => property.id !== propertyId));\n    }\n  };\n\n  const handleSelectProperty = (propertyId: string) => {\n    setSelectedProperties(prev =>\n      prev.includes(propertyId)\n        ? prev.filter(id => id !== propertyId)\n        : [...prev, propertyId]\n    );\n  };\n\n  const handleSelectAll = () => {\n    if (selectedProperties.length === filteredProperties.length) {\n      setSelectedProperties([]);\n    } else {\n      setSelectedProperties(filteredProperties.map(p => p.id));\n    }\n  };\n\n  const handleBulkAction = (action: 'activate' | 'deactivate' | 'delete') => {\n    if (selectedProperties.length === 0) return;\n\n    const confirmMessages = {\n      activate: `${selectedProperties.length}개 매물을 일괄 활성화하시겠습니까?`,\n      deactivate: `${selectedProperties.length}개 매물을 일괄 비활성화하시겠습니까?`,\n      delete: `${selectedProperties.length}개 매물을 일괄 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`\n    };\n\n    if (confirm(confirmMessages[action])) {\n      setProperties(prev => {\n        let updated = [...prev];\n        \n        switch (action) {\n          case 'activate':\n            updated = updated.map(property =>\n              selectedProperties.includes(property.id)\n                ? { ...property, status: 'active' as const }\n                : property\n            );\n            break;\n          case 'deactivate':\n            updated = updated.map(property =>\n              selectedProperties.includes(property.id)\n                ? { ...property, status: 'inactive' as const }\n                : property\n            );\n            break;\n          case 'delete':\n            updated = updated.filter(property => !selectedProperties.includes(property.id));\n            break;\n        }\n        \n        return updated;\n      });\n      \n      setSelectedProperties([]);\n      \n      const successMessages = {\n        activate: `${selectedProperties.length}개 매물이 활성화되었습니다.`,\n        deactivate: `${selectedProperties.length}개 매물이 비활성화되었습니다.`,\n        delete: `${selectedProperties.length}개 매물이 삭제되었습니다.`\n      };\n      \n      alert(successMessages[action]);\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('en-PH', {\n      style: 'currency',\n      currency: 'PHP',\n      minimumFractionDigits: 0\n    }).format(price);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('ko-KR');\n  };\n\n  const getStatusColor = (status: string) => {\n    return status === 'active' ? 'text-green-700 bg-green-100' : 'text-red-700 bg-red-100';\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'house': return Home;\n      case 'condo': return Building;\n      case 'village': return Users;\n      default: return Building;\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        {/* 헤더 */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">매물 관리</h1>\n            <p className=\"text-gray-600\">등록된 매물을 관리하고 승인 처리를 진행하세요</p>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => router.push('/admin/property-import')}\n              className=\"flex items-center space-x-2 px-4 py-2 text-blue-700 bg-blue-100 rounded-lg hover:bg-blue-200 transition-colors\"\n            >\n              <Upload className=\"h-4 w-4\" />\n              <span>Facebook 가져오기</span>\n            </button>\n            <button\n              onClick={() => router.push('/admin/property-add')}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Plus className=\"h-4 w-4\" />\n              <span>새 매물 등록</span>\n            </button>\n          </div>\n        </div>\n\n        {/* 통계 카드 */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <Building className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">전체 매물</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                <Eye className=\"h-6 w-6 text-green-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">활성 매물</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.active}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\n                <Star className=\"h-6 w-6 text-yellow-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">추천 매물</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.featured}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center\">\n                <EyeOff className=\"h-6 w-6 text-red-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">비활성 매물</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.inactive}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 필터 및 검색 */}\n        <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center space-y-4 lg:space-y-0 lg:space-x-4\">\n            {/* 검색 */}\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"매물명, 주소, 집주인 이름으로 검색...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                />\n                {searchTerm && (\n                  <button\n                    onClick={() => setSearchTerm('')}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </button>\n                )}\n              </div>\n              \n              {/* 검색 통계 */}\n              {searchTerm && (\n                <div className=\"mt-2 text-sm text-gray-500\">\n                  \"{searchTerm}\"에 대한 검색결과: {filteredProperties.length}개\n                </div>\n              )}\n            </div>\n\n            {/* 필터들 */}\n            <div className=\"flex items-center space-x-4\">\n              <select\n                value={filterStatus}\n                onChange={(e) => setFilterStatus(e.target.value as any)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n              >\n                <option value=\"all\">모든 상태</option>\n                <option value=\"active\">활성</option>\n                <option value=\"inactive\">비활성</option>\n              </select>\n\n              <select\n                value={filterType}\n                onChange={(e) => setFilterType(e.target.value as any)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n              >\n                <option value=\"all\">모든 유형</option>\n                <option value=\"house\">하우스</option>\n                <option value=\"condo\">콘도</option>\n                <option value=\"village\">빌리지</option>\n              </select>\n\n              <select\n                value={filterRegion}\n                onChange={(e) => setFilterRegion(e.target.value as any)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n              >\n                <option value=\"all\">모든 지역</option>\n                <option value=\"manila\">Manila</option>\n                <option value=\"cebu\">Cebu</option>\n                <option value=\"davao\">Davao</option>\n                <option value=\"boracay\">Boracay</option>\n                <option value=\"baguio\">Baguio</option>\n              </select>\n\n              <select\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value as any)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n              >\n                <option value=\"date\">최신순</option>\n                <option value=\"price\">가격순</option>\n                <option value=\"views\">조회순</option>\n                <option value=\"title\">이름순</option>\n              </select>\n            </div>\n          </div>\n\n          {/* 선택된 매물 액션 */}\n          {selectedProperties.length > 0 && (\n            <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-blue-800\">\n                  {selectedProperties.length}개 매물 선택됨\n                </span>\n                <div className=\"flex items-center space-x-2\">\n                  <button \n                    onClick={() => handleBulkAction('activate')}\n                    className=\"px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\n                  >\n                    일괄 활성화\n                  </button>\n                  <button \n                    onClick={() => handleBulkAction('deactivate')}\n                    className=\"px-3 py-1 text-sm bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors\"\n                  >\n                    일괄 비활성화\n                  </button>\n                  <button \n                    onClick={() => handleBulkAction('delete')}\n                    className=\"px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n                  >\n                    일괄 삭제\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* 매물 목록 */}\n        <div className=\"bg-white border border-gray-200 rounded-xl overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 border-b border-gray-200\">\n                <tr>\n                  <th className=\"w-12 px-6 py-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedProperties.length === filteredProperties.length && filteredProperties.length > 0}\n                      onChange={handleSelectAll}\n                      className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                    />\n                  </th>\n                  <th className=\"text-left px-6 py-4 text-sm font-medium text-gray-700\">매물 정보</th>\n                  <th className=\"text-left px-6 py-4 text-sm font-medium text-gray-700\">유형/지역</th>\n                  <th className=\"text-left px-6 py-4 text-sm font-medium text-gray-700\">가격</th>\n                  <th className=\"text-left px-6 py-4 text-sm font-medium text-gray-700\">상태</th>\n                  <th className=\"text-left px-6 py-4 text-sm font-medium text-gray-700\">조회수</th>\n                  <th className=\"text-left px-6 py-4 text-sm font-medium text-gray-700\">업데이트</th>\n                  <th className=\"text-center px-6 py-4 text-sm font-medium text-gray-700\">액션</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredProperties.map((property) => {\n                  const TypeIcon = getTypeIcon(property.type);\n                  const mainImage = typeof property.images[0] === 'string' \n                    ? property.images[0] \n                    : (property.images as PropertyImage[]).find(img => img.isMain) || property.images[0];\n                  \n                  return (\n                    <tr key={property.id} className=\"border-b border-gray-100 hover:bg-gray-50\">\n                      <td className=\"px-6 py-4\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedProperties.includes(property.id)}\n                          onChange={() => handleSelectProperty(property.id)}\n                          className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          {mainImage ? (\n                            <img\n                              src={typeof mainImage === 'string' ? mainImage : mainImage.thumbnailUrl}\n                              alt={property.title}\n                              className=\"w-16 h-12 object-cover rounded-lg\"\n                            />\n                          ) : (\n                            <div className=\"w-16 h-12 bg-gray-200 rounded-lg flex items-center justify-center\">\n                              <ImageIcon className=\"h-6 w-6 text-gray-400\" />\n                            </div>\n                          )}\n                          <div>\n                            <h3 className=\"font-medium text-gray-900 line-clamp-1\">{property.title}</h3>\n                            <p className=\"text-sm text-gray-500 line-clamp-1\">{property.address}</p>\n                            <p className=\"text-xs text-gray-400\">{property.contact.contactName}</p>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <TypeIcon className=\"h-4 w-4 text-gray-500\" />\n                          <span className=\"text-sm text-gray-900 capitalize\">{property.type}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-1 mt-1\">\n                          <MapPin className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-500 capitalize\">{property.region}</span>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {formatPrice(property.price)}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          {property.bedrooms}BR / {property.bathrooms}BA\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex flex-col space-y-2\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(property.status || 'active')}`}>\n                            {property.status === 'active' ? '활성' : '비활성'}\n                          </span>\n                          {property.featured && (\n                            <span className=\"inline-flex px-2 py-1 text-xs font-medium rounded-full text-yellow-700 bg-yellow-100\">\n                              추천\n                            </span>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-1\">\n                          <TrendingUp className=\"h-4 w-4 text-gray-400\" />\n                          <span className=\"text-sm text-gray-900\">{property.viewCount}</span>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-1\">\n                          <Calendar className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-500\">{formatDate(property.updatedAt)}</span>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => handleToggleStatus(property.id)}\n                            className={`p-2 rounded-lg transition-colors ${\n                              property.status === 'active'\n                                ? 'text-green-600 hover:bg-green-100'\n                                : 'text-gray-600 hover:bg-gray-100'\n                            }`}\n                            title={property.status === 'active' ? '비활성화' : '활성화'}\n                          >\n                            {property.status === 'active' ? <Eye className=\"h-4 w-4\" /> : <EyeOff className=\"h-4 w-4\" />}\n                          </button>\n                          \n                          <button\n                            onClick={() => handleToggleFeatured(property.id)}\n                            className={`p-2 rounded-lg transition-colors ${\n                              property.featured\n                                ? 'text-yellow-600 hover:bg-yellow-100'\n                                : 'text-gray-600 hover:bg-gray-100'\n                            }`}\n                            title={property.featured ? '추천 해제' : '추천 설정'}\n                          >\n                            <Star className={`h-4 w-4 ${property.featured ? 'fill-current' : ''}`} />\n                          </button>\n                          \n                          <button\n                            onClick={() => router.push(`/admin/property-edit/${property.id}`)}\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\n                            title=\"편집\"\n                          >\n                            <Edit className=\"h-4 w-4\" />\n                          </button>\n                          \n                          <button\n                            onClick={() => handleDelete(property.id)}\n                            className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg transition-colors\"\n                            title=\"삭제\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n\n          {/* 빈 상태 */}\n          {filteredProperties.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Building className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">매물이 없습니다</h3>\n              <p className=\"text-gray-600 mb-4\">\n                {searchTerm || filterStatus !== 'all' || filterType !== 'all' || filterRegion !== 'all'\n                  ? '검색 조건에 맞는 매물이 없습니다. 필터를 조정해보세요.'\n                  : '첫 번째 매물을 등록해보세요!'\n                }\n              </p>\n              <button\n                onClick={() => router.push('/admin/property-add')}\n                className=\"inline-flex items-center space-x-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-blue-700\"\n              >\n                <Plus className=\"h-4 w-4\" />\n                <span>새 매물 등록</span>\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* 페이지네이션 (나중에 구현) */}\n        <div className=\"flex justify-center\">\n          <div className=\"text-sm text-gray-500\">\n            총 {filteredProperties.length}개의 매물\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-add.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-approvals.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-edit/[id].tsx",["919"],[],"import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport AdminLayout from '@/components/admin/AdminLayout';\nimport { propertiesData } from '@/data/propertiesData';\nimport { Property } from '@/types/property';\nimport { \n  ArrowLeft, \n  Save, \n  Eye, \n  Trash2, \n  Upload, \n  X, \n  Star,\n  MapPin,\n  Home,\n  Building,\n  Users,\n  Plus,\n  GripVertical,\n  ExternalLink\n} from 'lucide-react';\n\nexport default function PropertyEdit() {\n  const router = useRouter();\n  const { id } = router.query;\n  const [property, setProperty] = useState<Property | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [activeTab, setActiveTab] = useState<'basic' | 'details' | 'images' | 'location' | 'translations'>('basic');\n\n  // 폼 데이터\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    type: 'condo' as 'house' | 'condo' | 'apartment' | 'studio' | 'villa' | 'townhouse' | 'village',\n    region: '',\n    address: '',\n    price: 0,\n    deposit: 0,\n    bedrooms: 1,\n    bathrooms: 1,\n    area: 0,\n    floor: 0,\n    furnished: false,\n    amenities: [] as string[],\n    status: 'active' as 'active' | 'inactive' | 'rented',\n    featured: false,\n    contact: {\n      contactName: '',\n      phone: '',\n      email: '',\n      whatsapp: '',\n      telegram: ''\n    },\n    translations: {\n      ko: { title: '', description: '' },\n      zh: { title: '', description: '' },\n      ja: { title: '', description: '' },\n      en: { title: '', description: '' },\n      tl: { title: '', description: '' }\n    }\n  });\n\n  const [images, setImages] = useState<any[]>([]);\n  const [draggedImage, setDraggedImage] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState<{[key: string]: number}>({});\n  const [uploadErrors, setUploadErrors] = useState<string[]>([]);\n\n  // 데이터 로드\n  useEffect(() => {\n    if (id) {\n      const foundProperty = propertiesData.find(p => p.id === id);\n      if (foundProperty) {\n        setProperty(foundProperty);\n        setFormData({\n          title: foundProperty.title,\n          description: foundProperty.description,\n          type: foundProperty.type,\n          region: foundProperty.region,\n          address: foundProperty.address,\n          price: foundProperty.price,\n          deposit: foundProperty.deposit || 0,\n          bedrooms: foundProperty.bedrooms,\n          bathrooms: foundProperty.bathrooms,\n          area: foundProperty.area,\n          floor: foundProperty.floor || 0,\n          furnished: foundProperty.furnished,\n          amenities: foundProperty.amenities,\n          status: foundProperty.status || 'active',\n          featured: foundProperty.featured,\n          contact: {\n            contactName: foundProperty.contact.contactName || '',\n            phone: foundProperty.contact.phone || '',\n            email: foundProperty.contact.email || '',\n            whatsapp: foundProperty.contact.whatsapp || '',\n            telegram: foundProperty.contact.telegram || ''\n          },\n          translations: {\n            ko: foundProperty.translations?.ko || { title: '', description: '' },\n            zh: foundProperty.translations?.zh || { title: '', description: '' },\n            ja: foundProperty.translations?.ja || { title: '', description: '' },\n            en: foundProperty.translations?.en || { title: '', description: '' },\n            tl: foundProperty.translations?.tl || { title: '', description: '' }\n          }\n        });\n        setImages(foundProperty.images || []);\n      }\n      setIsLoading(false);\n    }\n  }, [id]);\n\n  const handleInputChange = (field: string, value: any) => {\n    if (field.includes('.')) {\n      const [parent, child] = field.split('.');\n      setFormData(prev => ({\n        ...prev,\n        [parent]: {\n          ...(prev[parent as keyof typeof prev] as any),\n          [child]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const handleTranslationChange = (lang: string, field: string, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      translations: {\n        ...prev.translations,\n        [lang]: {\n          ...prev.translations[lang as keyof typeof prev.translations],\n          [field]: value\n        }\n      }\n    }));\n  };\n\n  const handleAmenityToggle = (amenity: string) => {\n    setFormData(prev => ({\n      ...prev,\n      amenities: prev.amenities.includes(amenity)\n        ? prev.amenities.filter(a => a !== amenity)\n        : [...prev.amenities, amenity]\n    }));\n  };\n\n  const handleImageUpload = (files: FileList | null) => {\n    if (!files) return;\n    \n    setUploadErrors([]);\n    \n    Array.from(files).forEach(file => {\n      // 파일 유효성 검사\n      if (!file.type.startsWith('image/')) {\n        setUploadErrors(prev => [...prev, `${file.name}: 이미지 파일만 업로드 가능합니다.`]);\n        return;\n      }\n      \n      if (file.size > 5 * 1024 * 1024) { // 5MB\n        setUploadErrors(prev => [...prev, `${file.name}: 파일 크기는 5MB 이하여야 합니다.`]);\n        return;\n      }\n      \n      const imageId = `img_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      setUploadProgress(prev => ({ ...prev, [imageId]: 0 }));\n      \n      const reader = new FileReader();\n      \n      reader.onprogress = (e) => {\n        if (e.lengthComputable) {\n          const progress = (e.loaded / e.total) * 100;\n          setUploadProgress(prev => ({ ...prev, [imageId]: progress }));\n        }\n      };\n      \n      reader.onload = (e) => {\n        const newImage = {\n          id: imageId,\n          url: e.target?.result as string,\n          thumbnailUrl: e.target?.result as string,\n          alt: `매물 이미지 ${images.length + 1}`,\n          order: images.length + 1,\n          isMain: images.length === 0,\n          file: file,\n          fileName: file.name,\n          fileSize: file.size\n        };\n        \n        setImages(prev => [...prev, newImage]);\n        setUploadProgress(prev => ({ ...prev, [imageId]: 100 }));\n        \n        // 진행률 표시를 잠시 유지한 후 제거\n        setTimeout(() => {\n          setUploadProgress(prev => {\n            const newProgress = { ...prev };\n            delete newProgress[imageId];\n            return newProgress;\n          });\n        }, 1000);\n      };\n      \n      reader.onerror = () => {\n        setUploadErrors(prev => [...prev, `${file.name}: 파일 읽기 중 오류가 발생했습니다.`]);\n        setUploadProgress(prev => {\n          const newProgress = { ...prev };\n          delete newProgress[imageId];\n          return newProgress;\n        });\n      };\n      \n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleDeleteImage = (imageId: string) => {\n    setImages(prev => {\n      const filtered = prev.filter(img => img.id !== imageId);\n      if (filtered.length > 0 && !filtered.some(img => img.isMain)) {\n        filtered[0].isMain = true;\n      }\n      return filtered.map((img, index) => ({\n        ...img,\n        order: index + 1\n      }));\n    });\n  };\n\n  const handleSetMainImage = (imageId: string) => {\n    setImages(prev => prev.map(img => ({\n      ...img,\n      isMain: img.id === imageId\n    })));\n  };\n\n  const handleDragStart = (e: React.DragEvent, imageId: string) => {\n    setDraggedImage(imageId);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e: React.DragEvent, targetImageId: string) => {\n    e.preventDefault();\n    \n    if (draggedImage && draggedImage !== targetImageId) {\n      setImages(prev => {\n        const draggedIndex = prev.findIndex(img => img.id === draggedImage);\n        const targetIndex = prev.findIndex(img => img.id === targetImageId);\n        \n        const reorderedImages = [...prev];\n        const [draggedItem] = reorderedImages.splice(draggedIndex, 1);\n        reorderedImages.splice(targetIndex, 0, draggedItem);\n        \n        return reorderedImages.map((img, index) => ({\n          ...img,\n          order: index + 1\n        }));\n      });\n    }\n    \n    setDraggedImage(null);\n  };\n\n  const handleFileDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const files = e.dataTransfer.files;\n    handleImageUpload(files);\n  };\n\n  const handleFileDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  const handleFileDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'saving' | 'success' | 'error'>('idle');\n  const [saveMessage, setSaveMessage] = useState('');\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    setSaveStatus('saving');\n    setSaveMessage('매물 정보를 저장하는 중...');\n    \n    try {\n      // 폼 유효성 검사\n      if (!formData.title || !formData.price || !formData.region) {\n        throw new Error('필수 필드가 누락되었습니다. 제목, 가격, 지역을 모두 입력해주세요.');\n      }\n\n      // 실제로는 API 호출\n      const saveData = {\n        ...formData,\n        images: images,\n        updatedAt: new Date().toISOString()\n      };\n      \n      console.log('Saving property:', saveData);\n      \n      // 시뮬레이션\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      setSaveStatus('success');\n      setSaveMessage('매물이 성공적으로 저장되었습니다!');\n      \n      // 3초 후 목록으로 이동\n      setTimeout(() => {\n        router.push('/admin/properties');\n      }, 2000);\n      \n    } catch (error) {\n      setSaveStatus('error');\n      setSaveMessage(error instanceof Error ? error.message : '저장 중 오류가 발생했습니다.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'house': return Home;\n      case 'condo': return Building;\n      case 'village': return Users;\n      default: return Building;\n    }\n  };\n\n  const TypeIcon = getTypeIcon(formData.type);\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  if (!property) {\n    return (\n      <AdminLayout>\n        <div className=\"text-center py-12\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">매물을 찾을 수 없습니다</h3>\n          <button\n            onClick={() => router.push('/admin/properties')}\n            className=\"text-primary hover:underline\"\n          >\n            매물 목록으로 돌아가기\n          </button>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        {/* 헤더 */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={() => router.push('/admin/properties')}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-800 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>매물 목록</span>\n            </button>\n            \n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900 flex items-center space-x-3\">\n                <TypeIcon className=\"h-6 w-6 text-primary\" />\n                <span>매물 편집</span>\n              </h1>\n              <p className=\"text-gray-600\">{property.title}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => window.open(`/property/${property.id}`, '_blank')}\n              className=\"flex items-center space-x-2 px-4 py-2 text-blue-700 bg-blue-100 rounded-lg hover:bg-blue-200 transition-colors\"\n            >\n              <ExternalLink className=\"h-4 w-4\" />\n              <span>미리보기</span>\n            </button>\n            \n            <button\n              onClick={handleSave}\n              disabled={isSaving}\n              className=\"flex items-center space-x-2 px-6 py-2 bg-primary text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n            >\n              {isSaving ? (\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n              ) : (\n                <Save className=\"h-4 w-4\" />\n              )}\n              <span>{isSaving ? '저장 중...' : '저장'}</span>\n            </button>\n          </div>\n        </div>\n\n        {/* 상태 표시 */}\n        <div className=\"bg-white border border-gray-200 rounded-xl p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-600\">상태:</span>\n                <select\n                  value={formData.status}\n                  onChange={(e) => handleInputChange('status', e.target.value)}\n                  className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary focus:border-primary\"\n                >\n                  <option value=\"active\">활성</option>\n                  <option value=\"inactive\">비활성</option>\n                </select>\n              </div>\n              \n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.featured}\n                  onChange={(e) => handleInputChange('featured', e.target.checked)}\n                  className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                />\n                <Star className={`h-4 w-4 ${formData.featured ? 'text-yellow-500 fill-current' : 'text-gray-400'}`} />\n                <span className=\"text-sm text-gray-700\">추천 매물</span>\n              </label>\n            </div>\n            \n            <div className=\"text-sm text-gray-500\">\n              조회수: {property.viewCount} • \n              생성: {new Date(property.createdAt).toLocaleDateString()} • \n              수정: {new Date(property.updatedAt).toLocaleDateString()}\n            </div>\n          </div>\n        </div>\n\n        {/* 탭 네비게이션 */}\n        <div className=\"bg-white border border-gray-200 rounded-xl\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"flex space-x-8 px-6\">\n              {[\n                { id: 'basic', label: '기본 정보' },\n                { id: 'details', label: '상세 정보' },\n                { id: 'images', label: '이미지' },\n                { id: 'location', label: '위치' },\n                { id: 'translations', label: '다국어' }\n              ].map(tab => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`py-4 text-sm font-medium border-b-2 transition-colors ${\n                    activeTab === tab.id\n                      ? 'border-primary text-primary'\n                      : 'border-transparent text-gray-500 hover:text-gray-700'\n                  }`}\n                >\n                  {tab.label}\n                </button>\n              ))}\n            </nav>\n          </div>\n\n          <div className=\"p-6\">\n            {/* 기본 정보 탭 */}\n            {activeTab === 'basic' && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      매물 제목 *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.title}\n                      onChange={(e) => handleInputChange('title', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"매물 제목을 입력하세요\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      매물 유형 *\n                    </label>\n                    <select\n                      value={formData.type}\n                      onChange={(e) => handleInputChange('type', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                    >\n                      <option value=\"house\">House</option>\n                      <option value=\"condo\">Condominium</option>\n                      <option value=\"village\">Village</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      지역 *\n                    </label>\n                    <select\n                      value={formData.region}\n                      onChange={(e) => handleInputChange('region', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                    >\n                      <option value=\"\">지역 선택</option>\n                      <option value=\"manila\">Manila</option>\n                      <option value=\"cebu\">Cebu</option>\n                      <option value=\"davao\">Davao</option>\n                      <option value=\"boracay\">Boracay</option>\n                      <option value=\"baguio\">Baguio</option>\n                    </select>\n                  </div>\n\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      매물 설명 *\n                    </label>\n                    <textarea\n                      value={formData.description}\n                      onChange={(e) => handleInputChange('description', e.target.value)}\n                      rows={4}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      placeholder=\"매물에 대한 상세한 설명을 입력하세요\"\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 상세 정보 탭 */}\n            {activeTab === 'details' && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      월 렌트비 (PHP) *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.price}\n                      onChange={(e) => handleInputChange('price', Number(e.target.value))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      min=\"0\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      보증금 (PHP) *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.deposit}\n                      onChange={(e) => handleInputChange('deposit', Number(e.target.value))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      min=\"0\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      면적 (sqm) *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.area}\n                      onChange={(e) => handleInputChange('area', Number(e.target.value))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      min=\"0\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      침실 수 *\n                    </label>\n                    <select\n                      value={formData.bedrooms}\n                      onChange={(e) => handleInputChange('bedrooms', Number(e.target.value))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                    >\n                      {[1, 2, 3, 4, 5].map(num => (\n                        <option key={num} value={num}>{num} Bedroom{num > 1 ? 's' : ''}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      화장실 수 *\n                    </label>\n                    <select\n                      value={formData.bathrooms}\n                      onChange={(e) => handleInputChange('bathrooms', Number(e.target.value))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                    >\n                      {[1, 2, 3, 4, 5].map(num => (\n                        <option key={num} value={num}>{num} Bathroom{num > 1 ? 's' : ''}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  {formData.type === 'condo' && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        층수\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={formData.floor}\n                        onChange={(e) => handleInputChange('floor', Number(e.target.value))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                        min=\"1\"\n                      />\n                    </div>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.furnished}\n                      onChange={(e) => handleInputChange('furnished', e.target.checked)}\n                      className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                    />\n                    <span className=\"text-sm text-gray-700\">가구 포함</span>\n                  </label>\n                </div>\n\n                {/* 편의시설 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                    편의시설\n                  </label>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                    {[\n                      'parking', 'security', 'aircon', 'wifi', 'balcony', 'garden',\n                      'swimming_pool', 'gym', 'elevator', 'playground', 'laundry'\n                    ].map(amenity => (\n                      <label key={amenity} className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          checked={formData.amenities.includes(amenity)}\n                          onChange={() => handleAmenityToggle(amenity)}\n                          className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n                        />\n                        <span className=\"text-sm text-gray-700 capitalize\">\n                          {amenity.replace('_', ' ')}\n                        </span>\n                      </label>\n                    ))}\n                  </div>\n                </div>\n\n                {/* 연락처 정보 */}\n                <div className=\"border-t border-gray-200 pt-6\">\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-4\">연락처 정보</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        담당자명\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={formData.contact.contactName}\n                        onChange={(e) => handleInputChange('contact.contactName', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        전화번호\n                      </label>\n                      <input\n                        type=\"tel\"\n                        value={formData.contact.phone}\n                        onChange={(e) => handleInputChange('contact.phone', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        이메일\n                      </label>\n                      <input\n                        type=\"email\"\n                        value={formData.contact.email}\n                        onChange={(e) => handleInputChange('contact.email', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        WhatsApp\n                      </label>\n                      <input\n                        type=\"tel\"\n                        value={formData.contact.whatsapp}\n                        onChange={(e) => handleInputChange('contact.whatsapp', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 이미지 탭 */}\n            {activeTab === 'images' && (\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">매물 이미지</h3>\n                  <div className=\"flex items-center space-x-3\">\n                    <input\n                      type=\"file\"\n                      id=\"image-upload\"\n                      multiple\n                      accept=\"image/*\"\n                      onChange={(e) => handleImageUpload(e.target.files)}\n                      className=\"hidden\"\n                    />\n                    <label\n                      htmlFor=\"image-upload\"\n                      className=\"flex items-center space-x-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\"\n                    >\n                      <Upload className=\"h-4 w-4\" />\n                      <span>이미지 추가</span>\n                    </label>\n                    {images.length > 0 && (\n                      <div className=\"text-sm text-gray-500\">\n                        {images.length}개 이미지\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  {images.map((image, index) => (\n                    <div\n                      key={image.id}\n                      className={`relative group cursor-move ${\n                        draggedImage === image.id ? 'opacity-50' : ''\n                      }`}\n                      draggable\n                      onDragStart={(e) => handleDragStart(e, image.id)}\n                      onDragOver={handleDragOver}\n                      onDrop={(e) => handleDrop(e, image.id)}\n                    >\n                      <img\n                        src={image.url}\n                        alt={image.alt}\n                        className=\"w-full h-48 object-cover rounded-lg\"\n                      />\n                      \n                      {/* 업로드 진행률 */}\n                      {uploadProgress[image.id] !== undefined && uploadProgress[image.id] < 100 && (\n                        <div className=\"absolute inset-0 bg-black bg-opacity-50 rounded-lg flex items-center justify-center\">\n                          <div className=\"text-white text-center\">\n                            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2\"></div>\n                            <div className=\"text-sm\">{Math.round(uploadProgress[image.id])}%</div>\n                          </div>\n                        </div>\n                      )}\n                      \n                      {/* 메인 이미지 표시 */}\n                      {image.isMain && (\n                        <div className=\"absolute top-2 left-2 bg-primary text-white px-2 py-1 rounded text-xs font-medium\">\n                          메인\n                        </div>\n                      )}\n                      \n                      {/* 순서 표시 */}\n                      <div className=\"absolute top-2 right-2 bg-black bg-opacity-70 text-white px-2 py-1 rounded text-xs\">\n                        {index + 1}\n                      </div>\n                      \n                      {/* 파일 정보 */}\n                      <div className=\"absolute bottom-2 left-2 bg-black bg-opacity-70 text-white px-2 py-1 rounded text-xs\">\n                        {image.fileName && (\n                          <div className=\"truncate max-w-24\" title={image.fileName}>\n                            {image.fileName}\n                          </div>\n                        )}\n                        {image.fileSize && (\n                          <div className=\"text-xs opacity-75\">\n                            {(image.fileSize / 1024 / 1024).toFixed(1)}MB\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* 호버 오버레이 */}\n                      <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded-lg flex items-center justify-center opacity-0 group-hover:opacity-100\">\n                        <div className=\"flex items-center space-x-2\">\n                          {!image.isMain && (\n                            <button\n                              onClick={() => handleSetMainImage(image.id)}\n                              className=\"p-2 bg-white text-primary rounded-lg hover:bg-gray-100\"\n                              title=\"메인 이미지로 설정\"\n                            >\n                              <Star className=\"h-4 w-4\" />\n                            </button>\n                          )}\n                          <button\n                            className=\"p-2 bg-white text-gray-700 rounded-lg hover:bg-gray-100\"\n                            title=\"드래그하여 순서 변경\"\n                          >\n                            <GripVertical className=\"h-4 w-4\" />\n                          </button>\n                          <button\n                            onClick={() => handleDeleteImage(image.id)}\n                            className=\"p-2 bg-white text-red-600 rounded-lg hover:bg-red-50\"\n                            title=\"이미지 삭제\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {/* 업로드 중인 진행률 표시 */}\n                  {Object.entries(uploadProgress).map(([id, progress]) => (\n                    progress < 100 && (\n                      <div key={id} className=\"border-2 border-dashed border-blue-300 rounded-lg h-48 flex items-center justify-center bg-blue-50\">\n                        <div className=\"text-center\">\n                          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n                          <div className=\"text-sm text-blue-800\">업로드 중...</div>\n                          <div className=\"text-xs text-blue-600\">{Math.round(progress)}%</div>\n                        </div>\n                      </div>\n                    )\n                  ))}\n                  \n                  {/* 이미지 추가 영역 (드래그 앤 드롭) */}\n                  <div\n                    className={`border-2 border-dashed rounded-lg h-48 flex items-center justify-center transition-colors cursor-pointer ${\n                      isDragging\n                        ? 'border-primary bg-blue-50'\n                        : 'border-gray-300 hover:border-gray-400'\n                    }`}\n                    onDrop={handleFileDrop}\n                    onDragOver={handleFileDragOver}\n                    onDragLeave={handleFileDragLeave}\n                    onClick={() => document.getElementById('image-upload')?.click()}\n                  >\n                    <div className=\"text-center\">\n                      <Upload className={`h-8 w-8 mx-auto mb-2 ${\n                        isDragging ? 'text-primary' : 'text-gray-400'\n                      }`} />\n                      <span className={`text-sm ${\n                        isDragging ? 'text-primary' : 'text-gray-500'\n                      }`}>\n                        {isDragging ? '파일을 놓으세요' : '이미지 추가 또는 드래그'}\n                      </span>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        JPG, PNG, GIF 파일 지원\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 업로드 에러 표시 */}\n                {uploadErrors.length > 0 && (\n                  <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-red-900 mb-2\">업로드 오류</h4>\n                    <ul className=\"text-sm text-red-800 space-y-1\">\n                      {uploadErrors.map((error, index) => (\n                        <li key={index}>• {error}</li>\n                      ))}\n                    </ul>\n                    <button\n                      onClick={() => setUploadErrors([])}\n                      className=\"mt-2 text-xs text-red-600 hover:text-red-800 underline\"\n                    >\n                      오류 메시지 닫기\n                    </button>\n                  </div>\n                )}\n\n                {/* 이미지 관리 도움말 */}\n                {images.length > 0 && (\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-blue-900 mb-2\">이미지 관리 가이드</h4>\n                    <ul className=\"text-sm text-blue-800 space-y-1\">\n                      <li>• 드래그 앤 드롭으로 이미지 순서를 변경할 수 있습니다</li>\n                      <li>• 별표 아이콘을 클릭하여 메인 이미지를 설정하세요</li>\n                      <li>• 메인 이미지는 매물 목록에서 대표 이미지로 표시됩니다</li>\n                      <li>• 고화질 이미지를 업로드하면 더 좋은 효과를 얻을 수 있습니다</li>\n                      <li>• 최대 파일 크기: 5MB, 지원 형식: JPG, PNG, GIF</li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* 위치 탭 */}\n            {activeTab === 'location' && (\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    상세 주소 *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.address}\n                    onChange={(e) => handleInputChange('address', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                    placeholder=\"상세 주소를 입력하세요\"\n                  />\n                </div>\n\n                <div className=\"h-64 bg-gray-200 rounded-lg flex items-center justify-center\">\n                  <div className=\"text-center text-gray-500\">\n                    <MapPin className=\"h-12 w-12 mx-auto mb-2\" />\n                    <p>지도 컴포넌트</p>\n                    <p className=\"text-sm\">Google Maps API 연동 필요</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 다국어 탭 */}\n            {activeTab === 'translations' && (\n              <div className=\"space-y-6\">\n                {[\n                  { code: 'ko', name: '한국어', flag: '🇰🇷' },\n                  { code: 'zh', name: '중국어', flag: '🇨🇳' },\n                  { code: 'ja', name: '일본어', flag: '🇯🇵' },\n                  { code: 'en', name: '영어', flag: '🇺🇸' }\n                ].map(lang => (\n                  <div key={lang.code} className=\"border border-gray-200 rounded-lg p-4\">\n                    <h4 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center space-x-2\">\n                      <span>{lang.flag}</span>\n                      <span>{lang.name}</span>\n                    </h4>\n                    \n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          제목\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={formData.translations[lang.code as keyof typeof formData.translations]?.title || ''}\n                          onChange={(e) => handleTranslationChange(lang.code, 'title', e.target.value)}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          설명\n                        </label>\n                        <textarea\n                          value={formData.translations[lang.code as keyof typeof formData.translations]?.description || ''}\n                          onChange={(e) => handleTranslationChange(lang.code, 'description', e.target.value)}\n                          rows={3}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 저장 상태 알림 */}\n        {saveStatus !== 'idle' && (\n          <div className={`bg-white border rounded-xl p-4 ${\n            saveStatus === 'success' ? 'border-green-200 bg-green-50' :\n            saveStatus === 'error' ? 'border-red-200 bg-red-50' :\n            'border-blue-200 bg-blue-50'\n          }`}>\n            <div className=\"flex items-center space-x-3\">\n              {saveStatus === 'saving' && (\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600\"></div>\n              )}\n              {saveStatus === 'success' && (\n                <div className=\"w-5 h-5 bg-green-600 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                </div>\n              )}\n              {saveStatus === 'error' && (\n                <div className=\"w-5 h-5 bg-red-600 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </div>\n              )}\n              <span className={`text-sm font-medium ${\n                saveStatus === 'success' ? 'text-green-800' :\n                saveStatus === 'error' ? 'text-red-800' :\n                'text-blue-800'\n              }`}>\n                {saveMessage}\n              </span>\n            </div>\n          </div>\n        )}\n\n        {/* 저장 버튼 (하단 고정) */}\n        <div className=\"bg-white border border-gray-200 rounded-xl p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-gray-500\">\n              마지막 저장: {new Date(property.updatedAt).toLocaleString()}\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={() => router.push('/admin/properties')}\n                className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n                disabled={isSaving}\n              >\n                취소\n              </button>\n              \n              <button\n                onClick={handleSave}\n                disabled={isSaving || saveStatus === 'success'}\n                className={`flex items-center space-x-2 px-6 py-2 rounded-lg transition-colors ${\n                  saveStatus === 'success' \n                    ? 'bg-green-600 text-white' \n                    : 'bg-primary text-white hover:bg-blue-700'\n                } disabled:opacity-50`}\n              >\n                {isSaving ? (\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                ) : saveStatus === 'success' ? (\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                ) : (\n                  <Save className=\"h-4 w-4\" />\n                )}\n                <span>\n                  {isSaving ? '저장 중...' : \n                   saveStatus === 'success' ? '저장 완료' : \n                   '저장'}\n                </span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/property-import.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/admin/setup-oauth.tsx",["920","921","922","923"],[],"import { useState } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { \n  ExternalLink, \n  Copy, \n  CheckCircle, \n  ArrowRight,\n  AlertCircle\n} from 'lucide-react';\n\nexport default function SetupOAuthPage() {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n  const [copied, setCopied] = useState<string | null>(null);\n\n  const copyToClipboard = (text: string, label: string) => {\n    navigator.clipboard.writeText(text);\n    setCopied(label);\n    setTimeout(() => setCopied(null), 2000);\n  };\n\n  const redirectUri = 'http://localhost:3005/api/auth/callback/google';\n  const baseUrl = 'http://localhost:3005';\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"OAuth 설정 가이드 - 필직 Admin\"\n        description=\"Google OAuth 설정 단계별 가이드\"\n        keywords=\"admin, oauth, google, setup\"\n        type=\"website\"\n        locale=\"ko\"\n      />\n\n      <FacebookLayout section=\"admin\">\n        <main className=\"py-8\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              Google OAuth 설정 가이드\n            </h1>\n            <p className=\"text-gray-600\">\n              단계별로 따라하면 5분 안에 Google 로그인을 설정할 수 있습니다.\n            </p>\n          </div>\n\n          <div className=\"space-y-8\">\n            {/* Step 1 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold mr-3\">\n                  1\n                </div>\n                <h2 className=\"text-xl font-semibold\">Google Cloud Console 접속</h2>\n              </div>\n              \n              <div className=\"ml-11\">\n                <p className=\"text-gray-600 mb-4\">\n                  Google Cloud Console에 접속해서 새 프로젝트를 만듭니다.\n                </p>\n                <a\n                  href=\"https://console.cloud.google.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                >\n                  <ExternalLink className=\"w-4 h-4 mr-2\" />\n                  Google Cloud Console 열기\n                </a>\n              </div>\n            </div>\n\n            {/* Step 2 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold mr-3\">\n                  2\n                </div>\n                <h2 className=\"text-xl font-semibold\">OAuth 동의 화면 설정</h2>\n              </div>\n              \n              <div className=\"ml-11\">\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\n                  <div className=\"flex items-center\">\n                    <AlertCircle className=\"w-5 h-5 text-yellow-600 mr-2\" />\n                    <span className=\"text-yellow-800 font-medium\">\n                      이 단계를 건너뛰면 \"401 invalid_client\" 오류가 발생합니다!\n                    </span>\n                  </div>\n                </div>\n                \n                <ol className=\"list-decimal list-inside space-y-2 text-gray-600\">\n                  <li><strong>APIs & Services</strong> → <strong>OAuth consent screen</strong> 클릭</li>\n                  <li><strong>User Type:</strong> External 선택 → <strong>Create</strong></li>\n                  <li><strong>App name:</strong> 필직 (Phil Jig)</li>\n                  <li><strong>User support email:</strong> 본인 이메일 입력</li>\n                  <li><strong>Developer contact information:</strong> 본인 이메일 입력</li>\n                  <li>나머지는 기본값으로 두고 <strong>Save and Continue</strong></li>\n                </ol>\n              </div>\n            </div>\n\n            {/* Step 3 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold mr-3\">\n                  3\n                </div>\n                <h2 className=\"text-xl font-semibold\">OAuth 클라이언트 생성</h2>\n              </div>\n              \n              <div className=\"ml-11\">\n                <ol className=\"list-decimal list-inside space-y-2 text-gray-600 mb-4\">\n                  <li><strong>APIs & Services</strong> → <strong>Credentials</strong> 클릭</li>\n                  <li><strong>+ CREATE CREDENTIALS</strong> → <strong>OAuth client ID</strong> 선택</li>\n                  <li><strong>Application type:</strong> Web application</li>\n                  <li><strong>Name:</strong> 필직 Web Client</li>\n                </ol>\n\n                <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n                  <h4 className=\"font-medium mb-2\">Authorized JavaScript origins:</h4>\n                  <div className=\"flex items-center space-x-2\">\n                    <code className=\"bg-white px-3 py-2 rounded border flex-1 text-sm\">\n                      {baseUrl}\n                    </code>\n                    <button\n                      onClick={() => copyToClipboard(baseUrl, 'origin')}\n                      className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                    >\n                      {copied === 'origin' ? <CheckCircle className=\"w-4 h-4\" /> : <Copy className=\"w-4 h-4\" />}\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium mb-2\">Authorized redirect URIs:</h4>\n                  <div className=\"flex items-center space-x-2\">\n                    <code className=\"bg-white px-3 py-2 rounded border flex-1 text-sm\">\n                      {redirectUri}\n                    </code>\n                    <button\n                      onClick={() => copyToClipboard(redirectUri, 'redirect')}\n                      className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                    >\n                      {copied === 'redirect' ? <CheckCircle className=\"w-4 h-4\" /> : <Copy className=\"w-4 h-4\" />}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Step 4 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold mr-3\">\n                  4\n                </div>\n                <h2 className=\"text-xl font-semibold\">클라이언트 ID와 Secret 복사</h2>\n              </div>\n              \n              <div className=\"ml-11\">\n                <p className=\"text-gray-600 mb-4\">\n                  OAuth 클라이언트가 생성되면 Client ID와 Client Secret을 복사해서 \n                  <code className=\"bg-gray-100 px-2 py-1 rounded text-sm\">.env.local</code> 파일에 붙여넣으세요.\n                </p>\n                \n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium mb-2\">형식 예시:</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div>\n                      <strong>Client ID:</strong> \n                      <code className=\"text-blue-600 ml-2\">1234567890-abcdefg.apps.googleusercontent.com</code>\n                    </div>\n                    <div>\n                      <strong>Client Secret:</strong> \n                      <code className=\"text-blue-600 ml-2\">GOCSPX-abcdefghijklmnop</code>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Step 5 */}\n            <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center font-bold mr-3\">\n                  5\n                </div>\n                <h2 className=\"text-xl font-semibold\">환경변수 업데이트</h2>\n              </div>\n              \n              <div className=\"ml-11\">\n                <p className=\"text-gray-600 mb-4\">\n                  복사한 값들을 <code className=\"bg-gray-100 px-2 py-1 rounded text-sm\">.env.local</code> 파일에 붙여넣으세요:\n                </p>\n                \n                <div className=\"bg-gray-900 text-green-400 rounded-lg p-4 text-sm font-mono\">\n                  <div>GOOGLE_CLIENT_ID=여기에_클라이언트_ID_붙여넣기</div>\n                  <div>GOOGLE_CLIENT_SECRET=여기에_클라이언트_시크릿_붙여넣기</div>\n                </div>\n                \n                <div className=\"mt-4 text-sm text-gray-500\">\n                  파일 경로: <code>/mnt/c/Users/peter/Documents/jig/.env.local</code>\n                </div>\n              </div>\n            </div>\n\n            {/* Step 6 */}\n            <div className=\"bg-green-50 rounded-xl p-6 border border-green-200\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-8 h-8 bg-green-600 text-white rounded-full flex items-center justify-center font-bold mr-3\">\n                  6\n                </div>\n                <h2 className=\"text-xl font-semibold text-green-900\">서버 재시작 및 테스트</h2>\n              </div>\n              \n              <div className=\"ml-11\">\n                <ol className=\"list-decimal list-inside space-y-2 text-green-800 mb-4\">\n                  <li>터미널에서 <code className=\"bg-white px-2 py-1 rounded\">Ctrl+C</code>로 서버 중지</li>\n                  <li><code className=\"bg-white px-2 py-1 rounded\">npm run dev</code>로 서버 재시작</li>\n                  <li>로그인 페이지에서 Google 로그인 테스트</li>\n                </ol>\n\n                <div className=\"flex space-x-3\">\n                  <a\n                    href=\"/auth/login\"\n                    className=\"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                  >\n                    로그인 페이지로 이동\n                    <ArrowRight className=\"w-4 h-4 ml-2\" />\n                  </a>\n                  <a\n                    href=\"/admin/oauth-status\"\n                    className=\"inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n                  >\n                    OAuth 상태 확인\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/admin/templates.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/admin/users.tsx",["924","925"],[],"import { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { \n  Users, \n  Search, \n  Filter,\n  Eye,\n  Shield,\n  Calendar,\n  Mail,\n  ChevronDown,\n  CheckCircle,\n  XCircle,\n  RefreshCw,\n  LogIn,\n  User,\n  Facebook,\n  Chrome\n} from 'lucide-react';\n\ninterface UserData {\n  _id: string;\n  name: string;\n  email: string;\n  image?: string;\n  provider: string;\n  role: string;\n  isActive: boolean;\n  lastLogin: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport default function AdminUsersPage() {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n  const [users, setUsers] = useState<UserData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterProvider, setFilterProvider] = useState('');\n  const [filterRole, setFilterRole] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [stats, setStats] = useState<any>(null);\n\n  // 권한 확인\n  useEffect(() => {\n    if (status === 'loading') return;\n    if (!session || session.user.role !== 'admin') {\n      router.push('/');\n    }\n  }, [session, status, router]);\n\n  // 사용자 목록 가져오기\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: '20',\n        search: searchTerm,\n        provider: filterProvider,\n        role: filterRole\n      });\n\n      const response = await fetch(`/api/admin/users?${params}`);\n      const data = await response.json();\n\n      if (data.success) {\n        setUsers(data.data);\n        setTotalPages(Math.ceil(data.meta.total / data.meta.limit));\n        setStats(data.stats);\n      }\n    } catch (error) {\n      console.error('Failed to fetch users:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (session?.user.role === 'admin') {\n      fetchUsers();\n    }\n  }, [currentPage, searchTerm, filterProvider, filterRole, session]);\n\n  const updateUserRole = async (userId: string, newRole: string) => {\n    try {\n      const response = await fetch(`/api/admin/users?userId=${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ role: newRole })\n      });\n\n      if (response.ok) {\n        fetchUsers();\n      }\n    } catch (error) {\n      console.error('Failed to update user role:', error);\n    }\n  };\n\n  const toggleUserStatus = async (userId: string, isActive: boolean) => {\n    try {\n      const response = await fetch(`/api/admin/users?userId=${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ isActive })\n      });\n\n      if (response.ok) {\n        fetchUsers();\n      }\n    } catch (error) {\n      console.error('Failed to toggle user status:', error);\n    }\n  };\n\n  if (status === 'loading' || session?.user.role !== 'admin') {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"사용자 관리 - 필직 Admin\"\n        description=\"관리자 전용 사용자 관리 페이지\"\n        keywords=\"admin, users, management\"\n        type=\"website\"\n        locale=\"ko\"\n      />\n\n      <FacebookLayout section=\"admin\">\n        <main className=\"py-8\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              <Users className=\"inline-block h-8 w-8 mr-2\" />\n              사용자 관리\n            </h1>\n            <p className=\"text-gray-600\">\n              등록된 사용자들을 관리하고 권한을 설정할 수 있습니다.\n            </p>\n          </div>\n\n          {/* 통계 카드 */}\n          {stats && (\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">전체 사용자</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {users.length}\n                    </p>\n                  </div>\n                  <Users className=\"h-8 w-8 text-blue-500\" />\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">활성 사용자</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {stats.activeUsers[0]?.count || 0}\n                    </p>\n                  </div>\n                  <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">오늘 로그인</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {stats.todayLogins[0]?.count || 0}\n                    </p>\n                  </div>\n                  <LogIn className=\"h-8 w-8 text-purple-500\" />\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">관리자</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">\n                      {stats.byRole.find((r: any) => r._id === 'admin')?.count || 0}\n                    </p>\n                  </div>\n                  <Shield className=\"h-8 w-8 text-red-500\" />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* 검색 및 필터 */}\n          <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200 mb-6\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1 relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"이름 또는 이메일로 검색...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                />\n              </div>\n\n              <select\n                value={filterProvider}\n                onChange={(e) => setFilterProvider(e.target.value)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">모든 제공자</option>\n                <option value=\"google\">Google</option>\n                <option value=\"facebook\">Facebook</option>\n              </select>\n\n              <select\n                value={filterRole}\n                onChange={(e) => setFilterRole(e.target.value)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">모든 역할</option>\n                <option value=\"user\">일반 사용자</option>\n                <option value=\"admin\">관리자</option>\n              </select>\n\n              <button\n                onClick={fetchUsers}\n                className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                <RefreshCw className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n\n          {/* 사용자 목록 */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50 border-b border-gray-200\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      사용자\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      로그인 방법\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      역할\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      상태\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      마지막 로그인\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      가입일\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      작업\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {loading ? (\n                    <tr>\n                      <td colSpan={7} className=\"text-center py-8 text-gray-500\">\n                        로딩 중...\n                      </td>\n                    </tr>\n                  ) : users.length === 0 ? (\n                    <tr>\n                      <td colSpan={7} className=\"text-center py-8 text-gray-500\">\n                        사용자가 없습니다.\n                      </td>\n                    </tr>\n                  ) : (\n                    users.map((user) => (\n                      <tr key={user._id} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"h-10 w-10 flex-shrink-0\">\n                              {user.image ? (\n                                <img\n                                  className=\"h-10 w-10 rounded-full\"\n                                  src={user.image}\n                                  alt={user.name}\n                                />\n                              ) : (\n                                <div className=\"h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center\">\n                                  <User className=\"h-6 w-6 text-gray-500\" />\n                                </div>\n                              )}\n                            </div>\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                {user.name}\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                {user.email}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center text-sm text-gray-900\">\n                            {user.provider === 'google' ? (\n                              <Chrome className=\"h-4 w-4 mr-2 text-blue-500\" />\n                            ) : (\n                              <Facebook className=\"h-4 w-4 mr-2 text-blue-600\" />\n                            )}\n                            {user.provider}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <select\n                            value={user.role}\n                            onChange={(e) => updateUserRole(user._id, e.target.value)}\n                            className=\"text-sm border border-gray-300 rounded px-2 py-1\"\n                          >\n                            <option value=\"user\">일반 사용자</option>\n                            <option value=\"admin\">관리자</option>\n                          </select>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span\n                            className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                              user.isActive\n                                ? 'bg-green-100 text-green-800'\n                                : 'bg-red-100 text-red-800'\n                            }`}\n                          >\n                            {user.isActive ? '활성' : '비활성'}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(user.lastLogin).toLocaleDateString('ko-KR')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(user.createdAt).toLocaleDateString('ko-KR')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                          <button\n                            onClick={() => toggleUserStatus(user._id, !user.isActive)}\n                            className={`px-3 py-1 rounded text-white ${\n                              user.isActive\n                                ? 'bg-red-500 hover:bg-red-600'\n                                : 'bg-green-500 hover:bg-green-600'\n                            }`}\n                          >\n                            {user.isActive ? '비활성화' : '활성화'}\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n\n            {/* 페이지네이션 */}\n            {totalPages > 1 && (\n              <div className=\"bg-gray-50 px-6 py-3 flex items-center justify-between border-t border-gray-200\">\n                <div className=\"flex items-center\">\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                    disabled={currentPage === 1}\n                    className=\"px-3 py-1 bg-white border border-gray-300 rounded-md disabled:opacity-50\"\n                  >\n                    이전\n                  </button>\n                  <span className=\"mx-4 text-sm text-gray-700\">\n                    {currentPage} / {totalPages}\n                  </span>\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                    disabled={currentPage === totalPages}\n                    className=\"px-3 py-1 bg-white border border-gray-300 rounded-md disabled:opacity-50\"\n                  >\n                    다음\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/approve-property.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/dashboard/activities.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/dashboard/stats.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/pending-properties.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/properties/index.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/reject-property.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/admin/users.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/[...nextauth].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/login.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/refresh.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/auth/verify.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/community/create-post.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/community/groups.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts/[id]/comment.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts/[id]/like.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts/[id].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/community/posts.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/cron/daily-updates.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/debug/oauth.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/drivers/register.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/icons/apple-touch-icon.png.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/immigration/updates.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/jobs/[id].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/jobs/index.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/language/[locale].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/language/index.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/marketplace/create.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/marketplace/items.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/[id]/read.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/conversations.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/reply.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/send.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/messages/user/[email].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/police/updates.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/profile/update.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/[id]/like.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/[id].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/index.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/search.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/properties/submit.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/travel/destinations.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/travel/guides.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/trips/create.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/upload/images/[id].ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/upload/images/index.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/api/weather/current.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/auth/error.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/auth/login.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/auth/signup.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/auth/verify-email.tsx",["926"],[],"import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { \n  Mail, \n  CheckCircle, \n  RefreshCcw, \n  AlertCircle, \n  Clock,\n  Shield,\n  ArrowLeft\n} from 'lucide-react';\n\nexport default function VerifyEmailPage() {\n  const router = useRouter();\n  const { email, token } = router.query;\n  \n  const [verificationStatus, setVerificationStatus] = useState<'verifying' | 'success' | 'expired' | 'invalid' | 'pending'>('pending');\n  const [isResending, setIsResending] = useState(false);\n  const [resendCooldown, setResendCooldown] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    if (token) {\n      verifyEmailToken(token as string);\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (resendCooldown > 0) {\n      const timer = setTimeout(() => setResendCooldown(resendCooldown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [resendCooldown]);\n\n  const verifyEmailToken = async (verificationToken: string) => {\n    setVerificationStatus('verifying');\n    \n    try {\n      // 실제로는 API 호출\n      console.log('Verifying token:', verificationToken);\n      \n      // 시뮬레이션\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // 토큰 검증 시뮬레이션\n      if (verificationToken === 'valid-token') {\n        setVerificationStatus('success');\n        setSuccess('이메일 인증이 완료되었습니다!');\n        \n        // 3초 후 로그인 페이지로 리다이렉트\n        setTimeout(() => {\n          router.push('/auth/login?message=email_verified');\n        }, 3000);\n      } else if (verificationToken === 'expired-token') {\n        setVerificationStatus('expired');\n      } else {\n        setVerificationStatus('invalid');\n      }\n      \n    } catch (err) {\n      setVerificationStatus('invalid');\n      setError('인증 처리 중 오류가 발생했습니다.');\n    }\n  };\n\n  const resendVerificationEmail = async () => {\n    if (resendCooldown > 0) return;\n    \n    setIsResending(true);\n    setError('');\n    \n    try {\n      // 실제로는 API 호출\n      console.log('Resending verification email to:', email);\n      \n      // 시뮬레이션\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      setSuccess('인증 이메일이 다시 발송되었습니다. 받은 편지함을 확인해주세요.');\n      setResendCooldown(60); // 60초 쿨다운\n      \n    } catch (err) {\n      setError('이메일 재발송 중 오류가 발생했습니다. 다시 시도해주세요.');\n    } finally {\n      setIsResending(false);\n    }\n  };\n\n  const renderVerificationStatus = () => {\n    switch (verificationStatus) {\n      case 'verifying':\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <RefreshCcw className=\"h-8 w-8 text-blue-600 animate-spin\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              이메일 인증 중...\n            </h2>\n            <p className=\"text-gray-600\">\n              잠시만 기다려주세요. 이메일 인증을 처리하고 있습니다.\n            </p>\n          </div>\n        );\n\n      case 'success':\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <CheckCircle className=\"h-8 w-8 text-green-600\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              인증 완료!\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              이메일 인증이 성공적으로 완료되었습니다. 이제 모든 서비스를 이용하실 수 있습니다.\n            </p>\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n              <p className=\"text-sm text-green-800\">\n                잠시 후 로그인 페이지로 자동 이동됩니다...\n              </p>\n            </div>\n          </div>\n        );\n\n      case 'expired':\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Clock className=\"h-8 w-8 text-yellow-600\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              인증 링크 만료\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              인증 링크가 만료되었습니다. 보안을 위해 인증 링크는 24시간 후 자동으로 만료됩니다.\n            </p>\n            <button\n              onClick={resendVerificationEmail}\n              disabled={isResending || resendCooldown > 0}\n              className=\"w-full flex justify-center items-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed mb-4\"\n            >\n              {isResending ? (\n                <>\n                  <RefreshCcw className=\"h-4 w-4 mr-2 animate-spin\" />\n                  이메일 발송 중...\n                </>\n              ) : resendCooldown > 0 ? (\n                `${resendCooldown}초 후 재발송 가능`\n              ) : (\n                <>\n                  <Mail className=\"h-4 w-4 mr-2\" />\n                  새 인증 이메일 발송\n                </>\n              )}\n            </button>\n          </div>\n        );\n\n      case 'invalid':\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <AlertCircle className=\"h-8 w-8 text-red-600\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              유효하지 않은 링크\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              인증 링크가 유효하지 않습니다. 링크가 손상되었거나 이미 사용된 것 같습니다.\n            </p>\n            <button\n              onClick={resendVerificationEmail}\n              disabled={isResending || resendCooldown > 0}\n              className=\"w-full flex justify-center items-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed mb-4\"\n            >\n              {isResending ? (\n                <>\n                  <RefreshCcw className=\"h-4 w-4 mr-2 animate-spin\" />\n                  이메일 발송 중...\n                </>\n              ) : resendCooldown > 0 ? (\n                `${resendCooldown}초 후 재발송 가능`\n              ) : (\n                <>\n                  <Mail className=\"h-4 w-4 mr-2\" />\n                  새 인증 이메일 발송\n                </>\n              )}\n            </button>\n          </div>\n        );\n\n      default: // pending\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Mail className=\"h-8 w-8 text-blue-600\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              이메일을 확인해주세요\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              {email ? (\n                <>\n                  <strong>{email}</strong> 주소로 인증 이메일을 보내드렸습니다.<br />\n                  받은 편지함에서 인증 링크를 클릭해주세요.\n                </>\n              ) : (\n                '회원가입 시 입력하신 이메일 주소로 인증 이메일을 보내드렸습니다.'\n              )}\n            </p>\n            \n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n              <h4 className=\"text-sm font-medium text-blue-900 mb-2\">📬 이메일이 오지 않았나요?</h4>\n              <ul className=\"text-xs text-blue-800 space-y-1 text-left\">\n                <li>• 스팸 메일함을 확인해보세요</li>\n                <li>• 이메일 주소를 정확히 입력했는지 확인해보세요</li>\n                <li>• 최대 5분까지 소요될 수 있습니다</li>\n              </ul>\n            </div>\n\n            <button\n              onClick={resendVerificationEmail}\n              disabled={isResending || resendCooldown > 0}\n              className=\"w-full flex justify-center items-center py-3 px-4 border border-gray-300 rounded-lg shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed mb-4\"\n            >\n              {isResending ? (\n                <>\n                  <RefreshCcw className=\"h-4 w-4 mr-2 animate-spin\" />\n                  이메일 발송 중...\n                </>\n              ) : resendCooldown > 0 ? (\n                `${resendCooldown}초 후 재발송 가능`\n              ) : (\n                <>\n                  <RefreshCcw className=\"h-4 w-4 mr-2\" />\n                  인증 이메일 다시 보내기\n                </>\n              )}\n            </button>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-white flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* 헤더 */}\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-12 w-12 bg-blue-600 rounded-xl flex items-center justify-center\">\n            <Shield className=\"h-6 w-6 text-white\" />\n          </div>\n          <h1 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            이메일 인증\n          </h1>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            계정 보안을 위해 이메일 인증이 필요합니다\n          </p>\n        </div>\n\n        {/* 인증 상태 표시 */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-8\">\n          {renderVerificationStatus()}\n        </div>\n\n        {/* 에러/성공 메시지 */}\n        {error && (\n          <div className=\"flex items-center space-x-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n            <AlertCircle className=\"h-5 w-5 text-red-600\" />\n            <span className=\"text-sm text-red-800\">{error}</span>\n          </div>\n        )}\n\n        {success && verificationStatus !== 'success' && (\n          <div className=\"flex items-center space-x-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\n            <CheckCircle className=\"h-5 w-5 text-green-600\" />\n            <span className=\"text-sm text-green-800\">{success}</span>\n          </div>\n        )}\n\n        {/* 뒤로 가기 */}\n        <div className=\"text-center\">\n          <Link href=\"/auth/login\" className=\"inline-flex items-center text-sm text-blue-600 hover:text-blue-700\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            로그인 페이지로 돌아가기\n          </Link>\n        </div>\n\n        {/* 보안 안내 */}\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-2\">\n            <Shield className=\"h-5 w-5 text-gray-600 mt-0.5\" />\n            <div className=\"text-sm text-gray-700\">\n              <p className=\"font-medium mb-1\">🔒 보안 인증</p>\n              <ul className=\"text-xs space-y-1\">\n                <li>• 이메일 인증은 계정 보안을 위해 필수입니다</li>\n                <li>• 인증 링크는 24시간 후 자동으로 만료됩니다</li>\n                <li>• 문제가 지속되면 고객센터로 문의해주세요</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/blog/index.tsx",["927","928"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport DynamicHeader from '@/components/common/DynamicHeader';\nimport FloatingContactButton from '@/components/common/FloatingContactButton';\nimport PortalLayout from '@/components/layout/PortalLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { BreadcrumbSchema } from '@/components/seo/JsonLd';\nimport { Calendar, User, Clock, Tag, Search, TrendingUp, Eye } from 'lucide-react';\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  content: string;\n  author: string;\n  publishedAt: string;\n  readTime: number;\n  category: string;\n  tags: string[];\n  image: string;\n  views: number;\n  featured: boolean;\n}\n\nexport default function BlogIndex() {\n  const router = useRouter();\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // 블로그 포스트 데이터\n  const blogPosts: BlogPost[] = [\n    {\n      id: 'ultimate-guide-manila-apartments',\n      title: 'Ultimate Guide to Finding Apartments in Manila for Foreigners',\n      excerpt: 'Everything you need to know about renting apartments in Manila as a foreigner, including best areas, pricing, and legal requirements.',\n      content: '',\n      author: 'Sarah Kim',\n      publishedAt: '2024-01-15',\n      readTime: 8,\n      category: 'City Guides',\n      tags: ['Manila', 'Apartment Hunting', 'Foreigner Guide'],\n      image: '/images/blog/manila-guide.jpg',\n      views: 2547,\n      featured: true\n    },\n    {\n      id: 'monthly-stay-cebu-digital-nomads',\n      title: 'Monthly Stay in Cebu: Perfect for Digital Nomads',\n      excerpt: 'Discover why Cebu is becoming a top destination for digital nomads and how to find the perfect monthly stay apartment.',\n      content: '',\n      author: 'Mike Rodriguez',\n      publishedAt: '2024-01-12',\n      readTime: 6,\n      category: 'Digital Nomad',\n      tags: ['Cebu', 'Digital Nomad', 'Monthly Stay'],\n      image: '/images/blog/cebu-nomad.jpg',\n      views: 1876,\n      featured: true\n    },\n    {\n      id: 'philippines-rental-legal-guide',\n      title: 'Legal Guide: Rental Rights and Responsibilities in Philippines',\n      excerpt: 'Understanding your rights and responsibilities as a foreign tenant in the Philippines. Essential legal information for renters.',\n      content: '',\n      author: 'Attorney Maria Santos',\n      publishedAt: '2024-01-10',\n      readTime: 12,\n      category: 'Legal',\n      tags: ['Legal Rights', 'Tenant Rights', 'Philippines Law'],\n      image: '/images/blog/legal-guide.jpg',\n      views: 1654,\n      featured: false\n    },\n    {\n      id: 'cost-living-philippines-foreigners',\n      title: 'Cost of Living in Philippines: A Complete Breakdown for Foreigners',\n      excerpt: 'Detailed analysis of living costs across major Philippine cities including housing, food, transportation, and entertainment.',\n      content: '',\n      author: 'David Chen',\n      publishedAt: '2024-01-08',\n      readTime: 10,\n      category: 'Cost of Living',\n      tags: ['Cost of Living', 'Budget Planning', 'Philippines'],\n      image: '/images/blog/cost-living.jpg',\n      views: 3241,\n      featured: true\n    },\n    {\n      id: 'boracay-long-term-rental-guide',\n      title: 'Long-term Rentals in Boracay: Paradise Living Guide',\n      excerpt: 'How to find and secure long-term rental accommodations in Boracay. Tips for island living and what to expect.',\n      content: '',\n      author: 'Emma Johnson',\n      publishedAt: '2024-01-05',\n      readTime: 7,\n      category: 'Island Living',\n      tags: ['Boracay', 'Island Living', 'Beach Rentals'],\n      image: '/images/blog/boracay-guide.jpg',\n      views: 1432,\n      featured: false\n    },\n    {\n      id: 'philippines-internet-speed-guide',\n      title: 'Internet Speed and Connectivity Guide for Remote Workers',\n      excerpt: 'Essential guide to internet connectivity in Philippines apartments. Best providers, speeds, and areas for remote work.',\n      content: '',\n      author: 'Tech Team',\n      publishedAt: '2024-01-03',\n      readTime: 5,\n      category: 'Technology',\n      tags: ['Internet', 'Remote Work', 'Connectivity'],\n      image: '/images/blog/internet-guide.jpg',\n      views: 2156,\n      featured: false\n    }\n  ];\n\n  const categories = ['all', 'City Guides', 'Digital Nomad', 'Legal', 'Cost of Living', 'Island Living', 'Technology'];\n\n  // 필터링된 포스트\n  const filteredPosts = useMemo(() => {\n    let filtered = blogPosts;\n    \n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(post => post.category === selectedCategory);\n    }\n    \n    if (searchTerm) {\n      filtered = filtered.filter(post =>\n        post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n    \n    return filtered;\n  }, [selectedCategory, searchTerm]);\n\n  const featuredPosts = blogPosts.filter(post => post.featured);\n  const popularPosts = [...blogPosts].sort((a, b) => (b.views || 0) - (a.views || 0)).slice(0, 5);\n\n  const handleLanguageChange = (language: string) => {\n    setCurrentLanguage(language);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatViews = (views: number) => {\n    if (views >= 1000) {\n      return `${(views / 1000).toFixed(1)}k`;\n    }\n    return views.toString();\n  };\n\n  // SEO 설정\n  const seoConfig = {\n    title: 'Philippines Rental Blog - Tips, Guides & Insights for Foreigners',\n    description: 'Expert tips, city guides, and insights for foreigners renting in Philippines. From Manila apartments to Cebu monthly stays, get the latest rental advice.',\n    keywords: 'Philippines rental blog, apartment rental tips, expat living Philippines, Manila rental guide, Cebu digital nomad, Philippines living tips',\n    image: '/images/og-blog.jpg'\n  };\n\n  const breadcrumbs = [\n    { name: 'Home', url: '/' },\n    { name: 'Blog', url: '/blog' }\n  ];\n\n  return (\n    <>\n      <SEOHead\n        title={seoConfig.title}\n        description={seoConfig.description}\n        keywords={seoConfig.keywords}\n        image={seoConfig.image}\n        type=\"website\"\n        locale={currentLanguage}\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n      />\n      \n      <BreadcrumbSchema items={breadcrumbs} />\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <DynamicHeader \n          currentLanguage={currentLanguage} \n          onLanguageChange={handleLanguageChange} \n        />\n        \n        <PortalLayout>\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                📖 Philippines Rental Blog\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\n                Expert tips, city guides, and insights for foreigners living in the Philippines. \n                From apartment hunting to local culture, we've got you covered.\n              </p>\n\n              {/* Search and Filter */}\n              <div className=\"max-w-4xl mx-auto\">\n                <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\n                  {/* Search */}\n                  <div className=\"flex-1 relative\">\n                    <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search articles...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                  \n                  {/* Category Filter */}\n                  <select\n                    value={selectedCategory}\n                    onChange={(e) => setSelectedCategory(e.target.value)}\n                    className=\"px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    {categories.map(category => (\n                      <option key={category} value={category}>\n                        {category === 'all' ? 'All Categories' : category}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {/* Featured Posts */}\n            {selectedCategory === 'all' && !searchTerm && (\n              <div className=\"mb-12\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n                  <TrendingUp className=\"h-6 w-6 mr-2 text-blue-600\" />\n                  Featured Articles\n                </h2>\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  {featuredPosts.slice(0, 2).map((post) => (\n                    <Link key={post.id} href={`/blog/${post.id}`} className=\"block bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow cursor-pointer\">\n                      <div>\n                        <div className=\"relative h-48\">\n                          <Image\n                            src={post.image}\n                            alt={post.title}\n                            fill\n                            className=\"object-cover\"\n                          />\n                          <div className=\"absolute top-4 left-4\">\n                            <span className=\"bg-blue-600 text-white px-3 py-1 rounded-full text-sm font-medium\">\n                              Featured\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"p-6\">\n                          <div className=\"flex items-center gap-4 text-sm text-gray-500 mb-3\">\n                            <div className=\"flex items-center\">\n                              <Calendar className=\"h-4 w-4 mr-1\" />\n                              {formatDate(post.publishedAt)}\n                            </div>\n                            <div className=\"flex items-center\">\n                              <Clock className=\"h-4 w-4 mr-1\" />\n                              {post.readTime} min read\n                            </div>\n                            <div className=\"flex items-center\">\n                              <Eye className=\"h-4 w-4 mr-1\" />\n                              {formatViews(post.views)}\n                            </div>\n                          </div>\n                          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{post.title}</h3>\n                          <p className=\"text-gray-600 mb-4\">{post.excerpt}</p>\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center\">\n                              <User className=\"h-4 w-4 mr-1 text-gray-400\" />\n                              <span className=\"text-sm text-gray-600\">{post.author}</span>\n                            </div>\n                            <span className=\"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm\">\n                              {post.category}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {/* Main Content */}\n              <div className=\"lg:col-span-2\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h2 className=\"text-2xl font-bold text-gray-900\">\n                    {searchTerm ? `Search Results (${filteredPosts.length})` : \n                     selectedCategory === 'all' ? 'Latest Articles' : `${selectedCategory} Articles`}\n                  </h2>\n                </div>\n\n                {/* Blog Posts Grid */}\n                <div className=\"space-y-8\">\n                  {filteredPosts.map((post) => (\n                    <Link key={post.id} href={`/blog/${post.id}`} className=\"block bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\">\n                      <article>\n                        <div className=\"md:flex\">\n                          <div className=\"md:w-1/3 relative h-48 md:h-auto\">\n                            <Image\n                              src={post.image}\n                              alt={post.title}\n                              fill\n                              className=\"object-cover\"\n                            />\n                          </div>\n                          <div className=\"md:w-2/3 p-6\">\n                            <div className=\"flex items-center gap-4 text-sm text-gray-500 mb-3\">\n                              <div className=\"flex items-center\">\n                                <Calendar className=\"h-4 w-4 mr-1\" />\n                                {formatDate(post.publishedAt)}\n                              </div>\n                              <div className=\"flex items-center\">\n                                <Clock className=\"h-4 w-4 mr-1\" />\n                                {post.readTime} min read\n                              </div>\n                              <div className=\"flex items-center\">\n                                <Eye className=\"h-4 w-4 mr-1\" />\n                                {formatViews(post.views)}\n                              </div>\n                            </div>\n                            <h3 className=\"text-xl font-bold text-gray-900 mb-2 hover:text-blue-600 transition-colors\">\n                              {post.title}\n                            </h3>\n                            <p className=\"text-gray-600 mb-4\">{post.excerpt}</p>\n                            <div className=\"flex items-center justify-between\">\n                              <div className=\"flex items-center\">\n                                <User className=\"h-4 w-4 mr-1 text-gray-400\" />\n                                <span className=\"text-sm text-gray-600\">{post.author}</span>\n                              </div>\n                              <div className=\"flex items-center gap-2\">\n                                <span className=\"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm\">\n                                  {post.category}\n                                </span>\n                                {post.featured && (\n                                  <span className=\"bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm\">\n                                    Featured\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </article>\n                    </Link>\n                  ))}\n                </div>\n\n                {/* No Results */}\n                {filteredPosts.length === 0 && (\n                  <div className=\"text-center py-12\">\n                    <div className=\"text-gray-500 text-lg mb-4\">\n                      No articles found matching your criteria.\n                    </div>\n                    <button \n                      onClick={() => {\n                        setSearchTerm('');\n                        setSelectedCategory('all');\n                      }}\n                      className=\"text-blue-600 hover:text-blue-700 font-medium\"\n                    >\n                      Show all articles\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              {/* Sidebar */}\n              <div className=\"lg:col-span-1\">\n                {/* Popular Posts */}\n                <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200 mb-8\">\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                    <TrendingUp className=\"h-5 w-5 mr-2 text-blue-600\" />\n                    Popular Articles\n                  </h3>\n                  <div className=\"space-y-4\">\n                    {popularPosts.map((post, index) => (\n                      <Link key={post.id} href={`/blog/${post.id}`} className=\"block cursor-pointer hover:bg-gray-50 p-2 rounded-lg transition-colors\">\n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0\">\n                            {index + 1}\n                          </div>\n                          <div className=\"flex-1\">\n                            <h4 className=\"font-medium text-gray-900 mb-1 text-sm leading-tight\">\n                              {post.title}\n                            </h4>\n                            <div className=\"flex items-center text-xs text-gray-500\">\n                              <Eye className=\"h-3 w-3 mr-1\" />\n                              {formatViews(post.views)} views\n                            </div>\n                          </div>\n                        </div>\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Categories */}\n                <div className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200 mb-8\">\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                    <Tag className=\"h-5 w-5 mr-2 text-blue-600\" />\n                    Categories\n                  </h3>\n                  <div className=\"space-y-2\">\n                    {categories.filter(cat => cat !== 'all').map(category => {\n                      const count = blogPosts.filter(post => post.category === category).length;\n                      return (\n                        <button\n                          key={category}\n                          onClick={() => setSelectedCategory(category)}\n                          className={`w-full flex items-center justify-between p-2 rounded-lg text-left transition-colors ${\n                            selectedCategory === category \n                              ? 'bg-blue-50 text-blue-700' \n                              : 'hover:bg-gray-50 text-gray-700'\n                          }`}\n                        >\n                          <span>{category}</span>\n                          <span className=\"text-sm\">{count}</span>\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n\n                {/* Newsletter Signup */}\n                <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl p-6\">\n                  <h3 className=\"text-lg font-bold mb-2\">Stay Updated</h3>\n                  <p className=\"text-sm mb-4 opacity-90\">\n                    Get the latest rental tips and Philippines living guides delivered to your inbox.\n                  </p>\n                  <div className=\"space-y-3\">\n                    <input\n                      type=\"email\"\n                      placeholder=\"Your email address\"\n                      className=\"w-full px-4 py-2 rounded-lg text-gray-900 border-0 focus:ring-2 focus:ring-white\"\n                    />\n                    <button className=\"w-full bg-white text-blue-600 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors\">\n                      Subscribe\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </PortalLayout>\n\n        <FloatingContactButton />\n      </div>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/community/create-post.tsx",["929","930"],[],"import { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport PortalLayout from '@/components/layout/PortalLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { ArrowLeft, Image, MapPin, Tag, Users } from 'lucide-react';\nimport { toast } from 'react-hot-toast';\n\nexport default function CreatePost() {\n  const router = useRouter();\n  const [formData, setFormData] = useState({\n    title: '',\n    content: '',\n    category: 'general',\n    group: '',\n    tags: [] as string[],\n    images: [] as File[],\n    anonymous: false\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  const categories = [\n    { id: 'general', name: '일반', nameEn: 'General', icon: '💬' },\n    { id: 'questions', name: '질문', nameEn: 'Questions', icon: '❓' },\n    { id: 'housing', name: '주거정보', nameEn: 'Housing Info', icon: '🏠' },\n    { id: 'jobs', name: '구인구직', nameEn: 'Jobs', icon: '💼' },\n    { id: 'buy-sell', name: '중고거래', nameEn: 'Buy & Sell', icon: '🛒' },\n    { id: 'events', name: '이벤트', nameEn: 'Events', icon: '🎉' },\n    { id: 'life', name: '일상생활', nameEn: 'Daily Life', icon: '☕' },\n    { id: 'tips', name: '팁과 정보', nameEn: 'Tips & Info', icon: '💡' }\n  ];\n\n  const groups = [\n    { id: 'manila-korean', name: '마닐라 한인회', nameEn: 'Manila Korean Community' },\n    { id: 'angeles-korean', name: '앙헬레스 한인회', nameEn: 'Angeles Korean Community' },\n    { id: 'cebu-korean', name: '세부 한인회', nameEn: 'Cebu Korean Community' },\n    { id: 'business-owners', name: '사업자 모임', nameEn: 'Business Owners' },\n    { id: 'students', name: '유학생 모임', nameEn: 'Students' },\n    { id: 'moms', name: '필리핀 맘카페', nameEn: 'Filipino Moms' }\n  ];\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.title.trim() || !formData.content.trim()) {\n      toast.error('제목과 내용을 입력해주세요.');\n      return;\n    }\n\n    setIsSubmitting(true);\n    \n    try {\n      const response = await fetch('/api/community/create-post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: formData.title,\n          content: formData.content,\n          category: formData.category,\n          tags: formData.tags\n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        toast.success('게시글이 작성되었습니다!');\n        router.push('/community?posted=true');\n      } else {\n        throw new Error(data.error || 'Failed to create post');\n      }\n    } catch (error) {\n      toast.error('게시글 작성에 실패했습니다. 다시 시도해주세요.');\n      console.error('Post creation error:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, ...files]\n    }));\n  };\n\n  const removeImage = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n\n  const addTag = (tag: string) => {\n    if (tag && !formData.tags.includes(tag) && formData.tags.length < 5) {\n      setFormData(prev => ({\n        ...prev,\n        tags: [...prev.tags, tag]\n      }));\n    }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n    setFormData(prev => ({\n      ...prev,\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\n    }));\n  };\n\n  return (\n    <PortalLayout>\n      <SEOHead\n        title=\"게시글 작성 | 필리핀 한인 커뮤니티\"\n        description=\"필리핀 한인 커뮤니티에 새로운 게시글을 작성하세요\"\n      />\n\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <button\n            onClick={() => router.back()}\n            className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 mb-4\"\n          >\n            <ArrowLeft className=\"h-5 w-5\" />\n            <span>돌아가기</span>\n          </button>\n          \n          <h1 className=\"text-3xl font-bold text-gray-900\">\n            {(currentLanguage as string) === 'ko' ? '새 게시글 작성' : 'Create New Post'}\n          </h1>\n          <p className=\"text-gray-600 mt-2\">\n            {(currentLanguage as string) === 'ko' \n              ? '커뮤니티 회원들과 정보를 공유하세요' \n              : 'Share information with community members'}\n          </p>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Title */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              제목 *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"게시글 제목을 입력하세요\"\n              maxLength={100}\n            />\n            <p className=\"text-sm text-gray-500 mt-1\">\n              {formData.title.length}/100\n            </p>\n          </div>\n\n          {/* Category and Group */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                카테고리 *\n              </label>\n              <select\n                value={formData.category}\n                onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value }))}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                {categories.map(cat => (\n                  <option key={cat.id} value={cat.id}>\n                    {cat.icon} {(currentLanguage as string) === 'ko' ? cat.name : cat.nameEn}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                그룹 (선택사항)\n              </label>\n              <select\n                value={formData.group}\n                onChange={(e) => setFormData(prev => ({ ...prev, group: e.target.value }))}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">그룹 선택</option>\n                {groups.map(group => (\n                  <option key={group.id} value={group.id}>\n                    {(currentLanguage as string) === 'ko' ? group.name : group.nameEn}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Content */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              내용 *\n            </label>\n            <textarea\n              value={formData.content}\n              onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              rows={10}\n              placeholder=\"내용을 입력하세요...\"\n            />\n          </div>\n\n          {/* Tags */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              태그 (최대 5개)\n            </label>\n            <div className=\"flex flex-wrap gap-2 mb-2\">\n              {formData.tags.map(tag => (\n                <span\n                  key={tag}\n                  className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm flex items-center space-x-2\"\n                >\n                  <span>{tag}</span>\n                  <button\n                    type=\"button\"\n                    onClick={() => removeTag(tag)}\n                    className=\"text-blue-500 hover:text-blue-700\"\n                  >\n                    ×\n                  </button>\n                </span>\n              ))}\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"태그를 입력하고 Enter를 누르세요\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  const input = e.currentTarget;\n                  addTag(input.value.trim());\n                  input.value = '';\n                }\n              }}\n            />\n          </div>\n\n          {/* Image Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              이미지 첨부 (선택사항)\n            </label>\n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6\">\n              <input\n                type=\"file\"\n                id=\"image-upload\"\n                multiple\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                className=\"hidden\"\n              />\n              <label\n                htmlFor=\"image-upload\"\n                className=\"flex flex-col items-center cursor-pointer\"\n              >\n                <Image className=\"h-12 w-12 text-gray-400 mb-2\" />\n                <span className=\"text-gray-600\">클릭하여 이미지를 업로드하세요</span>\n                <span className=\"text-sm text-gray-500 mt-1\">최대 5장, 각 5MB 이하</span>\n              </label>\n            </div>\n            \n            {/* Image Preview */}\n            {formData.images.length > 0 && (\n              <div className=\"grid grid-cols-3 md:grid-cols-5 gap-2 mt-4\">\n                {formData.images.map((file, index) => (\n                  <div key={index} className=\"relative group\">\n                    <img\n                      src={URL.createObjectURL(file)}\n                      alt={`Preview ${index + 1}`}\n                      className=\"w-full h-24 object-cover rounded-lg\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => removeImage(index)}\n                      className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Anonymous Option */}\n          <div className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              id=\"anonymous\"\n              checked={formData.anonymous}\n              onChange={(e) => setFormData(prev => ({ ...prev, anonymous: e.target.checked }))}\n              className=\"rounded text-blue-600 focus:ring-blue-500\"\n            />\n            <label htmlFor=\"anonymous\" className=\"text-sm text-gray-700\">\n              익명으로 작성하기\n            </label>\n          </div>\n\n          {/* Submit Buttons */}\n          <div className=\"flex items-center justify-between pt-6 border-t\">\n            <button\n              type=\"button\"\n              onClick={() => router.back()}\n              className=\"px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n            >\n              취소\n            </button>\n            \n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n            >\n              {isSubmitting ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n                  <span>게시 중...</span>\n                </>\n              ) : (\n                <span>게시하기</span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </PortalLayout>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/community/post/[id].tsx",["931","932","933","934","935"],[],"import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport PortalLayout from '@/components/layout/PortalLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { \n  ArrowLeft, \n  ThumbsUp, \n  MessageSquare, \n  Share2, \n  Bookmark, \n  Clock, \n  MapPin,\n  MoreVertical,\n  Send\n} from 'lucide-react';\n\ninterface CommunityPost {\n  id: string;\n  author: {\n    id: string;\n    name: string;\n    avatar: string;\n    verified: boolean;\n    location: string;\n  };\n  category: string;\n  title: string;\n  titleKo: string;\n  titleTl: string;\n  content: string;\n  contentKo: string;\n  contentTl: string;\n  images: string[];\n  tags: string[];\n  likes: number;\n  comments: number;\n  shares: number;\n  views: number;\n  createdAt: string;\n  updatedAt: string;\n  isLiked: boolean;\n  isBookmarked: boolean;\n  isPinned: boolean;\n  status: 'active' | 'hidden' | 'reported';\n}\n\ninterface Comment {\n  id: string;\n  author: {\n    id: string;\n    name: string;\n    avatar: string;\n    verified: boolean;\n  };\n  content: string;\n  createdAt: string;\n  likes: number;\n  isLiked: boolean;\n  replies: Reply[];\n}\n\ninterface Reply {\n  id: string;\n  author: {\n    id: string;\n    name: string;\n    avatar: string;\n    verified: boolean;\n  };\n  content: string;\n  createdAt: string;\n  likes: number;\n  isLiked: boolean;\n}\n\nexport default function PostDetailPage() {\n  const router = useRouter();\n  const { id } = router.query;\n  const [post, setPost] = useState<CommunityPost | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [commentText, setCommentText] = useState('');\n  const [replyTo, setReplyTo] = useState<string | null>(null);\n  const [replyText, setReplyText] = useState('');\n\n  useEffect(() => {\n    if (id) {\n      fetchPostDetail();\n    }\n  }, [id]);\n\n  const fetchPostDetail = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/community/posts/${id}`);\n      const data = await response.json();\n      \n      if (data.success) {\n        setPost(data.data.post);\n        setComments(data.data.comments);\n      }\n    } catch (error) {\n      console.error('Failed to fetch post detail:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLikeToggle = () => {\n    if (!post) return;\n    setPost({\n      ...post,\n      isLiked: !post.isLiked,\n      likes: post.isLiked ? post.likes - 1 : post.likes + 1\n    });\n  };\n\n  const handleBookmarkToggle = () => {\n    if (!post) return;\n    setPost({\n      ...post,\n      isBookmarked: !post.isBookmarked\n    });\n  };\n\n  const handleCommentSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!commentText.trim()) return;\n\n    const newComment: Comment = {\n      id: `comment_${Date.now()}`,\n      author: {\n        id: 'current_user',\n        name: '현재 사용자',\n        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        verified: false\n      },\n      content: commentText,\n      createdAt: new Date().toISOString(),\n      likes: 0,\n      isLiked: false,\n      replies: []\n    };\n\n    setComments([newComment, ...comments]);\n    setCommentText('');\n    if (post) {\n      setPost({ ...post, comments: post.comments + 1 });\n    }\n  };\n\n  const handleReplySubmit = (commentId: string) => {\n    if (!replyText.trim()) return;\n\n    const newReply: Reply = {\n      id: `reply_${Date.now()}`,\n      author: {\n        id: 'current_user',\n        name: '현재 사용자',\n        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        verified: false\n      },\n      content: replyText,\n      createdAt: new Date().toISOString(),\n      likes: 0,\n      isLiked: false\n    };\n\n    setComments(comments.map(comment => \n      comment.id === commentId \n        ? { ...comment, replies: [...comment.replies, newReply] }\n        : comment\n    ));\n    setReplyText('');\n    setReplyTo(null);\n  };\n\n  const handleCommentLike = (commentId: string) => {\n    setComments(comments.map(comment => \n      comment.id === commentId \n        ? { \n            ...comment, \n            isLiked: !comment.isLiked,\n            likes: comment.isLiked ? comment.likes - 1 : comment.likes + 1\n          }\n        : comment\n    ));\n  };\n\n  const getRelativeTime = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n    \n    if (diffInSeconds < 60) return '방금 전';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}분 전`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}시간 전`;\n    if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}일 전`;\n    if (diffInSeconds < 2628000) return `${Math.floor(diffInSeconds / 604800)}주 전`;\n    if (diffInSeconds < 31536000) return `${Math.floor(diffInSeconds / 2628000)}개월 전`;\n    return `${Math.floor(diffInSeconds / 31536000)}년 전`;\n  };\n\n  if (loading) {\n    return (\n      <PortalLayout>\n        <div className=\"flex justify-center items-center min-h-screen\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </PortalLayout>\n    );\n  }\n\n  if (!post) {\n    return (\n      <PortalLayout>\n        <div className=\"text-center py-16\">\n          <p className=\"text-gray-600\">게시글을 찾을 수 없습니다.</p>\n          <button\n            onClick={() => router.push('/community')}\n            className=\"mt-4 text-blue-600 hover:text-blue-700\"\n          >\n            커뮤니티로 돌아가기\n          </button>\n        </div>\n      </PortalLayout>\n    );\n  }\n\n  return (\n    <PortalLayout>\n      <SEOHead\n        title={`${post.titleKo} | 필리핀 한인 커뮤니티`}\n        description={post.contentKo.substring(0, 160)}\n      />\n\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <button\n          onClick={() => router.back()}\n          className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 mb-6\"\n        >\n          <ArrowLeft className=\"h-5 w-5\" />\n          <span>돌아가기</span>\n        </button>\n\n        {/* Post Content */}\n        <article className=\"bg-white rounded-xl shadow-sm border border-gray-200 mb-8\">\n          {/* Post Header */}\n          <div className=\"p-6 border-b border-gray-100\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <img \n                  src={post.author.avatar} \n                  alt={post.author.name}\n                  className=\"w-12 h-12 rounded-full object-cover\"\n                />\n                <div>\n                  <div className=\"flex items-center space-x-2\">\n                    <h3 className=\"font-semibold text-gray-900\">{post.author.name}</h3>\n                    {post.author.verified && (\n                      <div className=\"w-5 h-5 bg-blue-500 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs\">✓</span>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                    <MapPin className=\"h-4 w-4\" />\n                    <span>{post.author.location}</span>\n                    <span>•</span>\n                    <Clock className=\"h-4 w-4\" />\n                    <span>{getRelativeTime(post.createdAt)}</span>\n                    <span>•</span>\n                    <span>{post.views} 조회</span>\n                  </div>\n                </div>\n              </div>\n              <button className=\"text-gray-400 hover:text-gray-600\">\n                <MoreVertical className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">{post.titleKo}</h1>\n            \n            <div className=\"flex flex-wrap gap-2 mb-4\">\n              {post.tags.map(tag => (\n                <span key={tag} className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm\">\n                  #{tag}\n                </span>\n              ))}\n            </div>\n          </div>\n\n          {/* Post Body */}\n          <div className=\"p-6\">\n            <div className=\"prose max-w-none text-gray-800 whitespace-pre-wrap\">\n              {post.contentKo}\n            </div>\n\n            {/* Images */}\n            {post.images.length > 0 && (\n              <div className=\"mt-6 space-y-4\">\n                {post.images.map((image, index) => (\n                  <img \n                    key={index}\n                    src={image} \n                    alt={`이미지 ${index + 1}`}\n                    className=\"w-full rounded-lg\"\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Post Actions */}\n          <div className=\"px-6 py-4 border-t border-gray-100\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-6\">\n                <button \n                  onClick={handleLikeToggle}\n                  className={`flex items-center space-x-2 ${post.isLiked ? 'text-red-600' : 'text-gray-600'} hover:text-red-600 transition-colors`}\n                >\n                  <ThumbsUp className={`h-5 w-5 ${post.isLiked ? 'fill-current' : ''}`} />\n                  <span className=\"font-medium\">{post.likes}</span>\n                </button>\n                <div className=\"flex items-center space-x-2 text-gray-600\">\n                  <MessageSquare className=\"h-5 w-5\" />\n                  <span className=\"font-medium\">{post.comments}</span>\n                </div>\n                <button className=\"flex items-center space-x-2 text-gray-600 hover:text-green-600 transition-colors\">\n                  <Share2 className=\"h-5 w-5\" />\n                  <span className=\"font-medium\">{post.shares}</span>\n                </button>\n              </div>\n              <button \n                onClick={handleBookmarkToggle}\n                className={`${post.isBookmarked ? 'text-yellow-600' : 'text-gray-600'} hover:text-yellow-600 transition-colors`}\n              >\n                <Bookmark className={`h-5 w-5 ${post.isBookmarked ? 'fill-current' : ''}`} />\n              </button>\n            </div>\n          </div>\n        </article>\n\n        {/* Comment Form */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">댓글 작성</h2>\n          <form onSubmit={handleCommentSubmit}>\n            <textarea\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              placeholder=\"댓글을 입력하세요...\"\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none\"\n              rows={3}\n            />\n            <div className=\"flex justify-end mt-3\">\n              <button\n                type=\"submit\"\n                disabled={!commentText.trim()}\n                className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n              >\n                <Send className=\"h-4 w-4\" />\n                <span>댓글 달기</span>\n              </button>\n            </div>\n          </form>\n        </div>\n\n        {/* Comments Section */}\n        <div className=\"space-y-4\">\n          {comments.map(comment => (\n            <div key={comment.id} className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <div className=\"flex items-start space-x-3\">\n                <img \n                  src={comment.author.avatar} \n                  alt={comment.author.name}\n                  className=\"w-10 h-10 rounded-full object-cover\"\n                />\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <h4 className=\"font-semibold text-gray-900\">{comment.author.name}</h4>\n                    {comment.author.verified && (\n                      <div className=\"w-4 h-4 bg-blue-500 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs\">✓</span>\n                      </div>\n                    )}\n                    <span className=\"text-sm text-gray-500\">{getRelativeTime(comment.createdAt)}</span>\n                  </div>\n                  <p className=\"text-gray-800 mb-3\">{comment.content}</p>\n                  <div className=\"flex items-center space-x-4\">\n                    <button\n                      onClick={() => handleCommentLike(comment.id)}\n                      className={`flex items-center space-x-1 text-sm ${comment.isLiked ? 'text-red-600' : 'text-gray-600'} hover:text-red-600 transition-colors`}\n                    >\n                      <ThumbsUp className={`h-4 w-4 ${comment.isLiked ? 'fill-current' : ''}`} />\n                      <span>{comment.likes}</span>\n                    </button>\n                    <button\n                      onClick={() => setReplyTo(comment.id)}\n                      className=\"text-sm text-gray-600 hover:text-blue-600 transition-colors\"\n                    >\n                      답글\n                    </button>\n                  </div>\n\n                  {/* Reply Form */}\n                  {replyTo === comment.id && (\n                    <div className=\"mt-4\">\n                      <div className=\"flex space-x-3\">\n                        <input\n                          type=\"text\"\n                          value={replyText}\n                          onChange={(e) => setReplyText(e.target.value)}\n                          placeholder=\"답글을 입력하세요...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                        <button\n                          onClick={() => handleReplySubmit(comment.id)}\n                          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                        >\n                          답글\n                        </button>\n                        <button\n                          onClick={() => {\n                            setReplyTo(null);\n                            setReplyText('');\n                          }}\n                          className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n                        >\n                          취소\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Replies */}\n                  {comment.replies.length > 0 && (\n                    <div className=\"mt-4 space-y-3 ml-8 border-l-2 border-gray-100 pl-4\">\n                      {comment.replies.map(reply => (\n                        <div key={reply.id} className=\"flex items-start space-x-3\">\n                          <img \n                            src={reply.author.avatar} \n                            alt={reply.author.name}\n                            className=\"w-8 h-8 rounded-full object-cover\"\n                          />\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-1\">\n                              <h5 className=\"font-medium text-gray-900 text-sm\">{reply.author.name}</h5>\n                              {reply.author.verified && (\n                                <div className=\"w-3 h-3 bg-blue-500 rounded-full flex items-center justify-center\">\n                                  <span className=\"text-white text-xs\">✓</span>\n                                </div>\n                              )}\n                              <span className=\"text-xs text-gray-500\">{getRelativeTime(reply.createdAt)}</span>\n                            </div>\n                            <p className=\"text-gray-700 text-sm\">{reply.content}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </PortalLayout>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/community.tsx",["936","937","938"],[],"import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSession, signIn, signOut } from 'next-auth/react';\nimport SEOHead from '@/components/seo/SEOHead';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport { \n  MessageCircle, \n  Users, \n  Calendar,\n  MapPin,\n  Heart,\n  Share2,\n  Plus,\n  Star,\n  Flag,\n  Clock,\n  ThumbsUp,\n  MessageSquare,\n  Bookmark,\n  Camera,\n  Video,\n  MoreVertical,\n  Globe,\n  Home,\n  Store,\n  Tv,\n  Search\n} from 'lucide-react';\n\ninterface CommunityPost {\n  id: string;\n  author: {\n    id: string;\n    name: string;\n    avatar: string;\n    verified: boolean;\n    location: string;\n  };\n  category: string;\n  title: string;\n  titleKo: string;\n  titleTl: string;\n  content: string;\n  contentKo: string;\n  contentTl: string;\n  images: string[];\n  tags: string[];\n  likes: number;\n  comments: number;\n  shares: number;\n  views: number;\n  createdAt: string;\n  updatedAt: string;\n  isLiked: boolean;\n  isBookmarked: boolean;\n  isPinned: boolean;\n  status: 'active' | 'hidden' | 'reported';\n}\n\nexport default function CommunityPage() {\n  const router = useRouter();\n  const { data: session } = useSession();\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [posts, setPosts] = useState<CommunityPost[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const categories = [\n    { id: 'all', name: '전체', icon: '🏠' },\n    { id: 'housing', name: '주거정보', icon: '🏘️' },\n    { id: 'jobs', name: '구인구직', icon: '💼' },\n    { id: 'marketplace', name: '중고거래', icon: '🛒' },\n    { id: 'events', name: '이벤트', icon: '🎉' },\n    { id: 'life', name: '일상', icon: '☕' },\n    { id: 'questions', name: '질문', icon: '❓' },\n    { id: 'help', name: '도움요청', icon: '🤝' },\n    { id: 'business', name: '비즈니스', icon: '💰' },\n    { id: 'travel', name: '여행', icon: '✈️' }\n  ];\n\n  useEffect(() => {\n    fetchPosts();\n  }, [activeCategory, currentPage]);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [activeCategory]);\n\n  const fetchPosts = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/community/posts?category=${activeCategory}&page=${currentPage}&limit=10`);\n      const data = await response.json();\n      \n      if (data.success) {\n        setPosts(data.data);\n        setTotalPages(Math.ceil(data.meta.total / data.meta.limit));\n      }\n    } catch (error) {\n      console.error('Failed to fetch posts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLikeToggle = (postId: string) => {\n    setPosts(prevPosts => \n      prevPosts.map(post => \n        post.id === postId \n          ? { \n              ...post, \n              isLiked: !post.isLiked,\n              likes: post.isLiked ? post.likes - 1 : post.likes + 1\n            }\n          : post\n      )\n    );\n  };\n\n  const getRelativeTime = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n    \n    if (diffInSeconds < 60) return '방금 전';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}분 전`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}시간 전`;\n    if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}일 전`;\n    return `${Math.floor(diffInSeconds / 604800)}주 전`;\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"커뮤니티 - 필직\"\n        description=\"필리핀 한인 커뮤니티에서 정보를 공유하고 소통하세요\"\n        keywords=\"커뮤니티, 필리핀, 한인, 정보공유\"\n      />\n\n      <FacebookLayout section=\"community\">\n          {/* Create Post Box */}\n          <div className=\"bg-white rounded-lg shadow mb-6\">\n            <div className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-gray-300 rounded-full\"></div>\n                <button\n                  onClick={() => {\n                    if (session) {\n                      router.push('/community/create-post');\n                    } else {\n                      signIn();\n                    }\n                  }}\n                  className=\"flex-1 bg-gray-100 hover:bg-gray-200 rounded-full px-4 py-2 text-left text-gray-500 transition-colors\"\n                >\n                  {session ? '무슨 생각을 하고 계신가요?' : '로그인해서 글을 작성해보세요!'}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"bg-white rounded-lg shadow mb-6 p-4\">\n            <div className=\"flex items-center space-x-2 overflow-x-auto\">\n              {categories.map((category) => (\n                <button\n                  key={category.id}\n                  onClick={() => setActiveCategory(category.id)}\n                  className={`px-4 py-2 rounded-full whitespace-nowrap transition-all text-sm ${\n                    activeCategory === category.id\n                      ? 'bg-blue-100 text-blue-600 font-semibold'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200 font-medium'\n                  }`}\n                >\n                  <span className=\"mr-1\">{category.icon}</span>\n                  {category.name}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Posts Feed */}\n          <div className=\"space-y-4\">\n            {loading ? (\n              <div className=\"bg-white rounded-lg shadow p-8\">\n                <div className=\"animate-pulse space-y-4\">\n                  <div className=\"flex space-x-3\">\n                    <div className=\"w-10 h-10 bg-gray-200 rounded-full\"></div>\n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n                      <div className=\"h-3 bg-gray-200 rounded w-1/3\"></div>\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <div className=\"h-4 bg-gray-200 rounded\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\n                  </div>\n                </div>\n              </div>\n            ) : posts.length === 0 ? (\n              <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n                <p className=\"text-gray-600\">게시글이 없습니다.</p>\n              </div>\n            ) : (\n              posts.map((post) => (\n                <div key={post.id} className=\"bg-white rounded-lg shadow\">\n                  {/* Post Header */}\n                  <div className=\"p-4\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-start space-x-3\">\n                        <img \n                          src={post.author.avatar} \n                          alt={post.author.name}\n                          className=\"w-10 h-10 rounded-full object-cover\"\n                        />\n                        <div>\n                          <div className=\"flex items-center space-x-1\">\n                            <h3 className=\"font-semibold text-gray-900\">{post.author.name}</h3>\n                            {post.author.verified && (\n                              <div className=\"w-4 h-4 bg-blue-500 rounded-full flex items-center justify-center\">\n                                <span className=\"text-white text-xs\">✓</span>\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"flex items-center space-x-1 text-xs text-gray-500\">\n                            <span>{getRelativeTime(post.createdAt)}</span>\n                            <span>·</span>\n                            <Globe className=\"h-3 w-3\" />\n                          </div>\n                        </div>\n                      </div>\n                      <button className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\">\n                        <MoreVertical className=\"h-5 w-5 text-gray-500\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Post Content */}\n                  <div className=\"px-4 pb-3\">\n                    <h2 className=\"font-semibold text-gray-900 mb-1\">{post.titleKo}</h2>\n                    <p className=\"text-gray-700 whitespace-pre-wrap\">\n                      {post.contentKo.length > 200 \n                        ? `${post.contentKo.substring(0, 200)}...` \n                        : post.contentKo}\n                    </p>\n                    {post.contentKo.length > 200 && (\n                      <button \n                        onClick={() => router.push(`/community/post/${post.id}`)}\n                        className=\"text-gray-500 hover:underline text-sm mt-1\"\n                      >\n                        더 보기\n                      </button>\n                    )}\n                  </div>\n\n                  {/* Post Images */}\n                  {post.images.length > 0 && (\n                    <div className=\"px-4 pb-3\">\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        {post.images.slice(0, 4).map((image, index) => (\n                          <img \n                            key={index}\n                            src={image} \n                            alt={`Post image ${index + 1}`}\n                            className=\"w-full h-40 object-cover rounded-lg\"\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Post Stats */}\n                  <div className=\"px-4 py-2 border-t border-gray-200\">\n                    <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                      <div className=\"flex items-center space-x-4\">\n                        <span>좋아요 {post.likes}개</span>\n                        <span>댓글 {post.comments}개</span>\n                        <span>공유 {post.shares}회</span>\n                      </div>\n                      <span>조회수 {post.views}회</span>\n                    </div>\n                  </div>\n\n                  {/* Post Actions */}\n                  <div className=\"px-4 py-2 border-t border-gray-200\">\n                    <div className=\"flex items-center justify-around\">\n                      <button \n                        onClick={() => handleLikeToggle(post.id)}\n                        className={`flex items-center justify-center space-x-2 px-2 py-2 rounded-lg hover:bg-gray-100 transition-colors flex-1 ${\n                          post.isLiked ? 'text-blue-600' : 'text-gray-600'\n                        }`}\n                      >\n                        <ThumbsUp className={`h-5 w-5 ${post.isLiked ? 'fill-current' : ''}`} />\n                        <span className=\"font-medium text-sm\">좋아요</span>\n                      </button>\n                      <button \n                        onClick={() => router.push(`/community/post/${post.id}`)}\n                        className=\"flex items-center justify-center space-x-2 px-2 py-2 rounded-lg hover:bg-gray-100 transition-colors flex-1 text-gray-600\"\n                      >\n                        <MessageSquare className=\"h-5 w-5\" />\n                        <span className=\"font-medium text-sm\">댓글 달기</span>\n                      </button>\n                      <button className=\"flex items-center justify-center space-x-2 px-2 py-2 rounded-lg hover:bg-gray-100 transition-colors flex-1 text-gray-600\">\n                        <Share2 className=\"h-5 w-5\" />\n                        <span className=\"font-medium text-sm\">공유하기</span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n\n            {/* Load More Button */}\n            {!loading && totalPages > 1 && currentPage < totalPages && (\n              <div className=\"mt-6 text-center\">\n                <button\n                  onClick={() => setCurrentPage(prev => prev + 1)}\n                  className=\"px-6 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors font-medium text-gray-700\"\n                >\n                  더 보기\n                </button>\n              </div>\n            )}\n          </div>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/contact.tsx",["939"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport FloatingContactButton from '@/components/common/FloatingContactButton';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { BreadcrumbSchema, OrganizationSchema } from '@/components/seo/JsonLd';\nimport { defaultSEO, getLocalizedSEO } from '@/utils/seo';\nimport { \n  Phone, Mail, MessageCircle, MapPin, Clock, Send, \n  User, Building, Globe, Calendar, CheckCircle \n} from 'lucide-react';\n\nexport default function ContactPage() {\n  const router = useRouter();\n  const currentLanguage = 'ko';\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    subject: '',\n    message: '',\n    propertyType: '',\n    location: '',\n    budget: '',\n    moveInDate: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // SEO 설정\n  const seoConfig = useMemo(() => {\n    const baseSEO = defaultSEO.contact;\n    return getLocalizedSEO(baseSEO, currentLanguage);\n  }, [currentLanguage]);\n\n  const breadcrumbs = [\n    { name: 'Home', url: '/' },\n    { name: 'Contact', url: '/contact' }\n  ];\n\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // 실제 구현에서는 API 호출\n      console.log('Contact form submitted:', formData);\n      \n      // 시뮬레이션\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      setIsSubmitted(true);\n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        subject: '',\n        message: '',\n        propertyType: '',\n        location: '',\n        budget: '',\n        moveInDate: ''\n      });\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const contactMethods = [\n    {\n      icon: <Phone className=\"h-6 w-6\" />,\n      title: 'Phone',\n      description: 'Call us directly for immediate assistance',\n      contact: '+63 912 345 6789',\n      action: 'tel:+639123456789',\n      available: '24/7 Available',\n      color: 'bg-blue-500'\n    },\n    {\n      icon: <MessageCircle className=\"h-6 w-6\" />,\n      title: 'WhatsApp',\n      description: 'Chat with us on WhatsApp for quick responses',\n      contact: '+63 912 345 6789',\n      action: 'https://wa.me/639123456789',\n      available: 'Usually replies within 1 hour',\n      color: 'bg-green-500'\n    },\n    {\n      icon: <Mail className=\"h-6 w-6\" />,\n      title: 'Email',\n      description: 'Send us detailed inquiries via email',\n      contact: 'info@philippines-rental.com',\n      action: 'mailto:info@philippines-rental.com',\n      available: 'Response within 24 hours',\n      color: 'bg-purple-500'\n    }\n  ];\n\n  const officeLocations = [\n    {\n      city: 'Manila',\n      address: '123 Ayala Avenue, Makati City, Metro Manila',\n      phone: '+63 912 345 6789',\n      email: 'manila@philippines-rental.com',\n      hours: 'Mon-Sat: 9:00 AM - 7:00 PM'\n    },\n    {\n      city: 'Cebu',\n      address: '456 IT Park, Lahug, Cebu City',\n      phone: '+63 912 345 6790',\n      email: 'cebu@philippines-rental.com',\n      hours: 'Mon-Sat: 9:00 AM - 6:00 PM'\n    }\n  ];\n\n  const faqItems = [\n    {\n      question: 'How quickly can you help me find a property?',\n      answer: 'We typically provide property options within 24-48 hours based on your requirements.'\n    },\n    {\n      question: 'Do you charge tenants any fees?',\n      answer: 'No, our service is completely free for tenants. We are paid by property owners.'\n    },\n    {\n      question: 'Can you help with property viewings?',\n      answer: 'Yes, we arrange both in-person and virtual property viewings at your convenience.'\n    },\n    {\n      question: 'Do you provide support in multiple languages?',\n      answer: 'Yes, we provide support in English, Korean, Chinese, and Japanese.'\n    }\n  ];\n\n  if (isSubmitted) {\n    return (\n      <>\n        <SEOHead\n          title={seoConfig.title}\n          description={seoConfig.description}\n          keywords={seoConfig.keywords}\n          image={seoConfig.image}\n          type=\"website\"\n          locale={currentLanguage}\n          alternateLocales={['en', 'ko', 'zh', 'ja']}\n        />\n        \n        <FacebookLayout section=\"contact\">\n            <div className=\"min-h-screen flex items-center justify-center py-12\">\n              <div className=\"max-w-md mx-auto text-center\">\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <CheckCircle className=\"h-8 w-8 text-green-600\" />\n                </div>\n                <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Message Sent Successfully!</h1>\n                <p className=\"text-gray-600 mb-6\">\n                  Thank you for contacting us. We'll get back to you within 24 hours.\n                </p>\n                <div className=\"space-y-3\">\n                  <button\n                    onClick={() => setIsSubmitted(false)}\n                    className=\"w-full bg-blue-600 text-white py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n                  >\n                    Send Another Message\n                  </button>\n                  <button\n                    onClick={() => router.push('/')}\n                    className=\"w-full border border-gray-300 text-gray-700 py-3 rounded-lg font-medium hover:bg-gray-50 transition-colors\"\n                  >\n                    Back to Home\n                  </button>\n                </div>\n              </div>\n            </div>\n        </FacebookLayout>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SEOHead\n        title={seoConfig.title}\n        description={seoConfig.description}\n        keywords={seoConfig.keywords}\n        image={seoConfig.image}\n        type=\"website\"\n        locale={currentLanguage}\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n      />\n      \n      <BreadcrumbSchema items={breadcrumbs} />\n      \n      <OrganizationSchema\n        name=\"Philippines Rental\"\n        url={process.env.NEXT_PUBLIC_SITE_URL || 'https://philippines-rental.com'}\n        logo={`${process.env.NEXT_PUBLIC_SITE_URL || 'https://philippines-rental.com'}/images/logo.png`}\n        description=\"Premium rental apartments in Philippines for foreigners\"\n        contactPoint={{\n          telephone: \"+63-912-345-6789\",\n          contactType: \"customer service\",\n          areaServed: \"Philippines\",\n          availableLanguage: [\"English\", \"Korean\", \"Chinese\", \"Japanese\"]\n        }}\n        address={{\n          streetAddress: \"123 Ayala Avenue\",\n          addressLocality: \"Makati City\",\n          addressRegion: \"Metro Manila\",\n          postalCode: \"1200\",\n          addressCountry: \"Philippines\"\n        }}\n        sameAs={[\n          \"https://www.facebook.com/philippinesrental\",\n          \"https://www.instagram.com/philippinesrental\"\n        ]}\n      />\n\n      <FacebookLayout section=\"contact\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                📞 Contact Us\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\n                {(currentLanguage as string) === 'ko' && '전문 팀이 완벽한 필리핀 렌탈을 찾도록 도와드립니다. 다국어 지원으로 편리하게 문의하세요.'}\n                {(currentLanguage as string) === 'zh' && '我们的专业团队将帮助您找到完美的菲律宾租房。多语言支持，方便咨询。'}\n                {(currentLanguage as string) === 'ja' && '専門チームが完璧なフィリピン賃貸物件探しをお手伝いします。多言語サポートでお気軽にお問い合わせください。'}\n                {(currentLanguage as string) === 'en' && 'Our expert team is here to help you find the perfect rental in the Philippines. Multilingual support available.'}\n              </p>\n            </div>\n\n            {/* Contact Methods */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n              {contactMethods.map((method, index) => (\n                <a\n                  key={index}\n                  href={method.action}\n                  target={method.action.startsWith('http') ? '_blank' : undefined}\n                  rel={method.action.startsWith('http') ? 'noopener noreferrer' : undefined}\n                  className=\"bg-white rounded-2xl p-6 shadow-sm border border-gray-200 hover:shadow-lg transition-shadow cursor-pointer\"\n                >\n                  <div className={`w-12 h-12 ${method.color} rounded-full flex items-center justify-center text-white mb-4`}>\n                    {method.icon}\n                  </div>\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-2\">{method.title}</h3>\n                  <p className=\"text-gray-600 mb-3\">{method.description}</p>\n                  <div className=\"text-blue-600 font-medium mb-2\">{method.contact}</div>\n                  <div className=\"text-sm text-gray-500\">{method.available}</div>\n                </a>\n              ))}\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n              {/* Contact Form */}\n              <div className=\"bg-white rounded-2xl p-8 shadow-sm border border-gray-200\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Send us a Message</h2>\n                \n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Full Name *\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={formData.name}\n                        onChange={(e) => handleInputChange('name', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Email Address *\n                      </label>\n                      <input\n                        type=\"email\"\n                        value={formData.email}\n                        onChange={(e) => handleInputChange('email', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Phone Number\n                      </label>\n                      <input\n                        type=\"tel\"\n                        value={formData.phone}\n                        onChange={(e) => handleInputChange('phone', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Preferred Location\n                      </label>\n                      <select\n                        value={formData.location}\n                        onChange={(e) => handleInputChange('location', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Select Location</option>\n                        <option value=\"manila\">Manila</option>\n                        <option value=\"cebu\">Cebu</option>\n                        <option value=\"davao\">Davao</option>\n                        <option value=\"boracay\">Boracay</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Property Type\n                      </label>\n                      <select\n                        value={formData.propertyType}\n                        onChange={(e) => handleInputChange('propertyType', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Select Type</option>\n                        <option value=\"condo\">Condominium</option>\n                        <option value=\"house\">House</option>\n                        <option value=\"apartment\">Apartment</option>\n                        <option value=\"monthly-stay\">Monthly Stay</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Budget Range (PHP)\n                      </label>\n                      <select\n                        value={formData.budget}\n                        onChange={(e) => handleInputChange('budget', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">Select Budget</option>\n                        <option value=\"under-20k\">Under ₱20,000</option>\n                        <option value=\"20k-40k\">₱20,000 - ₱40,000</option>\n                        <option value=\"40k-60k\">₱40,000 - ₱60,000</option>\n                        <option value=\"60k-100k\">₱60,000 - ₱100,000</option>\n                        <option value=\"over-100k\">Over ₱100,000</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Subject *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.subject}\n                      onChange={(e) => handleInputChange('subject', e.target.value)}\n                      placeholder=\"e.g., Looking for 2BR condo in Makati\"\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Message *\n                    </label>\n                    <textarea\n                      value={formData.message}\n                      onChange={(e) => handleInputChange('message', e.target.value)}\n                      rows={5}\n                      placeholder=\"Tell us about your rental requirements...\"\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      required\n                    />\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-blue-600 text-white py-4 rounded-lg font-medium hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                        Sending...\n                      </>\n                    ) : (\n                      <>\n                        <Send className=\"h-5 w-5\" />\n                        Send Message\n                      </>\n                    )}\n                  </button>\n                </form>\n              </div>\n\n              {/* Office Locations & FAQ */}\n              <div className=\"space-y-8\">\n                {/* Office Locations */}\n                <div className=\"bg-white rounded-2xl p-8 shadow-sm border border-gray-200\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n                    <Building className=\"h-6 w-6 mr-2 text-blue-600\" />\n                    Our Offices\n                  </h2>\n                  \n                  <div className=\"space-y-6\">\n                    {officeLocations.map((office, index) => (\n                      <div key={index} className=\"border-b border-gray-200 pb-6 last:border-b-0\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">{office.city}</h3>\n                        <div className=\"space-y-2 text-sm text-gray-600\">\n                          <div className=\"flex items-start\">\n                            <MapPin className=\"h-4 w-4 mr-2 mt-0.5 text-gray-400\" />\n                            <span>{office.address}</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <Phone className=\"h-4 w-4 mr-2 text-gray-400\" />\n                            <span>{office.phone}</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <Mail className=\"h-4 w-4 mr-2 text-gray-400\" />\n                            <span>{office.email}</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <Clock className=\"h-4 w-4 mr-2 text-gray-400\" />\n                            <span>{office.hours}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Quick FAQ */}\n                <div className=\"bg-white rounded-2xl p-8 shadow-sm border border-gray-200\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Quick Questions</h2>\n                  \n                  <div className=\"space-y-4\">\n                    {faqItems.map((item, index) => (\n                      <div key={index} className=\"border-b border-gray-200 pb-4 last:border-b-0\">\n                        <h4 className=\"font-medium text-gray-900 mb-2\">{item.question}</h4>\n                        <p className=\"text-sm text-gray-600\">{item.answer}</p>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"mt-6 pt-4 border-t border-gray-200\">\n                    <button\n                      onClick={() => router.push('/faq')}\n                      className=\"text-blue-600 hover:text-blue-700 font-medium\"\n                    >\n                      View All FAQ →\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        <FloatingContactButton />\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/faq.tsx",["940","941"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport FloatingContactButton from '@/components/common/FloatingContactButton';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { FAQSchema, BreadcrumbSchema } from '@/components/seo/JsonLd';\nimport { ChevronDown, ChevronUp, Search, MessageCircle, Phone, Mail } from 'lucide-react';\n\nexport default function FAQPage() {\n  const router = useRouter();\n  const currentLanguage = 'ko';\n  const [searchTerm, setSearchTerm] = useState('');\n  const [openItems, setOpenItems] = useState<number[]>([]);\n\n  // FAQ 데이터\n  const faqData = [\n    {\n      category: 'General',\n      questions: [\n        {\n          question: 'How does Philippines Rental work?',\n          answer: 'Philippines Rental connects foreign tenants with property owners across the Philippines. We provide a curated selection of rental properties specifically suitable for foreigners, with multilingual support and professional service to ensure a smooth rental experience.'\n        },\n        {\n          question: 'What areas do you cover in the Philippines?',\n          answer: 'We cover major cities and regions including Manila (NCR), Cebu, Davao, Boracay, Baguio, and other popular destinations for foreigners. Our network continues to expand to serve more locations.'\n        },\n        {\n          question: 'Is the service free for tenants?',\n          answer: 'Yes, our service is completely free for tenants. We are paid by property owners only when a successful rental is completed. There are no hidden fees or charges for tenants using our platform.'\n        },\n        {\n          question: 'Do you verify all properties listed?',\n          answer: 'Yes, all properties on our platform are verified by our team. We conduct physical inspections, verify ownership documents, and ensure all amenities and features are accurately represented.'\n        }\n      ]\n    },\n    {\n      category: 'Rental Process',\n      questions: [\n        {\n          question: 'What documents do I need to rent an apartment?',\n          answer: 'Typically, you will need: Valid passport, Visa or work permit, Proof of income (employment certificate, bank statements), Government-issued ID, and References from previous landlords if available. Some properties may have additional requirements.'\n        },\n        {\n          question: 'How long does the rental process take?',\n          answer: 'The rental process usually takes 3-7 days once you have submitted all required documents. This includes application review, background verification, lease preparation, and move-in coordination.'\n        },\n        {\n          question: 'What is the typical lease duration?',\n          answer: 'Most properties offer flexible lease terms ranging from 1 month (for monthly stays) to 12 months or longer. We specialize in accommodating foreign tenants who may need shorter-term or more flexible arrangements.'\n        },\n        {\n          question: 'What deposits are required?',\n          answer: 'Typically, you will need to pay: 1-2 months advance rent, 1-2 months security deposit, and utility deposits if applicable. The exact amount varies by property and can be negotiated with the owner.'\n        }\n      ]\n    },\n    {\n      category: 'Monthly Stay Program',\n      questions: [\n        {\n          question: 'What is the Monthly Stay program?',\n          answer: 'Our Monthly Stay program is designed for digital nomads, short-term workers, and travelers who need furnished accommodations for 1-6 months. These properties come fully furnished with utilities, WiFi, and housekeeping services.'\n        },\n        {\n          question: 'What is included in Monthly Stay rentals?',\n          answer: 'Monthly Stay rentals typically include: Fully furnished apartment, High-speed WiFi, Utilities (electricity, water), Weekly housekeeping, Linens and towels, Kitchen essentials, and 24/7 support.'\n        },\n        {\n          question: 'Can I extend my Monthly Stay?',\n          answer: 'Yes, most Monthly Stay bookings can be extended subject to availability. We recommend requesting extensions at least 2 weeks before your current booking ends to ensure continued availability.'\n        },\n        {\n          question: 'Is there a minimum stay requirement?',\n          answer: 'Most Monthly Stay properties have a minimum stay of 30 days. Some properties may accept shorter stays of 14 days, but this varies by location and season.'\n        }\n      ]\n    },\n    {\n      category: 'Payments & Pricing',\n      questions: [\n        {\n          question: 'What payment methods do you accept?',\n          answer: 'We accept various payment methods including bank transfers, international wire transfers, PayPal, credit cards, and cryptocurrency for some properties. Payment options may vary by property owner.'\n        },\n        {\n          question: 'Are utilities included in the rent?',\n          answer: 'This varies by property. Some rentals include utilities in the monthly rent, while others require separate utility payments. All utility arrangements are clearly specified in the property listing and lease agreement.'\n        },\n        {\n          question: 'Can I negotiate the rent price?',\n          answer: 'Rent negotiation is possible, especially for longer lease terms or during off-peak seasons. Our team can help facilitate negotiations with property owners to find a mutually agreeable price.'\n        },\n        {\n          question: 'What happens if I need to terminate my lease early?',\n          answer: 'Early termination policies vary by property and lease agreement. Generally, 30-60 days notice is required, and you may forfeit part or all of your security deposit. We always recommend purchasing travel/rental insurance for protection.'\n        }\n      ]\n    },\n    {\n      category: 'Support & Services',\n      questions: [\n        {\n          question: 'Do you provide support in my language?',\n          answer: 'Yes! We provide support in English, Korean, Chinese (Mandarin), and Japanese. Our multilingual team is available to assist you throughout your rental journey in your preferred language.'\n        },\n        {\n          question: 'What if I have issues with my rental property?',\n          answer: 'We provide ongoing support throughout your tenancy. If you experience any issues, contact our support team immediately. We will work with the property owner to resolve problems quickly and fairly.'\n        },\n        {\n          question: 'Do you help with property viewings?',\n          answer: 'Yes, we can arrange property viewings either in-person or via video call. For international clients, we offer virtual tours and detailed video walkthroughs to help you make informed decisions.'\n        },\n        {\n          question: 'Can you help with moving and settling in?',\n          answer: 'We offer additional services including airport pickup, utility setup assistance, local orientation, and connections to essential services like banks, healthcare, and schools. These services may have additional fees.'\n        }\n      ]\n    }\n  ];\n\n  // 검색 필터링\n  const filteredFAQs = useMemo(() => {\n    if (!searchTerm) return faqData;\n    \n    return faqData.map(category => ({\n      ...category,\n      questions: category.questions.filter(\n        item =>\n          item.question.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          item.answer.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    })).filter(category => category.questions.length > 0);\n  }, [searchTerm]);\n\n  // FAQ 스키마용 데이터 변환\n  const faqSchemaData = useMemo(() => {\n    return faqData.flatMap(category => \n      category.questions.map(item => ({\n        question: item.question,\n        answer: item.answer\n      }))\n    );\n  }, []);\n\n\n  const toggleItem = (categoryIndex: number, questionIndex: number) => {\n    const itemId = categoryIndex * 1000 + questionIndex;\n    setOpenItems(prev => \n      prev.includes(itemId) \n        ? prev.filter(id => id !== itemId)\n        : [...prev, itemId]\n    );\n  };\n\n  const isItemOpen = (categoryIndex: number, questionIndex: number) => {\n    const itemId = categoryIndex * 1000 + questionIndex;\n    return openItems.includes(itemId);\n  };\n\n  // SEO 설정\n  const seoConfig = {\n    title: 'FAQ - Philippines Rental',\n    description: 'Frequently asked questions about renting apartments in Philippines. Get answers about our rental process, monthly stays, payments, and support services for foreigners.',\n    keywords: 'Philippines rental FAQ, apartment rental questions, monthly stay FAQ, rental process Philippines, foreigner rental guide',\n    image: '/images/og-faq.jpg'\n  };\n\n  const breadcrumbs = [\n    { name: 'Home', url: '/' },\n    { name: 'FAQ', url: '/faq' }\n  ];\n\n  return (\n    <>\n      <SEOHead\n        title={seoConfig.title}\n        description={seoConfig.description}\n        keywords={seoConfig.keywords}\n        image={seoConfig.image}\n        type=\"website\"\n        locale={currentLanguage}\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n      />\n      \n      <BreadcrumbSchema items={breadcrumbs} />\n      <FAQSchema questions={faqSchemaData} />\n\n      <FacebookLayout section=\"faq\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                ❓ Frequently Asked Questions\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\n                {(currentLanguage as string) === 'ko' && '필리핀 렌탈에 대한 자주 묻는 질문들을 확인하세요. 더 궁금한 점이 있으시면 언제든 문의해주세요.'}\n                {(currentLanguage as string) === 'zh' && '查看有关菲律宾租房的常见问题。如有其他疑问，请随时联系我们。'}\n                {(currentLanguage as string) === 'ja' && 'フィリピン賃貸に関するよくある質問をご確認ください。他にご質問がございましたら、お気軽にお問い合わせください。'}\n                {(currentLanguage as string) === 'en' && 'Find answers to common questions about renting in the Philippines. Contact us if you have any other questions.'}\n              </p>\n\n              {/* Search Bar */}\n              <div className=\"max-w-2xl mx-auto relative\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search FAQ...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-12 pr-4 py-4 text-lg border border-gray-300 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* FAQ Content */}\n            <div className=\"max-w-4xl mx-auto\">\n              {filteredFAQs.map((category, categoryIndex) => (\n                <div key={categoryIndex} className=\"mb-12\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n                    <span className=\"w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold mr-3\">\n                      {categoryIndex + 1}\n                    </span>\n                    {category.category}\n                  </h2>\n                  \n                  <div className=\"space-y-4\">\n                    {category.questions.map((item, questionIndex) => {\n                      const isOpen = isItemOpen(categoryIndex, questionIndex);\n                      return (\n                        <div\n                          key={questionIndex}\n                          className=\"bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden\"\n                        >\n                          <button\n                            onClick={() => toggleItem(categoryIndex, questionIndex)}\n                            className=\"w-full px-6 py-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors\"\n                          >\n                            <h3 className=\"text-lg font-medium text-gray-900 pr-4\">\n                              {item.question}\n                            </h3>\n                            {isOpen ? (\n                              <ChevronUp className=\"h-5 w-5 text-gray-500 flex-shrink-0\" />\n                            ) : (\n                              <ChevronDown className=\"h-5 w-5 text-gray-500 flex-shrink-0\" />\n                            )}\n                          </button>\n                          \n                          {isOpen && (\n                            <div className=\"px-6 pb-4\">\n                              <div className=\"text-gray-600 leading-relaxed\">\n                                {item.answer}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* No Results */}\n            {filteredFAQs.length === 0 && (\n              <div className=\"text-center py-12\">\n                <div className=\"text-gray-500 text-lg mb-4\">\n                  No FAQ items found matching your search.\n                </div>\n                <button \n                  onClick={() => setSearchTerm('')}\n                  className=\"text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  Clear search\n                </button>\n              </div>\n            )}\n\n            {/* Contact Section */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl p-8 mt-16 text-center\">\n              <h3 className=\"text-2xl font-bold mb-4\">Still Have Questions?</h3>\n              <p className=\"text-lg mb-8 opacity-90\">\n                Our multilingual support team is here to help you 24/7\n              </p>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-3xl mx-auto\">\n                <div className=\"bg-white/20 rounded-xl p-6\">\n                  <MessageCircle className=\"h-8 w-8 mx-auto mb-3\" />\n                  <h4 className=\"font-semibold mb-2\">Live Chat</h4>\n                  <p className=\"text-sm opacity-80 mb-4\">Get instant answers from our team</p>\n                  <button className=\"bg-white text-blue-600 px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors\">\n                    Start Chat\n                  </button>\n                </div>\n                \n                <div className=\"bg-white/20 rounded-xl p-6\">\n                  <Phone className=\"h-8 w-8 mx-auto mb-3\" />\n                  <h4 className=\"font-semibold mb-2\">Phone Support</h4>\n                  <p className=\"text-sm opacity-80 mb-4\">Talk to our rental experts</p>\n                  <button className=\"bg-white text-blue-600 px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors\">\n                    Call Now\n                  </button>\n                </div>\n                \n                <div className=\"bg-white/20 rounded-xl p-6\">\n                  <Mail className=\"h-8 w-8 mx-auto mb-3\" />\n                  <h4 className=\"font-semibold mb-2\">Email Support</h4>\n                  <p className=\"text-sm opacity-80 mb-4\">Detailed assistance via email</p>\n                  <button className=\"bg-white text-blue-600 px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors\">\n                    Send Email\n                  </button>\n                </div>\n              </div>\n            </div>\n          </main>\n        <FloatingContactButton />\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/friends.tsx",["942"],[],"import React, { useState } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport SendMessageButton from '@/components/messages/SendMessageButton';\n\ninterface FriendPost {\n  id: string;\n  title: string;\n  description: string;\n  location: string;\n  interests: string[];\n  languages: string[];\n  nationality: string;\n  age: string;\n  gender: string;\n  author: {\n    name: string;\n    email: string;\n    image?: string;\n  };\n  createdAt: string;\n  contactPreference: string;\n}\n\nconst SAMPLE_POSTS: FriendPost[] = [\n  {\n    id: '1',\n    title: '필리핀 문화 체험하고 싶은 한국인입니다',\n    description: '필리핀에 온 지 3개월 된 한국인입니다. 현지 문화를 배우고 언어 교환도 하고 싶어요. 함께 맛집 탐방이나 여행도 다녀요!',\n    location: 'BGC, Taguig City',\n    interests: ['음식', '여행', '문화 체험', '언어 교환'],\n    languages: ['Korean', 'English', 'Basic Tagalog'],\n    nationality: '한국',\n    age: '25-30',\n    gender: '남성',\n    author: {\n      name: '이준호',\n      email: 'junho.lee@example.com',\n      image: '/images/friends/user1.jpg'\n    },\n    createdAt: '2024-01-15T10:30:00Z',\n    contactPreference: '쪽지'\n  },\n  {\n    id: '2',\n    title: 'Looking for Filipino friends to explore Manila!',\n    description: 'American expat working in Manila. Love trying local food, visiting museums, and weekend trips. Would love to meet local friends who can show me the best spots!',\n    location: 'Makati City',\n    interests: ['Food', 'Museums', 'Weekend trips', 'Local culture'],\n    languages: ['English', 'Learning Tagalog'],\n    nationality: '미국',\n    age: '30-35',\n    gender: '여성',\n    author: {\n      name: 'Jessica Miller',\n      email: 'jessica.miller@example.com'\n    },\n    createdAt: '2024-01-14T14:20:00Z',\n    contactPreference: '쪽지'\n  },\n  {\n    id: '3',\n    title: '일본인과 친구가 되고 싶어요',\n    description: '안녕하세요! 필리핀 사람입니다. 일본 문화에 관심이 많고 일본어를 배우고 있어요. 일본 음식과 애니메이션을 좋아합니다.',\n    location: 'Quezon City',\n    interests: ['일본 문화', '애니메이션', '일본 음식', '언어 교환'],\n    languages: ['Tagalog', 'English', 'Basic Japanese'],\n    nationality: '필리핀',\n    age: '20-25',\n    gender: '여성',\n    author: {\n      name: 'Maria Santos',\n      email: 'maria.santos@example.com'\n    },\n    createdAt: '2024-01-13T09:15:00Z',\n    contactPreference: '쪽지'\n  },\n  {\n    id: '4',\n    title: '中国朋友想认识更多国际朋友',\n    description: '我是在菲律宾工作的中国人，希望认识更多来自不同国家的朋友。喜欢运动、音乐和旅游。可以用中文、英文交流。',\n    location: 'Ortigas Center, Pasig',\n    interests: ['운동', '음악', '여행', '국제 친구'],\n    languages: ['Chinese', 'English', 'Basic Tagalog'],\n    nationality: '중국',\n    age: '25-30',\n    gender: '남성',\n    author: {\n      name: 'Chen Wei',\n      email: 'chen.wei@example.com'\n    },\n    createdAt: '2024-01-12T16:45:00Z',\n    contactPreference: '쪽지'\n  }\n];\n\nexport default function FriendsPage() {\n  const { data: session } = useSession();\n  const router = useRouter();\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const [selectedNationality, setSelectedNationality] = useState('');\n  const [selectedAge, setSelectedAge] = useState('');\n  const [selectedGender, setSelectedGender] = useState('');\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    description: '',\n    location: '',\n    interests: [] as string[],\n    languages: [] as string[],\n    nationality: '',\n    age: '',\n    gender: '',\n    contactPreference: '쪽지'\n  });\n\n  const filteredPosts = SAMPLE_POSTS.filter(post => {\n    return (\n      (!selectedLocation || post.location.toLowerCase().includes(selectedLocation.toLowerCase())) &&\n      (!selectedNationality || post.nationality === selectedNationality) &&\n      (!selectedAge || post.age === selectedAge) &&\n      (!selectedGender || post.gender === selectedGender)\n    );\n  });\n\n  const handlePostSubmit = () => {\n    if (!session) {\n      alert('로그인이 필요합니다.');\n      router.push('/login');\n      return;\n    }\n\n    if (!newPost.title || !newPost.description || !newPost.location || !newPost.nationality) {\n      alert('필수 정보를 모두 입력해주세요.');\n      return;\n    }\n\n    alert('친구 찾기 게시글이 등록되었습니다!');\n    setShowPostForm(false);\n    setNewPost({\n      title: '',\n      description: '',\n      location: '',\n      interests: [],\n      languages: [],\n      nationality: '',\n      age: '',\n      gender: '',\n      contactPreference: '쪽지'\n    });\n  };\n\n  const toggleInterest = (interest: string) => {\n    setNewPost(prev => ({\n      ...prev,\n      interests: prev.interests.includes(interest)\n        ? prev.interests.filter(i => i !== interest)\n        : [...prev.interests, interest]\n    }));\n  };\n\n  const toggleLanguage = (language: string) => {\n    setNewPost(prev => ({\n      ...prev,\n      languages: prev.languages.includes(language)\n        ? prev.languages.filter(l => l !== language)\n        : [...prev.languages, language]\n    }));\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"외국인 친구 사귀기 - 필직\"\n        description=\"필리핀에서 다양한 국적의 친구들과 만나보세요. 언어 교환, 문화 체험, 친구 만들기\"\n        keywords=\"외국인 친구, 국제 친구, 언어 교환, 문화 체험, 필리핀, 필직\"\n      />\n\n      <FacebookLayout>\n        <div className=\"max-w-6xl mx-auto\">\n          {/* 헤더 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">외국인 친구 사귀기</h1>\n                <p className=\"text-gray-600\">다양한 국적의 친구들과 만나 문화를 교류해보세요</p>\n              </div>\n              <button\n                onClick={() => setShowPostForm(true)}\n                className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                </svg>\n                <span>친구 찾기 글쓰기</span>\n              </button>\n            </div>\n          </div>\n\n          {/* 필터 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <h2 className=\"text-lg font-semibold mb-4\">필터</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">지역</label>\n                <select\n                  value={selectedLocation}\n                  onChange={(e) => setSelectedLocation(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체 지역</option>\n                  <option value=\"BGC\">BGC</option>\n                  <option value=\"Makati\">Makati</option>\n                  <option value=\"Ortigas\">Ortigas</option>\n                  <option value=\"Quezon City\">Quezon City</option>\n                  <option value=\"Alabang\">Alabang</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">국적</label>\n                <select\n                  value={selectedNationality}\n                  onChange={(e) => setSelectedNationality(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체 국적</option>\n                  <option value=\"한국\">한국</option>\n                  <option value=\"일본\">일본</option>\n                  <option value=\"중국\">중국</option>\n                  <option value=\"미국\">미국</option>\n                  <option value=\"필리핀\">필리핀</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">나이</label>\n                <select\n                  value={selectedAge}\n                  onChange={(e) => setSelectedAge(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체 나이</option>\n                  <option value=\"20-25\">20-25세</option>\n                  <option value=\"25-30\">25-30세</option>\n                  <option value=\"30-35\">30-35세</option>\n                  <option value=\"35-40\">35-40세</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">성별</label>\n                <select\n                  value={selectedGender}\n                  onChange={(e) => setSelectedGender(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체</option>\n                  <option value=\"남성\">남성</option>\n                  <option value=\"여성\">여성</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {/* 친구 찾기 목록 */}\n          <div className=\"space-y-6\">\n            {filteredPosts.map((post) => (\n              <div key={post.id} className=\"bg-white rounded-lg shadow-sm p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">{post.title}</h3>\n                    <p className=\"text-gray-600 mb-4\">{post.description}</p>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-5 h-5 text-gray-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <span className=\"text-sm text-gray-700\">{post.location}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-5 h-5 text-gray-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <span className=\"text-sm text-gray-700\">{post.nationality} • {post.age}세 • {post.gender}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-2\">관심사</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {post.interests.map((interest, index) => (\n                          <span\n                            key={index}\n                            className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\"\n                          >\n                            {interest}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-2\">사용 언어</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {post.languages.map((language, index) => (\n                          <span\n                            key={index}\n                            className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\"\n                          >\n                            {language}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        {post.author.image ? (\n                          <img\n                            src={post.author.image}\n                            alt={post.author.name}\n                            className=\"w-8 h-8 rounded-full\"\n                          />\n                        ) : (\n                          <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                            <svg className=\"w-5 h-5 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </div>\n                        )}\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-800\">{post.author.name}</p>\n                          <p className=\"text-xs text-gray-500\">\n                            {new Date(post.createdAt).toLocaleDateString('ko-KR')}\n                          </p>\n                        </div>\n                      </div>\n                      <SendMessageButton\n                        recipientEmail={post.author.email}\n                        recipientName={post.author.name}\n                        className=\"text-sm\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* 게시글 작성 모달 */}\n          {showPostForm && (\n            <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n              <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-medium text-gray-800\">친구 찾기 글쓰기</h3>\n                  <button\n                    onClick={() => setShowPostForm(false)}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </button>\n                </div>\n\n                <form onSubmit={(e) => { e.preventDefault(); handlePostSubmit(); }} className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">제목 *</label>\n                    <input\n                      type=\"text\"\n                      value={newPost.title}\n                      onChange={(e) => setNewPost(prev => ({ ...prev, title: e.target.value }))}\n                      required\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"친구 찾기 제목을 입력하세요\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">자기소개 *</label>\n                    <textarea\n                      value={newPost.description}\n                      onChange={(e) => setNewPost(prev => ({ ...prev, description: e.target.value }))}\n                      required\n                      rows={4}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"자신에 대해 소개하고 어떤 친구를 찾고 있는지 설명해주세요\"\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">지역 *</label>\n                      <input\n                        type=\"text\"\n                        value={newPost.location}\n                        onChange={(e) => setNewPost(prev => ({ ...prev, location: e.target.value }))}\n                        required\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"예: BGC, Makati City\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">국적 *</label>\n                      <select\n                        value={newPost.nationality}\n                        onChange={(e) => setNewPost(prev => ({ ...prev, nationality: e.target.value }))}\n                        required\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">선택하세요</option>\n                        <option value=\"한국\">한국</option>\n                        <option value=\"일본\">일본</option>\n                        <option value=\"중국\">중국</option>\n                        <option value=\"미국\">미국</option>\n                        <option value=\"필리핀\">필리핀</option>\n                        <option value=\"기타\">기타</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">나이대</label>\n                      <select\n                        value={newPost.age}\n                        onChange={(e) => setNewPost(prev => ({ ...prev, age: e.target.value }))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">선택하세요</option>\n                        <option value=\"20-25\">20-25세</option>\n                        <option value=\"25-30\">25-30세</option>\n                        <option value=\"30-35\">30-35세</option>\n                        <option value=\"35-40\">35-40세</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">성별</label>\n                      <select\n                        value={newPost.gender}\n                        onChange={(e) => setNewPost(prev => ({ ...prev, gender: e.target.value }))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"\">선택하세요</option>\n                        <option value=\"남성\">남성</option>\n                        <option value=\"여성\">여성</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">관심사</label>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {['음식', '여행', '문화 체험', '언어 교환', '운동', '음악', '영화', '쇼핑'].map((interest) => (\n                        <label key={interest} className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"checkbox\"\n                            checked={newPost.interests.includes(interest)}\n                            onChange={() => toggleInterest(interest)}\n                            className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">{interest}</span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">사용 언어</label>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {['Korean', 'English', 'Chinese', 'Japanese', 'Tagalog', 'Spanish'].map((language) => (\n                        <label key={language} className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"checkbox\"\n                            checked={newPost.languages.includes(language)}\n                            onChange={() => toggleLanguage(language)}\n                            className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">{language}</span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPostForm(false)}\n                      className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                    >\n                      취소\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                    >\n                      게시글 등록\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/grab-drivers.tsx",["943","944"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { allPhilippinesRegions } from '@/data/philippinesRegions';\nimport { toast } from 'react-hot-toast';\nimport { \n  Search, \n  Filter, \n  Grid, \n  List, \n  MapPin, \n  Star, \n  MessageCircle,\n  Car,\n  Bike,\n  Clock,\n  Shield,\n  Phone,\n  Calendar,\n  TrendingUp,\n  Eye,\n  Plus,\n  LogIn,\n  SlidersHorizontal,\n  X,\n  ChevronDown,\n  Navigation,\n  Users,\n  Banknote\n} from 'lucide-react';\n\ninterface DriverFilters {\n  serviceType?: string;\n  location?: string;\n  availability?: string;\n  rating?: number;\n  priceRange?: { min: number; max: number };\n}\n\nexport default function GrabDriversPage() {\n  const router = useRouter();\n  const currentLanguage = 'ko';\n  const [filters, setFilters] = useState<DriverFilters>({});\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [activeSubSection, setActiveSubSection] = useState('all');\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const [selectedService, setSelectedService] = useState('');\n  const [selectedAvailability, setSelectedAvailability] = useState('');\n  const [showRegistrationModal, setShowRegistrationModal] = useState(false);\n  const [showFindDriverModal, setShowFindDriverModal] = useState(false);\n  const [isSubmittingRegistration, setIsSubmittingRegistration] = useState(false);\n  const [isSubmittingFind, setIsSubmittingFind] = useState(false);\n\n\n  const getLocalizedText = (key: string) => {\n    const texts: Record<string, Record<string, string>> = {\n      title: {\n        ko: '그랩 앤 앙카스 서비스',\n        zh: 'Grab & Angkas 服务',\n        ja: 'Grab & Angkas サービス',\n        en: 'Grab & Angkas Services',\n        tl: 'Mga Serbisyo ng Grab at Angkas'\n      },\n      subtitle: {\n        ko: '필리핀 전역의 신뢰할 수 있는 드라이버들을 찾아보세요. 안전하고 편리한 이동 서비스입니다.',\n        zh: '在菲律宾全境寻找值得信赖的司机。安全便捷的出行服务。',\n        ja: 'フィリピン全土で信頼できるドライバーを見つけてください。安全で便利な移動サービス。',\n        en: 'Find trusted drivers across the Philippines. Safe and convenient transportation services.',\n        tl: 'Maghanap ng mapagkakatiwalaang mga driver sa buong Pilipinas. Ligtas at convenient na serbisyo sa transportasyon.'\n      },\n      joinDriver: {\n        ko: '드라이버로 등록하기',\n        zh: '注册成为司机',\n        ja: 'ドライバー登録',\n        en: 'Join as Driver',\n        tl: 'Sumali bilang Driver'\n      },\n      findDriver: {\n        ko: '드라이버 찾기',\n        zh: '寻找司机',\n        ja: 'ドライバーを探す',\n        en: 'Find Driver',\n        tl: 'Maghanap ng Driver'\n      }\n    };\n    return texts[key]?.[currentLanguage] || texts[key]?.en || key;\n  };\n\n  const serviceTypes = [\n    { id: 'all', name: '전체', nameEn: 'All', nameTl: 'Lahat', icon: '🚗' },\n    { id: 'drivers', name: '드라이버 등록', nameEn: 'Driver Registration', nameTl: 'Rehistro ng Driver', icon: '🚗' },\n    { id: 'passengers', name: '승객 찾기', nameEn: 'Find Ride', nameTl: 'Hanap ng Sakay', icon: '👥' },\n    { id: 'grab-car', name: 'Grab Car', nameEn: 'Grab Car', nameTl: 'Grab Car', icon: '🚗' },\n    { id: 'angkas', name: 'Angkas', nameEn: 'Angkas', nameTl: 'Angkas', icon: '🏍️' },\n    { id: 'food-delivery', name: '음식배달', nameEn: 'Food Delivery', nameTl: 'Paghahatid ng Pagkain', icon: '🍕' },\n    { id: 'package-delivery', name: '택배', nameEn: 'Package Delivery', nameTl: 'Paghahatid ng Package', icon: '📦' }\n  ];\n\n  const availabilityOptions = [\n    { value: 'all', label: '전체', labelEn: 'All', labelTl: 'Lahat' },\n    { value: 'available', label: '이용가능', labelEn: 'Available Now', labelTl: 'Available Ngayon' },\n    { value: 'scheduled', label: '예약가능', labelEn: 'Bookable', labelTl: 'Pwedeng i-book' },\n    { value: 'offline', label: '오프라인', labelEn: 'Offline', labelTl: 'Offline' }\n  ];\n\n  // 샘플 드라이버 데이터\n  const sampleDrivers = [\n    {\n      id: '1',\n      name: 'Juan Carlos Santos',\n      rating: 4.8,\n      reviews: 156,\n      serviceType: 'drivers',\n      userType: 'driver',\n      vehicle: 'Toyota Vios 2020',\n      plateNumber: 'ABC 1234',\n      location: 'Makati, Manila',\n      availability: 'available',\n      rate: 150,\n      experience: '3년',\n      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      verified: true,\n      completedTrips: 1247\n    },\n    {\n      id: '2',\n      name: 'Maria Teresa Cruz',\n      rating: 4.9,\n      reviews: 89,\n      serviceType: 'drivers',\n      userType: 'driver',\n      vehicle: 'Yamaha Mio 2019',\n      plateNumber: 'XYZ 5678',\n      location: 'Quezon City',\n      availability: 'available',\n      rate: 80,\n      experience: '2년',\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n      verified: true,\n      completedTrips: 567\n    },\n    {\n      id: '3',\n      name: 'Roberto Kim Lee',\n      rating: 4.7,\n      reviews: 234,\n      serviceType: 'drivers',\n      userType: 'driver',\n      vehicle: 'Honda Click 150i',\n      plateNumber: 'DEF 9012',\n      location: 'Cebu City',\n      availability: 'scheduled',\n      rate: 120,\n      experience: '4년',\n      avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n      verified: true,\n      completedTrips: 890\n    },\n    {\n      id: '4',\n      name: 'Anna Michelle Reyes',\n      rating: 4.6,\n      reviews: 78,\n      serviceType: 'drivers',\n      userType: 'driver',\n      vehicle: 'Suzuki Raider 150',\n      plateNumber: 'GHI 3456',\n      location: 'Davao City',\n      availability: 'available',\n      rate: 100,\n      experience: '1년',\n      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\n      verified: false,\n      completedTrips: 234\n    },\n    {\n      id: '5',\n      name: 'Chen Wu Zhang',\n      rating: 4.9,\n      reviews: 312,\n      serviceType: 'drivers',\n      userType: 'driver',\n      vehicle: 'Toyota Fortuner 2021',\n      plateNumber: 'JKL 7890',\n      location: 'Angeles, Pampanga',\n      availability: 'scheduled',\n      rate: 300,\n      experience: '5년',\n      avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face',\n      verified: true,\n      completedTrips: 1456\n    },\n    // 승객 데이터\n    {\n      id: '6',\n      name: 'Lisa Park',\n      rating: 4.7,\n      reviews: 89,\n      serviceType: 'passengers',\n      userType: 'passenger',\n      vehicle: '',\n      plateNumber: '',\n      location: 'BGC, Taguig',\n      availability: 'available',\n      rate: 0,\n      experience: '',\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n      verified: true,\n      completedTrips: 45,\n      destination: 'NAIA Terminal 3',\n      departureTime: '오후 3시',\n      passengers: 2\n    },\n    {\n      id: '7',\n      name: 'Mark Johnson',\n      rating: 4.6,\n      reviews: 67,\n      serviceType: 'passengers',\n      userType: 'passenger',\n      vehicle: '',\n      plateNumber: '',\n      location: 'Ortigas Center',\n      availability: 'available',\n      rate: 0,\n      experience: '',\n      avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n      verified: false,\n      completedTrips: 23,\n      destination: 'SM Mall of Asia',\n      departureTime: '오전 10시',\n      passengers: 1\n    }\n  ];\n\n  // 필터링된 드라이버들\n  const filteredDrivers = useMemo(() => {\n    return sampleDrivers.filter(driver => {\n      if (activeSubSection !== 'all' && driver.serviceType !== activeSubSection) return false;\n      if (selectedLocation && !driver.location.toLowerCase().includes(selectedLocation.toLowerCase())) return false;\n      if (selectedAvailability !== 'all' && driver.availability !== selectedAvailability) return false;\n      if (searchTerm && !driver.name.toLowerCase().includes(searchTerm.toLowerCase()) && \n          !driver.vehicle.toLowerCase().includes(searchTerm.toLowerCase())) return false;\n      return true;\n    });\n  }, [sampleDrivers, activeSubSection, selectedLocation, selectedAvailability, searchTerm]);\n\n  const getServiceName = (service: any) => {\n    switch ((currentLanguage as string) as string) {\n      case 'ko': return service.name;\n      case 'tl': return service.nameTl;\n      default: return service.nameEn;\n    }\n  };\n\n  const getAvailabilityLabel = (option: any) => {\n    switch ((currentLanguage as string) as string) {\n      case 'ko': return option.label;\n      case 'tl': return option.labelTl;\n      default: return option.labelEn;\n    }\n  };\n\n  const getAvailabilityColor = (availability: string) => {\n    switch (availability) {\n      case 'available': return 'text-green-600 bg-green-100';\n      case 'scheduled': return 'text-yellow-600 bg-yellow-100';\n      case 'offline': return 'text-gray-600 bg-gray-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getAvailabilityText = (availability: string) => {\n    const map: Record<string, Record<string, string>> = {\n      available: { ko: '이용가능', en: 'Available', tl: 'Available' },\n      scheduled: { ko: '예약가능', en: 'Bookable', tl: 'Pwedeng i-book' },\n      offline: { ko: '오프라인', en: 'Offline', tl: 'Offline' }\n    };\n    return map[availability]?.[(currentLanguage as string)] || map[availability]?.en || availability;\n  };\n\n  // 드라이버 등록 제출 핸들러\n  const handleDriverRegistration = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmittingRegistration(true);\n\n    const formData = new FormData(e.currentTarget);\n    const registrationData = {\n      name: formData.get('name'),\n      contact: formData.get('contact'),\n      vehicleType: formData.get('vehicleType'),\n      vehicleModel: formData.get('vehicleModel'),\n      plateNumber: formData.get('plateNumber'),\n      experience: formData.get('experience'),\n      serviceArea: formData.get('serviceArea'),\n      serviceTypes: {\n        grabCar: formData.get('grabCar') === 'on',\n        angkas: formData.get('angkas') === 'on',\n        foodDelivery: formData.get('foodDelivery') === 'on',\n        packageDelivery: formData.get('packageDelivery') === 'on'\n      },\n      hourlyRate: formData.get('hourlyRate'),\n      about: formData.get('about')\n    };\n\n    try {\n      const response = await fetch('/api/drivers/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(registrationData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        toast.success((currentLanguage as string) === 'ko' ? '드라이버 등록이 완료되었습니다!' : 'Driver registration completed!');\n        setShowRegistrationModal(false);\n        // 등록 후 드라이버 목록 새로고침\n        router.reload();\n      } else {\n        throw new Error(data.error || 'Registration failed');\n      }\n    } catch (error) {\n      toast.error((currentLanguage as string) === 'ko' ? '등록 중 오류가 발생했습니다.' : 'Error during registration.');\n      console.error('Registration error:', error);\n    } finally {\n      setIsSubmittingRegistration(false);\n    }\n  };\n\n  // 드라이버 찾기 제출 핸들러\n  const handleFindDriver = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmittingFind(true);\n\n    const formData = new FormData(e.currentTarget);\n    const tripData = {\n      pickupLocation: formData.get('pickupLocation'),\n      destination: formData.get('destination'),\n      date: formData.get('date'),\n      time: formData.get('time'),\n      vehicleType: formData.get('vehicleType'),\n      passengers: formData.get('passengers'),\n      specialRequests: formData.get('specialRequests')\n    };\n\n    try {\n      const response = await fetch('/api/trips/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(tripData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        toast.success((currentLanguage as string) === 'ko' ? '드라이버 요청이 등록되었습니다!' : 'Trip request submitted!');\n        setShowFindDriverModal(false);\n        // 요청 후 적절한 페이지로 이동\n        router.push('/messages');\n      } else {\n        throw new Error(data.error || 'Request failed');\n      }\n    } catch (error) {\n      toast.error((currentLanguage as string) === 'ko' ? '요청 중 오류가 발생했습니다.' : 'Error submitting request.');\n      console.error('Trip request error:', error);\n    } finally {\n      setIsSubmittingFind(false);\n    }\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"Grab Drivers - Philippines Transportation Services\"\n        description=\"Find trusted Grab drivers and transportation services across the Philippines. Safe and reliable rides, food delivery, and more.\"\n        keywords=\"grab drivers, philippines transportation, taxi, motorcycle, food delivery, angkas\"\n        type=\"website\"\n        locale={currentLanguage}\n      />\n\n      <FacebookLayout section=\"grab-drivers\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                🚗 {getLocalizedText('title')}\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-6 max-w-3xl mx-auto\">\n                {getLocalizedText('subtitle')}\n              </p>\n\n              {/* Action Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n                <button\n                  onClick={() => setShowRegistrationModal(true)}\n                  className=\"flex items-center justify-center space-x-2 px-8 py-4 bg-green-600 text-white rounded-xl font-semibold hover:bg-green-700 transition-colors shadow-lg\"\n                >\n                  <Plus className=\"h-5 w-5\" />\n                  <span>{getLocalizedText('joinDriver')}</span>\n                </button>\n                \n                <button\n                  onClick={() => setShowFindDriverModal(true)}\n                  className=\"flex items-center justify-center space-x-2 px-8 py-4 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition-colors shadow-lg\"\n                >\n                  <Search className=\"h-5 w-5\" />\n                  <span>{getLocalizedText('findDriver')}</span>\n                </button>\n              </div>\n\n              {/* Trust Indicators */}\n              <div className=\"flex items-center justify-center space-x-6 text-sm text-gray-600\">\n                <div className=\"flex items-center space-x-1\">\n                  <Shield className=\"h-4 w-4 text-green-600\" />\n                  <span>\n                    {(currentLanguage as string) === 'ko' ? '인증된 드라이버' :\n                     (currentLanguage as string) === 'tl' ? 'Verified na mga Driver' :\n                     'Verified Drivers'}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Clock className=\"h-4 w-4 text-blue-600\" />\n                  <span>\n                    {(currentLanguage as string) === 'ko' ? '24/7 서비스' :\n                     (currentLanguage as string) === 'tl' ? '24/7 na Serbisyo' :\n                     '24/7 Service'}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <Star className=\"h-4 w-4 text-yellow-600\" />\n                  <span>\n                    {(currentLanguage as string) === 'ko' ? '평점 시스템' :\n                     (currentLanguage as string) === 'tl' ? 'Rating System' :\n                     'Rating System'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Service Type Navigation */}\n            <div className=\"mb-8\">\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {serviceTypes.map((service) => (\n                    <button\n                      key={service.id}\n                      onClick={() => setActiveSubSection(service.id)}\n                      className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${\n                        activeSubSection === service.id\n                          ? 'bg-blue-600 text-white'\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <span>{service.icon}</span>\n                      <span className=\"text-sm font-medium\">\n                        {getServiceName(service)}\n                      </span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Search and Filter Bar */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder={\n                      (currentLanguage as string) === 'ko' ? '드라이버 이름이나 차량을 검색하세요' :\n                      (currentLanguage as string) === 'tl' ? 'Maghanap ng pangalan ng driver o sasakyan' :\n                      'Search driver name or vehicle'\n                    }\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setShowFilters(!showFilters)}\n                    className=\"flex items-center space-x-2 px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                  >\n                    <SlidersHorizontal className=\"h-5 w-5\" />\n                    <span>필터</span>\n                    {(selectedLocation || selectedAvailability !== 'all') && (\n                      <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {/* Filter Panel */}\n              {showFilters && (\n                <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    {/* 지역 필터 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">지역</label>\n                      <select\n                        value={selectedLocation}\n                        onChange={(e) => setSelectedLocation(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value=\"\">전체 지역</option>\n                        {allPhilippinesRegions.map(region => (\n                          <option key={region.id} value={region.name}>\n                            {region.nameKo} ({region.name})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* 상태 필터 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">상태</label>\n                      <select\n                        value={selectedAvailability}\n                        onChange={(e) => setSelectedAvailability(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      >\n                        {availabilityOptions.map(option => (\n                          <option key={option.value} value={option.value}>\n                            {getAvailabilityLabel(option)}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* 보기 옵션 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">보기 옵션</label>\n                      <div className=\"flex space-x-2\">\n                        <button\n                          onClick={() => setViewMode('grid')}\n                          className={`p-2 border rounded-lg ${viewMode === 'grid' ? 'bg-blue-50 border-blue-300' : 'border-gray-300'}`}\n                        >\n                          <Grid className=\"h-4 w-4\" />\n                        </button>\n                        <button\n                          onClick={() => setViewMode('list')}\n                          className={`p-2 border rounded-lg ${viewMode === 'list' ? 'bg-blue-50 border-blue-300' : 'border-gray-300'}`}\n                        >\n                          <List className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Results Section */}\n            <div className=\"mb-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900\">\n                    {activeSubSection === 'all' \n                      ? ((currentLanguage as string) === 'ko' ? '전체 드라이버' : \n                         (currentLanguage as string) === 'tl' ? 'Lahat ng Driver' : 'All Drivers')\n                      : getServiceName(serviceTypes.find(s => s.id === activeSubSection))\n                    }\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    {filteredDrivers.length}명의 드라이버가 있습니다\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <select className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\">\n                    <option value=\"rating\">평점순</option>\n                    <option value=\"price_low\">낮은 요금순</option>\n                    <option value=\"price_high\">높은 요금순</option>\n                    <option value=\"experience\">경력순</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* Drivers Grid/List */}\n              {filteredDrivers.length > 0 ? (\n                <div className={viewMode === 'grid' \n                  ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" \n                  : \"space-y-4\"\n                }>\n                  {filteredDrivers.map((driver) => (\n                    <div \n                      key={driver.id} \n                      className={`bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow cursor-pointer ${\n                        viewMode === 'list' ? 'flex' : ''\n                      }`}\n                      onClick={() => router.push(`/grab-drivers/driver/${driver.id}`)}\n                    >\n                      <div className={`relative ${viewMode === 'list' ? 'w-32 h-32' : 'w-full h-48'}`}>\n                        <img \n                          src={driver.avatar}\n                          alt={driver.name}\n                          className=\"w-full h-full object-cover\"\n                        />\n                        <div className=\"absolute top-2 right-2\">\n                          <span className={`px-2 py-1 rounded text-xs font-medium text-white ${\n                            getAvailabilityColor(driver.availability)\n                          }`}>\n                            {getAvailabilityText(driver.availability)}\n                          </span>\n                        </div>\n                        {driver.verified && (\n                          <div className=\"absolute top-2 left-2\">\n                            <div className=\"flex items-center space-x-1 bg-white rounded px-2 py-1\">\n                              <Shield className=\"h-3 w-3 text-green-600\" />\n                              <span className=\"text-xs text-green-600 font-medium\">인증</span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                      \n                      <div className={`p-4 ${viewMode === 'list' ? 'flex-1' : ''}`}>\n                        <h3 className=\"font-semibold text-gray-900 mb-2\">\n                          {driver.name}\n                        </h3>\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <div className=\"flex items-center space-x-1\">\n                            <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\n                            <span className=\"text-sm font-medium\">{driver.rating}</span>\n                            <span className=\"text-xs text-gray-600\">({driver.reviews})</span>\n                          </div>\n                        </div>\n                        <div className=\"text-sm text-gray-600 mb-2\">\n                          {driver.userType === 'driver' ? (\n                            <>\n                              <div className=\"flex items-center space-x-1 mb-1\">\n                                <Car className=\"h-3 w-3\" />\n                                <span>{driver.vehicle}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1 mb-1\">\n                                <MapPin className=\"h-3 w-3\" />\n                                <span>{driver.location}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                <Clock className=\"h-3 w-3\" />\n                                <span>경력 {driver.experience}</span>\n                              </div>\n                            </>\n                          ) : (\n                            <>\n                              <div className=\"flex items-center space-x-1 mb-1\">\n                                <MapPin className=\"h-3 w-3\" />\n                                <span>{driver.location} → {(driver as any).destination}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1 mb-1\">\n                                <Clock className=\"h-3 w-3\" />\n                                <span>출발: {(driver as any).departureTime}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                <Users className=\"h-3 w-3\" />\n                                <span>승객 {(driver as any).passengers}명</span>\n                              </div>\n                            </>\n                          )}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"text-lg font-bold text-blue-600\">\n                            {driver.userType === 'driver' ? `₱${driver.rate}/시간` : '라이드 요청'}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">\n                            {driver.completedTrips} 완주\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Car className=\"h-12 w-12 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">드라이버가 없습니다</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    선택하신 조건에 맞는 드라이버가 없습니다. 필터를 조정해보세요.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Statistics */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-blue-600\">{sampleDrivers.length}</div>\n                <div className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '등록 드라이버' : \n                   (currentLanguage as string) === 'tl' ? 'Mga Registered Driver' : 'Registered Drivers'}\n                </div>\n              </div>\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-green-600\">4.8/5</div>\n                <div className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '평균 평점' : \n                   (currentLanguage as string) === 'tl' ? 'Average Rating' : 'Average Rating'}\n                </div>\n              </div>\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-purple-600\">5,234</div>\n                <div className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '완료된 라이드' : \n                   (currentLanguage as string) === 'tl' ? 'Natapos na Ride' : 'Completed Rides'}\n                </div>\n              </div>\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-orange-600\">24/7</div>\n                <div className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '서비스 시간' : \n                   (currentLanguage as string) === 'tl' ? 'Oras ng Serbisyo' : 'Service Hours'}\n                </div>\n              </div>\n            </div>\n\n            {/* Driver Registration Modal */}\n            {showRegistrationModal && (\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n                <div className=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n                  <div className=\"p-6 border-b border-gray-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <h2 className=\"text-2xl font-bold text-gray-900\">\n                        {(currentLanguage as string) === 'ko' ? '드라이버 등록하기' :\n                         (currentLanguage as string) === 'tl' ? 'Mag-register bilang Driver' :\n                         'Register as Driver'}\n                      </h2>\n                      <button\n                        onClick={() => setShowRegistrationModal(false)}\n                        className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                      >\n                        <X className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  <form className=\"p-6 space-y-6\" onSubmit={handleDriverRegistration}>\n                    {/* Personal Information */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        {(currentLanguage as string) === 'ko' ? '개인 정보' : 'Personal Information'}\n                      </h3>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '이름' : 'Full Name'}\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            required\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\"\n                            placeholder={(currentLanguage as string) === 'ko' ? '전체 이름' : 'Enter your full name'}\n                          />\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '연락처' : 'Contact Number'}\n                          </label>\n                          <input\n                            type=\"tel\"\n                            name=\"contact\"\n                            required\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\"\n                            placeholder=\"+63 912 345 6789\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Vehicle Information */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        {(currentLanguage as string) === 'ko' ? '차량 정보' : 'Vehicle Information'}\n                      </h3>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '차량 종류' : 'Vehicle Type'}\n                          </label>\n                          <select name=\"vehicleType\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\">\n                            <option value=\"\">선택하세요</option>\n                            <option value=\"car\">자동차 (Car)</option>\n                            <option value=\"motorcycle\">오토바이 (Motorcycle)</option>\n                            <option value=\"van\">밴 (Van)</option>\n                          </select>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '차량 모델' : 'Vehicle Model'}\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"vehicleModel\"\n                            required\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\"\n                            placeholder=\"예: Toyota Vios 2020\"\n                          />\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '차량 번호' : 'Plate Number'}\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"plateNumber\"\n                            required\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\"\n                            placeholder=\"ABC 1234\"\n                          />\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '운전 경력' : 'Driving Experience'}\n                          </label>\n                          <select name=\"experience\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\">\n                            <option value=\"\">선택하세요</option>\n                            <option value=\"1년 미만\">1년 미만</option>\n                            <option value=\"1-3년\">1-3년</option>\n                            <option value=\"3-5년\">3-5년</option>\n                            <option value=\"5년 이상\">5년 이상</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Service Information */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        {(currentLanguage as string) === 'ko' ? '서비스 정보' : 'Service Information'}\n                      </h3>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '서비스 지역' : 'Service Area'}\n                          </label>\n                          <select name=\"serviceArea\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\">\n                            <option value=\"\">선택하세요</option>\n                            {allPhilippinesRegions.map(region => (\n                              <option key={region.id} value={region.name}>\n                                {region.nameKo} ({region.name})\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '서비스 유형' : 'Service Types'}\n                          </label>\n                          <div className=\"space-y-2\">\n                            <label className=\"flex items-center\">\n                              <input type=\"checkbox\" name=\"grabCar\" className=\"mr-2\" />\n                              <span>Grab Car</span>\n                            </label>\n                            <label className=\"flex items-center\">\n                              <input type=\"checkbox\" name=\"angkas\" className=\"mr-2\" />\n                              <span>Angkas</span>\n                            </label>\n                            <label className=\"flex items-center\">\n                              <input type=\"checkbox\" name=\"foodDelivery\" className=\"mr-2\" />\n                              <span>음식 배달 (Food Delivery)</span>\n                            </label>\n                            <label className=\"flex items-center\">\n                              <input type=\"checkbox\" name=\"packageDelivery\" className=\"mr-2\" />\n                              <span>택배 배달 (Package Delivery)</span>\n                            </label>\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '시간당 요금 (₱)' : 'Hourly Rate (₱)'}\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"hourlyRate\"\n                            required\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\"\n                            placeholder=\"150\"\n                          />\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '자기 소개' : 'About Yourself'}\n                          </label>\n                          <textarea\n                            name=\"about\"\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500\"\n                            rows={4}\n                            placeholder={(currentLanguage as string) === 'ko' ? '승객들에게 자신을 소개해주세요...' : 'Introduce yourself to passengers...'}\n                          ></textarea>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Submit Buttons */}\n                    <div className=\"flex space-x-4\">\n                      <button\n                        type=\"submit\"\n                        disabled={isSubmittingRegistration}\n                        className=\"flex-1 bg-green-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {isSubmittingRegistration ? \n                          ((currentLanguage as string) === 'ko' ? '등록 중...' : 'Registering...') : \n                          ((currentLanguage as string) === 'ko' ? '등록하기' : 'Register')\n                        }\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowRegistrationModal(false)}\n                        className=\"flex-1 bg-gray-200 text-gray-700 px-6 py-3 rounded-lg font-semibold hover:bg-gray-300 transition-colors\"\n                      >\n                        {(currentLanguage as string) === 'ko' ? '취소' : 'Cancel'}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n\n            {/* Find Driver Modal */}\n            {showFindDriverModal && (\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n                <div className=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n                  <div className=\"p-6 border-b border-gray-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <h2 className=\"text-2xl font-bold text-gray-900\">\n                        {(currentLanguage as string) === 'ko' ? '드라이버 찾기' :\n                         (currentLanguage as string) === 'tl' ? 'Maghanap ng Driver' :\n                         'Find a Driver'}\n                      </h2>\n                      <button\n                        onClick={() => setShowFindDriverModal(false)}\n                        className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                      >\n                        <X className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  <form className=\"p-6 space-y-6\" onSubmit={handleFindDriver}>\n                    {/* Trip Information */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        {(currentLanguage as string) === 'ko' ? '이동 정보' : 'Trip Information'}\n                      </h3>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '출발지' : 'Pickup Location'}\n                          </label>\n                          <div className=\"relative\">\n                            <MapPin className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                            <input\n                              type=\"text\"\n                              name=\"pickupLocation\"\n                              required\n                              className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                              placeholder={(currentLanguage as string) === 'ko' ? '출발 위치를 입력하세요' : 'Enter pickup location'}\n                            />\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '목적지' : 'Destination'}\n                          </label>\n                          <div className=\"relative\">\n                            <Navigation className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                            <input\n                              type=\"text\"\n                              name=\"destination\"\n                              required\n                              className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                              placeholder={(currentLanguage as string) === 'ko' ? '목적지를 입력하세요' : 'Enter destination'}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                              {(currentLanguage as string) === 'ko' ? '날짜' : 'Date'}\n                            </label>\n                            <input\n                              type=\"date\"\n                              name=\"date\"\n                              required\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                            />\n                          </div>\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                              {(currentLanguage as string) === 'ko' ? '시간' : 'Time'}\n                            </label>\n                            <input\n                              type=\"time\"\n                              name=\"time\"\n                              required\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Additional Information */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                        {(currentLanguage as string) === 'ko' ? '추가 정보' : 'Additional Information'}\n                      </h3>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '차량 유형' : 'Vehicle Type'}\n                          </label>\n                          <select name=\"vehicleType\" className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\">\n                            <option value=\"\">모든 유형</option>\n                            <option value=\"car\">자동차 (Car)</option>\n                            <option value=\"motorcycle\">오토바이 (Motorcycle)</option>\n                            <option value=\"van\">밴 (Van)</option>\n                          </select>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '승객 수' : 'Number of Passengers'}\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"passengers\"\n                            min=\"1\"\n                            max=\"8\"\n                            defaultValue=\"1\"\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"1\"\n                          />\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            {(currentLanguage as string) === 'ko' ? '특별 요청사항' : 'Special Requests'}\n                          </label>\n                          <textarea\n                            name=\"specialRequests\"\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                            rows={3}\n                            placeholder={(currentLanguage as string) === 'ko' ? '특별한 요청사항이 있으면 입력하세요...' : 'Enter any special requests...'}\n                          ></textarea>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Submit Buttons */}\n                    <div className=\"flex space-x-4\">\n                      <button\n                        type=\"submit\"\n                        disabled={isSubmittingFind}\n                        className=\"flex-1 bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {isSubmittingFind ? \n                          ((currentLanguage as string) === 'ko' ? '요청 중...' : 'Submitting...') : \n                          ((currentLanguage as string) === 'ko' ? '드라이버 찾기' : 'Find Driver')\n                        }\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowFindDriverModal(false)}\n                        className=\"flex-1 bg-gray-200 text-gray-700 px-6 py-3 rounded-lg font-semibold hover:bg-gray-300 transition-colors\"\n                      >\n                        {(currentLanguage as string) === 'ko' ? '취소' : 'Cancel'}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/immigration.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/index-broken.tsx",["945","946","947","948"],[],"import { useState, useMemo, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport DynamicHeader from '@/components/common/DynamicHeader';\nimport FloatingContactButton from '@/components/common/FloatingContactButton';\nimport PortalLayout from '@/components/layout/PortalLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { OrganizationSchema, WebsiteSchema } from '@/components/seo/JsonLd';\nimport { Property, PropertyFilters } from '@/types/property';\nimport { defaultSEO, getLocalizedSEO } from '@/utils/seo';\nimport { resetMenuCache } from '@/utils/resetMenu';\nimport { ThumbsUp, MessageCircle, Share2, Camera, Video, Smile, MapPin, Home as HomeIcon, Heart, Bookmark, MoreHorizontal, Globe } from 'lucide-react';\nimport Image from 'next/image';\n\nexport default function Home() {\n  const router = useRouter();\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [filters, setFilters] = useState<PropertyFilters>({ category: 'all' });\n\n  // SEO 설정 - 단순화\n  const seoConfig = useMemo(() => {\n    return defaultSEO.home;\n  }, []);\n\n  // 메뉴 캐시 강제 초기화는 일시적으로 비활성화\n  // useEffect(() => {\n  //   if (typeof window !== 'undefined') {\n  //     const hasResetForAngeles = localStorage.getItem('hasResetMenuForAngeles');\n  //     if (!hasResetForAngeles) {\n  //       resetMenuCache();\n  //       localStorage.setItem('hasResetMenuForAngeles', 'true');\n  //       console.log('Menu cache has been reset for Angeles region support');\n  //     }\n  //   }\n  // }, []);\n\n  // Properties will be fetched from API\n  const allProperties: Property[] = [];\n\n  // Calculate filtered properties directly\n  const filteredProperties = useMemo(() => {\n    // Get base properties based on category\n    const baseProperties = allProperties;\n    \n    // Filter properties based on filters\n    let filtered = baseProperties;\n    \n    if (filters.region) {\n      filtered = filtered.filter(property => property.region === filters.region);\n    }\n    \n    if (filters.type) {\n      filtered = filtered.filter(property => property.type === filters.type);\n    }\n    \n    if (filters.minPrice !== undefined) {\n      filtered = filtered.filter(property => property.price >= filters.minPrice!);\n    }\n    \n    if (filters.maxPrice !== undefined) {\n      filtered = filtered.filter(property => property.price <= filters.maxPrice!);\n    }\n    \n    if (filters.bedrooms !== undefined) {\n      filtered = filtered.filter(property => property.bedrooms >= filters.bedrooms!);\n    }\n    \n    if (filters.bathrooms !== undefined) {\n      filtered = filtered.filter(property => property.bathrooms >= filters.bathrooms!);\n    }\n    \n    if (filters.furnished !== undefined) {\n      filtered = filtered.filter(property => property.furnished === filters.furnished);\n    }\n\n    // Monthly stay specific filters\n    if (filters.travelerFriendly) {\n      filtered = filtered.filter(property => property.monthlyStay?.available === true);\n    }\n\n    if (filters.nearTouristSpots) {\n      filtered = filtered.filter(property => \n        property.monthlyStay?.touristAttractions?.some(attraction => \n          attraction.type === 'beach' || attraction.type === 'temple'\n        )\n      );\n    }\n\n    if (filters.wifiSpeed) {\n      filtered = filtered.filter(property => {\n        const wifiSpeed = property.monthlyStay?.livingConvenience?.wifi_speed;\n        if (!wifiSpeed) return false;\n        \n        switch (filters.wifiSpeed) {\n          case 'basic': return true;\n          case 'fast': return wifiSpeed === 'fast' || wifiSpeed === 'ultra';\n          case 'ultra': return wifiSpeed === 'ultra';\n          default: return true;\n        }\n      });\n    }\n\n    if (filters.duration) {\n      filtered = filtered.filter(property => {\n        const monthlyStay = property.monthlyStay;\n        if (!monthlyStay) return false;\n        \n        switch (filters.duration) {\n          case 'short': return monthlyStay.minStayDays <= 14;\n          case 'medium': return monthlyStay.minStayDays <= 30 && monthlyStay.maxStayDays >= 30;\n          case 'long': return monthlyStay.maxStayDays >= 60;\n          case 'extended': return monthlyStay.maxStayDays >= 90;\n          default: return true;\n        }\n      });\n    }\n    \n    // Sort properties\n    if (filters.sortBy) {\n      filtered.sort((a, b) => {\n        switch (filters.sortBy) {\n          case 'price':\n            return a.price - b.price;\n          case 'date':\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n          case 'popularity':\n            return (b.viewCount || 0) - (a.viewCount || 0);\n          default:\n            return 0;\n        }\n      });\n    }\n    \n    return filtered;\n  }, [filters]);\n\n  const handleLanguageChange = (language: string) => {\n    setCurrentLanguage(language);\n  };\n\n  const handleFiltersChange = (newFilters: PropertyFilters) => {\n    setFilters(newFilters);\n  };\n\n  const handlePropertyContact = (property: Property) => {\n    if (property.contact.whatsapp) {\n      window.open(`https://wa.me/${property.contact.whatsapp}`, '_blank');\n    }\n  };\n\n  const handlePropertyLike = (property: Property) => {\n    // TODO: Implement like functionality\n  };\n\n  const handlePropertyShare = (property: Property) => {\n    if (navigator.share) {\n      navigator.share({\n        title: property.title,\n        text: property.description,\n        url: `/property/${property.id}`,\n      });\n    } else {\n      // Fallback for browsers that don't support Web Share API\n      navigator.clipboard.writeText(`${window.location.origin}/property/${property.id}`);\n    }\n  };\n\n  // Remove this as we're now grouping by region/type\n\n  // 스토리 데이터 (주요 부동산 하이라이트)\n  const stories = [\n    { id: 1, title: '마닐라 럭셔리', image: '/images/properties/manila-luxury.jpg', type: 'luxury' },\n    { id: 2, title: '세부 비치뷰', image: '/images/properties/cebu-beach.jpg', type: 'beach' },\n    { id: 3, title: '다바오 신축', image: '/images/properties/davao-new.jpg', type: 'new' },\n    { id: 4, title: '앙헬레스 풀빌라', image: '/images/properties/angeles-villa.jpg', type: 'villa' },\n    { id: 5, title: '보라카이 리조트', image: '/images/properties/boracay-resort.jpg', type: 'resort' },\n  ];\n\n  // 더미 부동산 데이터 (실제로는 API에서 가져와야 함)\n  const dummyProperties: Property[] = [\n    // 더 많은 더미 데이터 추가 가능\n  ];\n\n  return (\n    <>\n      <SEOHead\n        title=\"Philippines Rental - Premium Apartments for Foreigners\"\n        description=\"Find premium rental apartments in Philippines perfect for foreigners. Monthly stays, furnished apartments in Manila, Cebu, Davao. Professional service, multilingual support.\"\n        keywords=\"Philippines rental, apartments for foreigners, monthly stay Philippines, furnished rental Manila, Cebu apartment, Davao rental, long term rental Philippines\"\n        image=\"/images/og-home.jpg\"\n        type=\"website\"\n        locale={currentLanguage}\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n      />\n      \n      <OrganizationSchema\n        name=\"Philippines Rental\"\n        url={process.env.NEXT_PUBLIC_SITE_URL || 'https://philippines-rental.com'}\n        logo={`${process.env.NEXT_PUBLIC_SITE_URL || 'https://philippines-rental.com'}/images/logo.png`}\n        description=\"Premium rental apartments in Philippines for foreigners. Professional service, multilingual support.\"\n        contactPoint={{\n          telephone: \"\",\n          contactType: \"customer service\",\n          areaServed: \"Philippines\",\n          availableLanguage: [\"English\", \"Korean\", \"Chinese\", \"Japanese\"]\n        }}\n        address={{\n          streetAddress: \"\",\n          addressLocality: \"Manila\",\n          addressRegion: \"NCR\",\n          postalCode: \"\",\n          addressCountry: \"Philippines\"\n        }}\n        sameAs={[\n          \"https://www.facebook.com/philippinesrental\",\n          \"https://www.instagram.com/philippinesrental\",\n          \"https://twitter.com/philippinesrental\"\n        ]}\n      />\n      \n      <WebsiteSchema />\n\n      {/* 페이스북 스타일 배경 */}\n      <div className=\"min-h-screen\" style={{ backgroundColor: '#f0f2f5' }}>\n        <DynamicHeader \n          currentLanguage={currentLanguage} \n          onLanguageChange={handleLanguageChange} \n        />\n        \n        <PortalLayout>\n          <main className=\"py-4\">\n            <div className=\"max-w-screen-lg mx-auto\">\n              {/* 포스트 작성 박스 */}\n              <div className=\"bg-white rounded-lg shadow mb-4\">\n                <div className=\"p-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center\">\n                      <HomeIcon className=\"h-5 w-5 text-gray-600\" />\n                    </div>\n                    <button \n                      onClick={() => router.push('/owner/submit')}\n                      className=\"flex-1 text-left bg-gray-100 hover:bg-gray-200 rounded-full px-4 py-2 text-gray-500 transition-colors\"\n                    >\n                      어떤 부동산을 등록하시겠어요?\n                    </button>\n                  </div>\n                  <div className=\"border-t mt-3 pt-3 flex justify-around\">\n                    <button className=\"flex items-center space-x-2 text-gray-600 hover:bg-gray-100 px-4 py-2 rounded-lg transition-colors\">\n                      <Camera className=\"text-green-600\" />\n                      <span className=\"text-sm font-medium\">사진</span>\n                    </button>\n                    <button className=\"flex items-center space-x-2 text-gray-600 hover:bg-gray-100 px-4 py-2 rounded-lg transition-colors\">\n                      <Video className=\"text-red-600\" />\n                      <span className=\"text-sm font-medium\">동영상</span>\n                    </button>\n                    <button className=\"flex items-center space-x-2 text-gray-600 hover:bg-gray-100 px-4 py-2 rounded-lg transition-colors\">\n                      <MapPin className=\"text-blue-600\" />\n                      <span className=\"text-sm font-medium\">위치</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* 스토리 섹션 */}\n              <div className=\"bg-white rounded-lg shadow mb-4 p-4\">\n                <div className=\"flex space-x-3 overflow-x-auto pb-2\">\n                  {/* 스토리 추가 버튼 */}\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"relative\">\n                      <div className=\"w-28 h-48 bg-gray-100 rounded-lg overflow-hidden cursor-pointer hover:opacity-90 transition-opacity\">\n                        <div className=\"h-36 bg-gray-200 flex items-center justify-center\">\n                          <div className=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center\">\n                            <span className=\"text-white text-2xl\">+</span>\n                          </div>\n                        </div>\n                        <div className=\"h-12 flex items-center justify-center\">\n                          <span className=\"text-xs font-medium\">스토리 만들기</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* 스토리 아이템들 */}\n                  {stories.map(story => (\n                    <div key={story.id} className=\"flex-shrink-0\">\n                      <div className=\"relative\">\n                        <div className=\"w-28 h-48 bg-gradient-to-b from-transparent to-black/60 rounded-lg overflow-hidden cursor-pointer hover:opacity-90 transition-opacity\">\n                          <img \n                            src={story.image} \n                            alt={story.title}\n                            className=\"w-full h-full object-cover\"\n                          />\n                          <div className=\"absolute top-2 left-2\">\n                            <div className=\"w-10 h-10 bg-blue-500 rounded-full border-4 border-white\" />\n                          </div>\n                          <div className=\"absolute bottom-2 left-2 right-2\">\n                            <p className=\"text-white text-xs font-medium\">{story.title}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* 필터 섹션 (페이스북 스타일) */}\n              <div className=\"bg-white rounded-lg shadow mb-4 p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h3 className=\"font-semibold\">부동산 필터</h3>\n                  <button \n                    onClick={() => handleFiltersChange({})}\n                    className=\"text-blue-600 hover:underline text-sm\"\n                  >\n                    필터 초기화\n                  </button>\n                </div>\n                <div className=\"flex flex-wrap gap-2\">\n                  <select \n                    className=\"px-3 py-1.5 bg-gray-100 rounded-full text-sm\"\n                    value={filters.region || ''}\n                    onChange={(e) => handleFiltersChange({...filters, region: e.target.value || undefined})}\n                  >\n                    <option value=\"\">모든 지역</option>\n                    <option value=\"Manila\">마닐라</option>\n                    <option value=\"Cebu\">세부</option>\n                    <option value=\"Davao\">다바오</option>\n                    <option value=\"Angeles\">앙헬레스</option>\n                  </select>\n                  <select \n                    className=\"px-3 py-1.5 bg-gray-100 rounded-full text-sm\"\n                    value={filters.type || ''}\n                    onChange={(e) => handleFiltersChange({...filters, type: e.target.value as 'house' | 'condo' | 'apartment' | 'studio' | 'villa' | 'townhouse' | 'village' || undefined})}\n                  >\n                    <option value=\"\">모든 유형</option>\n                    <option value=\"condo\">콘도</option>\n                    <option value=\"house\">하우스</option>\n                    <option value=\"apartment\">아파트</option>\n                    <option value=\"villa\">빌라</option>\n                  </select>\n                  <select \n                    className=\"px-3 py-1.5 bg-gray-100 rounded-full text-sm\"\n                    value={filters.sortBy || ''}\n                    onChange={(e) => handleFiltersChange({...filters, sortBy: e.target.value as any || undefined})}\n                  >\n                    <option value=\"\">정렬</option>\n                    <option value=\"date\">최신순</option>\n                    <option value=\"price\">가격순</option>\n                    <option value=\"popularity\">인기순</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* 부동산 피드 (페이스북 포스트 스타일) */}\n              <div className=\"space-y-4\">\n                {(dummyProperties.length > 0 ? dummyProperties : filteredProperties).map((property: any) => (\n                  <div key={property.id} className=\"bg-white rounded-lg shadow\">\n                    {/* 포스트 헤더 */}\n                    <div className=\"p-4\">\n                      <div className=\"flex items-start\">\n                        <div className=\"w-10 h-10 rounded-full bg-gray-300 flex-shrink-0 overflow-hidden\">\n                          {property.owner?.avatar ? (\n                            <img src={property.owner.avatar} alt={property.owner.name} className=\"w-full h-full object-cover\" />\n                          ) : (\n                            <div className=\"w-full h-full flex items-center justify-center\">\n                              <HomeIcon className=\"h-5 w-5 text-gray-600\" />\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"ml-3 flex-1\">\n                          <div className=\"flex items-center\">\n                            <h3 className=\"font-semibold text-sm\">\n                              {property.owner?.name || property.contact.name}\n                            </h3>\n                            {property.owner?.verified && (\n                              <span className=\"ml-1 text-blue-500 text-xs\">✓</span>\n                            )}\n                          </div>\n                          <div className=\"flex items-center text-gray-500 text-xs\">\n                            <span>{new Date(property.createdAt).toLocaleDateString()}</span>\n                            <span className=\"mx-1\">·</span>\n                            <MapPin className=\"mr-1 w-[10px] h-[10px]\" />\n                            <span>{property.region}</span>\n                          </div>\n                        </div>\n                        <button className=\"text-gray-600 hover:bg-gray-100 rounded-full p-2\">\n                          <span className=\"text-xl\">···</span>\n                        </button>\n                      </div>\n                      \n                      {/* 포스트 내용 */}\n                      <div className=\"mt-3\">\n                        <h2 className=\"font-semibold text-lg mb-1\">{property.title}</h2>\n                        <p className=\"text-gray-700 text-sm mb-2\">{property.description}</p>\n                        <div className=\"text-blue-600 font-semibold text-lg\">\n                          ₱{property.price.toLocaleString()}/월\n                        </div>\n                        <div className=\"flex flex-wrap gap-2 mt-2\">\n                          <span className=\"text-xs bg-gray-100 px-2 py-1 rounded-full\">\n                            {property.bedrooms}BR {property.bathrooms}BA\n                          </span>\n                          <span className=\"text-xs bg-gray-100 px-2 py-1 rounded-full\">\n                            {property.area}㎡\n                          </span>\n                          {property.furnished && (\n                            <span className=\"text-xs bg-gray-100 px-2 py-1 rounded-full\">\n                              가구완비\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* 이미지 */}\n                    {property.images && property.images[0] && (\n                      <div className=\"relative h-96 bg-gray-200\">\n                        <img \n                          src={property.images[0]} \n                          alt={property.title}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                    )}\n                    \n                    {/* 좋아요/댓글 수 */}\n                    <div className=\"px-4 py-2 border-b\">\n                      <div className=\"flex items-center justify-between text-gray-500 text-sm\">\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"flex items-center\">\n                            <ThumbsUp className=\"text-blue-500 mr-1 w-[14px] h-[14px]\" />\n                            {property.likeCount || 0}\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-3\">\n                          <span>{property.commentCount || 0} 댓글</span>\n                          <span>{property.viewCount || 0} 조회</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* 액션 버튼 */}\n                    <div className=\"px-4 py-1\">\n                      <div className=\"flex items-center justify-around\">\n                        <button \n                          onClick={() => handlePropertyLike(property)}\n                          className=\"flex items-center justify-center space-x-2 text-gray-600 hover:bg-gray-100 px-4 py-2 rounded-lg transition-colors flex-1\"\n                        >\n                          <ThumbsUp className=\"w-[18px] h-[18px]\" />\n                          <span className=\"text-sm font-medium\">좋아요</span>\n                        </button>\n                        <button \n                          onClick={() => router.push(`/property/${property.id}`)}\n                          className=\"flex items-center justify-center space-x-2 text-gray-600 hover:bg-gray-100 px-4 py-2 rounded-lg transition-colors flex-1\"\n                        >\n                          <MessageCircle className=\"w-[18px] h-[18px]\" />\n                          <span className=\"text-sm font-medium\">댓글</span>\n                        </button>\n                        <button \n                          onClick={() => handlePropertyShare(property)}\n                          className=\"flex items-center justify-center space-x-2 text-gray-600 hover:bg-gray-100 px-4 py-2 rounded-lg transition-colors flex-1\"\n                        >\n                          <Share2 className=\"w-[18px] h-[18px]\" />\n                          <span className=\"text-sm font-medium\">공유</span>\n                        </button>\n                      </div>\n                    </div>\n                    \n                    {/* 문의하기 버튼 */}\n                    <div className=\"px-4 pb-3\">\n                      <button \n                        onClick={() => handlePropertyContact(property)}\n                        className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 rounded-lg transition-colors\"\n                      >\n                        메시지 보내기\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* 더 보기 버튼 */}\n              <div className=\"mt-6 text-center\">\n                <button className=\"bg-gray-200 hover:bg-gray-300 px-6 py-2 rounded-lg font-medium text-gray-700 transition-colors\">\n                  더 보기\n                </button>\n              </div>\n\n              {/* No Results */}\n              {filteredProperties.length === 0 && dummyProperties.length === 0 && (\n                <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n                  <div className=\"text-gray-500 text-lg mb-4\">\n                    등록된 부동산이 없습니다\n                  </div>\n                  <button \n                    onClick={() => handleFiltersChange({})}\n                    className=\"text-blue-600 hover:underline font-medium\"\n                  >\n                    필터 초기화\n                  </button>\n                </div>\n              )}\n            </div>\n          </main>\n        </PortalLayout>\n\n        {/* Floating Contact Button */}\n        <FloatingContactButton />\n      </div>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/index.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/ja.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/jobs.tsx",["949"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { allPhilippinesRegions } from '@/data/philippinesRegions';\nimport { \n  Search, \n  Filter, \n  MapPin, \n  Calendar, \n  DollarSign,\n  Briefcase,\n  Clock,\n  Building,\n  Users,\n  Star,\n  Plus,\n  SlidersHorizontal,\n  ChevronDown,\n  Eye,\n  Heart,\n  Share2,\n  TrendingUp\n} from 'lucide-react';\n\ninterface JobFilters {\n  jobType?: string;\n  location?: string;\n  salary?: { min: number; max: number };\n  experience?: string;\n  company?: string;\n}\n\nexport default function JobsPage() {\n  const router = useRouter();\n  const [currentLanguage, setCurrentLanguage] = useState('ko');\n  const [filters, setFilters] = useState<JobFilters>({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeJobType, setActiveJobType] = useState('all');\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const [selectedExperience, setSelectedExperience] = useState('');\n  const [selectedSalaryRange, setSelectedSalaryRange] = useState('');\n\n\n  const jobTypes = [\n    { id: 'all', name: '전체', nameEn: 'All Jobs', nameTl: 'Lahat ng Trabaho', icon: '💼' },\n    { id: 'full-time', name: '정규직', nameEn: 'Full-time', nameTl: 'Full-time', icon: '🏢' },\n    { id: 'part-time', name: '파트타임', nameEn: 'Part-time', nameTl: 'Part-time', icon: '⏰' },\n    { id: 'freelance', name: '프리랜서', nameEn: 'Freelance', nameTl: 'Freelance', icon: '💻' },\n    { id: 'contract', name: '계약직', nameEn: 'Contract', nameTl: 'Kontrata', icon: '📋' },\n    { id: 'remote', name: '재택근무', nameEn: 'Remote', nameTl: 'Work from Home', icon: '🏠' },\n    { id: 'internship', name: '인턴십', nameEn: 'Internship', nameTl: 'Internship', icon: '🎓' }\n  ];\n\n  const experienceLevels = [\n    { value: 'all', label: '전체', labelEn: 'All', labelTl: 'Lahat' },\n    { value: 'entry', label: '신입', labelEn: 'Entry Level', labelTl: 'Entry Level' },\n    { value: 'junior', label: '주니어', labelEn: 'Junior (1-3 years)', labelTl: 'Junior (1-3 taon)' },\n    { value: 'mid', label: '중급', labelEn: 'Mid Level (3-5 years)', labelTl: 'Mid Level (3-5 taon)' },\n    { value: 'senior', label: '시니어', labelEn: 'Senior (5+ years)', labelTl: 'Senior (5+ taon)' },\n    { value: 'lead', label: '리드/매니저', labelEn: 'Lead/Manager', labelTl: 'Lead/Manager' }\n  ];\n\n  const salaryRanges = [\n    { value: 'all', label: '전체', labelEn: 'All', labelTl: 'Lahat' },\n    { value: '15000-25000', label: '₱15,000-25,000', labelEn: '₱15,000-25,000', labelTl: '₱15,000-25,000' },\n    { value: '25000-40000', label: '₱25,000-40,000', labelEn: '₱25,000-40,000', labelTl: '₱25,000-40,000' },\n    { value: '40000-60000', label: '₱40,000-60,000', labelEn: '₱40,000-60,000', labelTl: '₱40,000-60,000' },\n    { value: '60000-100000', label: '₱60,000-100,000', labelEn: '₱60,000-100,000', labelTl: '₱60,000-100,000' },\n    { value: '100000+', label: '₱100,000+', labelEn: '₱100,000+', labelTl: '₱100,000+' }\n  ];\n\n  // 채용공고 데이터는 API에서 가져올 예정\n  const sampleJobs: any[] = [\n    {\n      id: '1',\n      title: '한국어 번역 전문가',\n      titleKo: '한국어 번역 전문가',\n      company: 'Korea Philippines Corp',\n      companyLogo: '🏢',\n      location: 'BGC, Taguig',\n      salary: '₱40,000-60,000',\n      posted: '2일 전',\n      description: '한국어-영어 번역 및 통역 업무를 담당할 전문가를 모집합니다.',\n      requirements: ['한국어 원어민', '영어 유창', '번역 경험 3년+'],\n      jobType: 'full-time',\n      experience: 'mid',\n      urgent: true,\n      verified: true,\n      saved: false,\n      applications: 12\n    },\n    {\n      id: '2',\n      title: '웹 개발자',\n      titleKo: '웹 개발자',\n      company: 'Tech Solutions PH',\n      companyLogo: '💻',\n      location: 'Makati City',\n      salary: '₱35,000-50,000',\n      posted: '1주 전',\n      description: 'React/Next.js를 활용한 웹 애플리케이션 개발자를 모집합니다.',\n      requirements: ['React', 'Next.js', 'TypeScript'],\n      jobType: 'full-time',\n      experience: 'junior',\n      urgent: false,\n      verified: true,\n      saved: true,\n      applications: 25\n    }\n  ];\n\n  // 필터링된 채용공고들\n  const filteredJobs = useMemo(() => {\n    return sampleJobs.filter(job => {\n      if (activeJobType !== 'all' && job.jobType !== activeJobType) return false;\n      if (selectedLocation && !job.location.toLowerCase().includes(selectedLocation.toLowerCase())) return false;\n      if (selectedExperience !== 'all' && job.experience !== selectedExperience) return false;\n      if (searchTerm && !job.title.toLowerCase().includes(searchTerm.toLowerCase()) && \n          !job.company.toLowerCase().includes(searchTerm.toLowerCase())) return false;\n      return true;\n    });\n  }, [sampleJobs, activeJobType, selectedLocation, selectedExperience, searchTerm]);\n\n  const getJobTypeName = (jobType: any) => {\n    return jobType.name;\n  };\n\n  const getExperienceLabel = (option: any) => {\n    return option.label;\n  };\n\n  const getJobTitle = (job: any) => {\n    return job.title;\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"Jobs - Philippines Employment Portal\"\n        description=\"Find the best job opportunities in the Philippines. Full-time, part-time, remote, and freelance positions available.\"\n        keywords=\"jobs, employment, philippines, career, hiring, work, manila, cebu\"\n        type=\"website\"\n        locale={currentLanguage}\n      />\n\n      <FacebookLayout section=\"jobs\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                💼 구인구직\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-6\">\n                필리핀 전역의 최고의 취업 기회를 찾아보세요\n              </p>\n\n              {/* Action Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n                <button\n                  onClick={() => router.push('/jobs/post')}\n                  className=\"flex items-center justify-center space-x-2 px-8 py-4 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition-colors shadow-lg\"\n                >\n                  <Plus className=\"h-5 w-5\" />\n                  <span>채용공고 올리기</span>\n                </button>\n                \n                <button\n                  onClick={() => router.push('/jobs/resume')}\n                  className=\"flex items-center justify-center space-x-2 px-8 py-4 bg-green-600 text-white rounded-xl font-semibold hover:bg-green-700 transition-colors shadow-lg\"\n                >\n                  <Briefcase className=\"h-5 w-5\" />\n                  <span>이력서 업로드</span>\n                </button>\n              </div>\n            </div>\n\n            {/* Job Type Navigation */}\n            <div className=\"mb-8\">\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {jobTypes.map((jobType) => (\n                    <button\n                      key={jobType.id}\n                      onClick={() => setActiveJobType(jobType.id)}\n                      className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${\n                        activeJobType === jobType.id\n                          ? 'bg-blue-600 text-white'\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <span>{jobType.icon}</span>\n                      <span className=\"text-sm font-medium\">\n                        {getJobTypeName(jobType)}\n                      </span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Search and Filter Bar */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder={\n                      (currentLanguage as string) === 'ko' ? '직무나 회사명을 검색하세요' :\n                      (currentLanguage as string) === 'tl' ? 'Maghanap ng trabaho o kumpanya' :\n                      'Search job title or company'\n                    }\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setShowFilters(!showFilters)}\n                    className=\"flex items-center space-x-2 px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                  >\n                    <SlidersHorizontal className=\"h-5 w-5\" />\n                    <span>필터</span>\n                    {(selectedLocation || selectedExperience !== 'all') && (\n                      <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {/* Filter Panel */}\n              {showFilters && (\n                <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    {/* 지역 필터 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">지역</label>\n                      <select\n                        value={selectedLocation}\n                        onChange={(e) => setSelectedLocation(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value=\"\">전체 지역</option>\n                        {allPhilippinesRegions.map(region => (\n                          <option key={region.id} value={region.name}>\n                            {region.nameKo} ({region.name})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* 경력 필터 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">경력</label>\n                      <select\n                        value={selectedExperience}\n                        onChange={(e) => setSelectedExperience(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      >\n                        {experienceLevels.map(option => (\n                          <option key={option.value} value={option.value}>\n                            {getExperienceLabel(option)}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* 급여 필터 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">급여</label>\n                      <select\n                        value={selectedSalaryRange}\n                        onChange={(e) => setSelectedSalaryRange(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      >\n                        {salaryRanges.map(option => (\n                          <option key={option.value} value={option.value}>\n                            {getExperienceLabel(option)}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Results Section */}\n            <div className=\"mb-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900\">\n                    {activeJobType === 'all' \n                      ? ((currentLanguage as string) === 'ko' ? '전체 채용공고' : \n                         (currentLanguage as string) === 'tl' ? 'Lahat ng Trabaho' : 'All Jobs')\n                      : getJobTypeName(jobTypes.find(t => t.id === activeJobType))\n                    }\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    {filteredJobs.length}개의 채용공고가 있습니다\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <select className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\">\n                    <option value=\"latest\">최신순</option>\n                    <option value=\"salary_high\">높은 급여순</option>\n                    <option value=\"salary_low\">낮은 급여순</option>\n                    <option value=\"company\">회사명순</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* Jobs List */}\n              {filteredJobs.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {filteredJobs.map((job) => (\n                    <div \n                      key={job.id} \n                      className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\"\n                      onClick={() => router.push(`/jobs/${job.id}`)}\n                    >\n                      <div className=\"p-6\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-3 mb-2\">\n                              <div className=\"text-2xl\">{job.companyLogo}</div>\n                              <div>\n                                <h3 className=\"text-lg font-semibold text-gray-900\">\n                                  {getJobTitle(job)}\n                                </h3>\n                                <p className=\"text-sm text-gray-600\">{job.company}</p>\n                              </div>\n                              {job.urgent && (\n                                <span className=\"px-2 py-1 bg-red-100 text-red-800 text-xs font-medium rounded\">\n                                  긴급\n                                </span>\n                              )}\n                              {job.verified && (\n                                <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\">\n                                  인증\n                                </span>\n                              )}\n                            </div>\n                            \n                            <div className=\"flex items-center space-x-4 text-sm text-gray-600 mb-3\">\n                              <div className=\"flex items-center space-x-1\">\n                                <MapPin className=\"h-4 w-4\" />\n                                <span>{job.location}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                <DollarSign className=\"h-4 w-4\" />\n                                <span>{job.salary}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                <Clock className=\"h-4 w-4\" />\n                                <span>{job.posted}</span>\n                              </div>\n                            </div>\n                            \n                            <p className=\"text-gray-700 mb-3 line-clamp-2\">\n                              {job.description}\n                            </p>\n                            \n                            <div className=\"flex flex-wrap gap-2 mb-3\">\n                              {job.requirements?.slice(0, 3).map((req: string, index: number) => (\n                                <span \n                                  key={index}\n                                  className=\"px-2 py-1 bg-blue-50 text-blue-700 text-xs rounded\"\n                                >\n                                  {req}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                          \n                          <div className=\"flex flex-col items-end space-y-2 ml-4\">\n                            <div className=\"flex space-x-2\">\n                              <button \n                                className=\"p-2 text-gray-400 hover:text-red-500 transition-colors\"\n                                onClick={(e) => e.stopPropagation()}\n                              >\n                                <Heart className={`h-4 w-4 ${job.saved ? 'fill-current text-red-500' : ''}`} />\n                              </button>\n                              <button \n                                className=\"p-2 text-gray-400 hover:text-blue-500 transition-colors\"\n                                onClick={(e) => e.stopPropagation()}\n                              >\n                                <Share2 className=\"h-4 w-4\" />\n                              </button>\n                            </div>\n                            <div className=\"text-right text-xs text-gray-500\">\n                              <div className=\"flex items-center space-x-1\">\n                                <Eye className=\"h-3 w-3\" />\n                                <span>{job.applications} applications</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Briefcase className=\"h-12 w-12 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">채용공고가 없습니다</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    선택하신 조건에 맞는 채용공고가 없습니다. 필터를 조정해보세요.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Job Categories */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-blue-600\">{filteredJobs.length}</div>\n                <div className=\"text-sm text-gray-600\">활성 채용공고</div>\n              </div>\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-green-600\">245+</div>\n                <div className=\"text-sm text-gray-600\">등록 기업</div>\n              </div>\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-purple-600\">1.2K+</div>\n                <div className=\"text-sm text-gray-600\">지원자</div>\n              </div>\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <div className=\"text-2xl font-bold text-orange-600\">89%</div>\n                <div className=\"text-sm text-gray-600\">매칭율</div>\n              </div>\n            </div>\n          </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/ko.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/load.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/location/angeles.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/location/cebu.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/location/manila.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/login.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/marketplace/sell.tsx",["950"],[],"import { useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport DynamicHeader from '@/components/common/DynamicHeader';\nimport PortalLayout from '@/components/layout/PortalLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { MarketplaceCategory, MARKETPLACE_SUBCATEGORIES, POPULAR_CATEGORIES } from '@/types/marketplace';\nimport { allPhilippinesRegions } from '@/data/philippinesRegions';\nimport { \n  Upload, \n  X, \n  Camera,\n  MapPin,\n  DollarSign,\n  Package,\n  Info,\n  AlertCircle,\n  CheckCircle,\n  Image as ImageIcon,\n  ArrowLeft,\n  Save\n} from 'lucide-react';\nimport { toast } from 'react-hot-toast';\n\ninterface ListingFormData {\n  title: string;\n  description: string;\n  category: MarketplaceCategory | '';\n  subcategory: string;\n  price: string;\n  currency: 'PHP' | 'USD';\n  priceType: 'fixed' | 'negotiable' | 'free';\n  condition: 'new' | 'like_new' | 'good' | 'fair' | 'poor';\n  brand: string;\n  model: string;\n  regionId: string;\n  districtId: string;\n  meetupLocations: string[];\n  tradingOptions: {\n    delivery: boolean;\n    pickup: boolean;\n    meetup: boolean;\n    cash: boolean;\n    bankTransfer: boolean;\n  };\n  images: File[];\n}\n\nexport default function SellItemPage() {\n  const router = useRouter();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const [formData, setFormData] = useState<ListingFormData>({\n    title: '',\n    description: '',\n    category: '',\n    subcategory: '',\n    price: '',\n    currency: 'PHP',\n    priceType: 'fixed',\n    condition: 'good',\n    brand: '',\n    model: '',\n    regionId: '',\n    districtId: '',\n    meetupLocations: [],\n    tradingOptions: {\n      delivery: false,\n      pickup: true,\n      meetup: true,\n      cash: true,\n      bankTransfer: false\n    },\n    images: []\n  });\n\n  const [imagePreviews, setImagePreviews] = useState<string[]>([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  const handleLanguageChange = (language: string) => {\n    setCurrentLanguage(language);\n  };\n\n  const handleInputChange = (field: keyof ListingFormData, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    setError('');\n  };\n\n  const handleTradingOptionChange = (option: keyof ListingFormData['tradingOptions']) => {\n    setFormData(prev => ({\n      ...prev,\n      tradingOptions: {\n        ...prev.tradingOptions,\n        [option]: !prev.tradingOptions[option]\n      }\n    }));\n  };\n\n  const handleImageUpload = (files: FileList | null) => {\n    if (!files) return;\n\n    const newFiles = Array.from(files).slice(0, 10 - formData.images.length);\n    const newPreviews: string[] = [];\n\n    newFiles.forEach(file => {\n      if (file.type.startsWith('image/') && file.size <= 5 * 1024 * 1024) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          newPreviews.push(e.target?.result as string);\n          if (newPreviews.length === newFiles.length) {\n            setImagePreviews(prev => [...prev, ...newPreviews]);\n          }\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, ...newFiles]\n    }));\n  };\n\n  const removeImage = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n    setImagePreviews(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n    handleImageUpload(e.dataTransfer.files);\n  };\n\n  const validateStep = (step: number) => {\n    switch (step) {\n      case 1:\n        if (!formData.title.trim() || !formData.description.trim()) {\n          setError('상품명과 상세 설명을 입력해주세요.');\n          return false;\n        }\n        if (formData.title.length < 5) {\n          setError('상품명은 최소 5글자 이상 입력해주세요.');\n          return false;\n        }\n        break;\n      case 2:\n        if (!formData.category || !formData.subcategory) {\n          setError('카테고리를 선택해주세요.');\n          return false;\n        }\n        if (!formData.price.trim() && formData.priceType !== 'free') {\n          setError('가격을 입력해주세요.');\n          return false;\n        }\n        break;\n      case 3:\n        if (formData.images.length === 0) {\n          setError('최소 1장의 사진을 업로드해주세요.');\n          return false;\n        }\n        break;\n      case 4:\n        if (!formData.regionId) {\n          setError('거래 지역을 선택해주세요.');\n          return false;\n        }\n        break;\n    }\n    return true;\n  };\n\n  const nextStep = () => {\n    if (validateStep(currentStep)) {\n      setCurrentStep(prev => Math.min(prev + 1, 4));\n    }\n  };\n\n  const prevStep = () => {\n    setCurrentStep(prev => Math.max(prev - 1, 1));\n  };\n\n  const handleSubmit = async () => {\n    if (!validateStep(4)) return;\n\n    setIsSubmitting(true);\n    setError('');\n\n    try {\n      const response = await fetch('/api/marketplace/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: formData.title,\n          description: formData.description,\n          price: formData.priceType === 'free' ? 0 : parseFloat(formData.price),\n          category: formData.category,\n          condition: formData.condition,\n          location: `${getSelectedRegion()?.name}, ${formData.districtId || ''}`,\n          sellerName: 'User', // TODO: Get from session\n          sellerContact: 'Contact via platform',\n          images: [] // 이미지 업로드는 추후 구현\n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        toast.success('상품이 성공적으로 등록되었습니다!');\n        setTimeout(() => {\n          router.push('/marketplace');\n        }, 1500);\n      } else {\n        throw new Error(data.error || 'Failed to create listing');\n      }\n    } catch (err) {\n      toast.error('상품 등록 중 오류가 발생했습니다. 다시 시도해주세요.');\n      console.error('Listing creation error:', err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const getSelectedRegion = () => {\n    return allPhilippinesRegions.find(region => region.id === formData.regionId);\n  };\n\n  const getConditionText = (condition: string) => {\n    const conditionMap = {\n      'new': '새 상품',\n      'like_new': '거의 새것',\n      'good': '좋음',\n      'fair': '보통',\n      'poor': '나쁨'\n    };\n    return conditionMap[condition as keyof typeof conditionMap] || condition;\n  };\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">기본 정보</h3>\n              <p className=\"text-sm text-gray-600\">상품의 기본 정보를 입력해주세요</p>\n            </div>\n\n            {/* 상품명 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                상품명 *\n              </label>\n              <input\n                type=\"text\"\n                value={formData.title}\n                onChange={(e) => handleInputChange('title', e.target.value)}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"예: iPhone 14 Pro Max 256GB 스페이스 블랙\"\n                maxLength={100}\n                required\n              />\n              <p className=\"mt-1 text-xs text-gray-500\">\n                {formData.title.length}/100 - 구체적이고 명확하게 작성해주세요\n              </p>\n            </div>\n\n            {/* 상세 설명 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                상세 설명 *\n              </label>\n              <textarea\n                value={formData.description}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                rows={6}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"상품의 상태, 구매 시기, 사용 빈도, 포함된 구성품 등을 자세히 설명해주세요. 정확한 정보를 제공하면 빠른 거래에 도움이 됩니다.\"\n                maxLength={2000}\n                required\n              />\n              <p className=\"mt-1 text-xs text-gray-500\">\n                {formData.description.length}/2000\n              </p>\n            </div>\n\n            {/* 브랜드/모델 */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  브랜드\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.brand}\n                  onChange={(e) => handleInputChange('brand', e.target.value)}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"예: Apple, Samsung\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  모델명\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.model}\n                  onChange={(e) => handleInputChange('model', e.target.value)}\n                  className=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"예: iPhone 14 Pro Max\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">카테고리 & 가격</h3>\n              <p className=\"text-sm text-gray-600\">상품 분류와 가격을 설정해주세요</p>\n            </div>\n\n            {/* 카테고리 선택 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                카테고리 *\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 mb-4\">\n                {POPULAR_CATEGORIES.map((category) => (\n                  <button\n                    key={category.id}\n                    type=\"button\"\n                    onClick={() => {\n                      handleInputChange('category', category.id);\n                      handleInputChange('subcategory', '');\n                    }}\n                    className={`p-4 text-center border rounded-lg transition-all ${\n                      formData.category === category.id\n                        ? 'border-blue-500 bg-blue-50 text-blue-700'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"text-2xl mb-1\">{category.icon}</div>\n                    <div className=\"text-sm font-medium\">{category.nameKo}</div>\n                  </button>\n                ))}\n              </div>\n\n              {/* 서브카테고리 */}\n              {formData.category && MARKETPLACE_SUBCATEGORIES[formData.category as MarketplaceCategory] && (\n                <div className=\"mt-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    세부 카테고리 *\n                  </label>\n                  <select\n                    value={formData.subcategory}\n                    onChange={(e) => handleInputChange('subcategory', e.target.value)}\n                    className=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  >\n                    <option value=\"\">세부 카테고리를 선택하세요</option>\n                    {MARKETPLACE_SUBCATEGORIES[formData.category as MarketplaceCategory].map(sub => (\n                      <option key={sub} value={sub}>{sub}</option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n\n            {/* 상품 상태 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                상품 상태 *\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-5 gap-3\">\n                {(['new', 'like_new', 'good', 'fair', 'poor'] as const).map((condition) => (\n                  <button\n                    key={condition}\n                    type=\"button\"\n                    onClick={() => handleInputChange('condition', condition)}\n                    className={`p-3 text-center border rounded-lg transition-all ${\n                      formData.condition === condition\n                        ? 'border-blue-500 bg-blue-50 text-blue-700'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"text-sm font-medium\">{getConditionText(condition)}</div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* 가격 설정 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                가격 설정 *\n              </label>\n              \n              <div className=\"flex space-x-3 mb-3\">\n                {([\n                  { value: 'fixed', label: '정가' },\n                  { value: 'negotiable', label: '협상 가능' },\n                  { value: 'free', label: '무료' }\n                ] as const).map((type) => (\n                  <button\n                    key={type.value}\n                    type=\"button\"\n                    onClick={() => handleInputChange('priceType', type.value)}\n                    className={`px-4 py-2 border rounded-lg transition-all ${\n                      formData.priceType === type.value\n                        ? 'border-blue-500 bg-blue-50 text-blue-700'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    {type.label}\n                  </button>\n                ))}\n              </div>\n\n              {formData.priceType !== 'free' && (\n                <div className=\"flex space-x-3\">\n                  <select\n                    value={formData.currency}\n                    onChange={(e) => handleInputChange('currency', e.target.value)}\n                    className=\"px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"PHP\">₱ PHP</option>\n                    <option value=\"USD\">$ USD</option>\n                  </select>\n                  <input\n                    type=\"number\"\n                    value={formData.price}\n                    onChange={(e) => handleInputChange('price', e.target.value)}\n                    className=\"flex-1 px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"가격을 입력하세요\"\n                    min=\"0\"\n                    required\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 3:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">사진 업로드</h3>\n              <p className=\"text-sm text-gray-600\">상품 사진을 업로드해주세요 (최대 10장)</p>\n            </div>\n\n            {/* 이미지 업로드 영역 */}\n            <div\n              className={`border-2 border-dashed rounded-lg p-8 text-center transition-all ${\n                dragActive \n                  ? 'border-blue-500 bg-blue-50' \n                  : 'border-gray-300 hover:border-gray-400'\n              }`}\n              onDrop={handleDrop}\n              onDragOver={(e) => {\n                e.preventDefault();\n                setDragActive(true);\n              }}\n              onDragLeave={() => setDragActive(false)}\n            >\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                multiple\n                onChange={(e) => handleImageUpload(e.target.files)}\n                className=\"hidden\"\n              />\n              \n              <div className=\"space-y-4\">\n                <div className=\"mx-auto w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center\">\n                  <Upload className=\"h-8 w-8 text-gray-400\" />\n                </div>\n                <div>\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-2\">\n                    사진을 드래그하거나 클릭해서 업로드\n                  </h4>\n                  <p className=\"text-sm text-gray-600 mb-4\">\n                    첫 번째 사진이 대표 사진이 됩니다\n                  </p>\n                  <button\n                    type=\"button\"\n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n                  >\n                    <Camera className=\"h-4 w-4 mr-2\" />\n                    사진 선택\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500\">\n                  JPG, PNG 파일만 가능 • 최대 5MB • 최대 10장\n                </p>\n              </div>\n            </div>\n\n            {/* 업로드된 이미지 미리보기 */}\n            {imagePreviews.length > 0 && (\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\n                  업로드된 사진 ({imagePreviews.length}/10)\n                </h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                  {imagePreviews.map((preview, index) => (\n                    <div key={index} className=\"relative group\">\n                      <img\n                        src={preview}\n                        alt={`Upload ${index + 1}`}\n                        className=\"w-full h-32 object-cover rounded-lg border border-gray-200\"\n                      />\n                      {index === 0 && (\n                        <div className=\"absolute top-2 left-2 bg-blue-600 text-white text-xs px-2 py-1 rounded\">\n                          대표\n                        </div>\n                      )}\n                      <button\n                        type=\"button\"\n                        onClick={() => removeImage(index)}\n                        className=\"absolute -top-2 -right-2 w-6 h-6 bg-red-600 text-white rounded-full flex items-center justify-center hover:bg-red-700 transition-colors\"\n                      >\n                        <X className=\"h-3 w-3\" />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case 4:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">거래 정보</h3>\n              <p className=\"text-sm text-gray-600\">거래 방법과 위치를 설정해주세요</p>\n            </div>\n\n            {/* 거래 지역 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                거래 지역 *\n              </label>\n              <select\n                value={formData.regionId}\n                onChange={(e) => handleInputChange('regionId', e.target.value)}\n                className=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                required\n              >\n                <option value=\"\">거래 지역을 선택하세요</option>\n                {allPhilippinesRegions.map(region => (\n                  <option key={region.id} value={region.id}>\n                    {region.nameKo} ({region.name})\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* 거래 방법 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                거래 방법 *\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.tradingOptions.pickup}\n                    onChange={() => handleTradingOptionChange('pickup')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mr-3\"\n                  />\n                  <div>\n                    <div className=\"font-medium\">직접 만나서 거래</div>\n                    <div className=\"text-sm text-gray-600\">안전한 공공장소에서 직접 만나서 거래</div>\n                  </div>\n                </label>\n\n                <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.tradingOptions.delivery}\n                    onChange={() => handleTradingOptionChange('delivery')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mr-3\"\n                  />\n                  <div>\n                    <div className=\"font-medium\">배송</div>\n                    <div className=\"text-sm text-gray-600\">택배나 퀵서비스를 통한 배송</div>\n                  </div>\n                </label>\n\n                <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.tradingOptions.meetup}\n                    onChange={() => handleTradingOptionChange('meetup')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mr-3\"\n                  />\n                  <div>\n                    <div className=\"font-medium\">지정 장소 만남</div>\n                    <div className=\"text-sm text-gray-600\">지하철역, 쇼핑몰 등 지정 장소</div>\n                  </div>\n                </label>\n              </div>\n            </div>\n\n            {/* 결제 방법 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                결제 방법 *\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.tradingOptions.cash}\n                    onChange={() => handleTradingOptionChange('cash')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mr-3\"\n                  />\n                  <div>\n                    <div className=\"font-medium\">현금</div>\n                    <div className=\"text-sm text-gray-600\">직접 만나서 현금 거래</div>\n                  </div>\n                </label>\n\n                <label className=\"flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.tradingOptions.bankTransfer}\n                    onChange={() => handleTradingOptionChange('bankTransfer')}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mr-3\"\n                  />\n                  <div>\n                    <div className=\"font-medium\">계좌 이체</div>\n                    <div className=\"text-sm text-gray-600\">온라인 계좌 이체</div>\n                  </div>\n                </label>\n              </div>\n            </div>\n\n            {/* 안전 거래 안내 */}\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-start space-x-2\">\n                <Info className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n                <div className=\"text-sm text-blue-800\">\n                  <p className=\"font-medium mb-1\">💡 안전한 거래를 위한 팁</p>\n                  <ul className=\"text-xs space-y-1\">\n                    <li>• 공공장소에서 만나서 거래하세요 (쇼핑몰, 지하철역 등)</li>\n                    <li>• 상품을 꼼꼼히 확인한 후 거래하세요</li>\n                    <li>• 선입금 요구는 사기일 가능성이 높습니다</li>\n                    <li>• 의심스러운 거래는 즉시 신고해주세요</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"Sell Item - Philippines Marketplace\"\n        description=\"Sell your items safely on Philippines marketplace\"\n        type=\"website\"\n        locale={currentLanguage}\n      />\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <DynamicHeader \n          currentLanguage={currentLanguage} \n          onLanguageChange={handleLanguageChange} \n        />\n        \n        <PortalLayout>\n          <div className=\"py-8\">\n            {/* 헤더 */}\n            <div className=\"flex items-center justify-between mb-8\">\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => router.back()}\n                  className=\"p-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n                >\n                  <ArrowLeft className=\"h-5 w-5\" />\n                </button>\n                <div>\n                  <h1 className=\"text-3xl font-bold text-gray-900\">상품 등록하기</h1>\n                  <p className=\"text-gray-600\">간단하게 상품을 등록하고 안전하게 거래하세요</p>\n                </div>\n              </div>\n            </div>\n\n            {/* 진행률 표시 */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <span className=\"text-sm text-gray-500\">단계 {currentStep} / 4</span>\n                <span className=\"text-sm text-gray-500\">{Math.round((currentStep / 4) * 100)}% 완료</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${(currentStep / 4) * 100}%` }}\n                />\n              </div>\n              \n              <div className=\"flex justify-between mt-4 text-sm\">\n                <span className={currentStep >= 1 ? 'text-blue-600 font-medium' : 'text-gray-400'}>\n                  기본 정보\n                </span>\n                <span className={currentStep >= 2 ? 'text-blue-600 font-medium' : 'text-gray-400'}>\n                  카테고리 & 가격\n                </span>\n                <span className={currentStep >= 3 ? 'text-blue-600 font-medium' : 'text-gray-400'}>\n                  사진 업로드\n                </span>\n                <span className={currentStep >= 4 ? 'text-blue-600 font-medium' : 'text-gray-400'}>\n                  거래 정보\n                </span>\n              </div>\n            </div>\n\n            {/* 단계별 폼 */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-8\">\n              {renderStep()}\n\n              {/* 에러/성공 메시지 */}\n              {error && (\n                <div className=\"mt-6 flex items-center space-x-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n                  <AlertCircle className=\"h-5 w-5 text-red-600\" />\n                  <span className=\"text-sm text-red-800\">{error}</span>\n                </div>\n              )}\n\n              {success && (\n                <div className=\"mt-6 flex items-center space-x-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\n                  <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                  <span className=\"text-sm text-green-800\">{success}</span>\n                </div>\n              )}\n\n              {/* 버튼들 */}\n              <div className=\"mt-8 flex space-x-4\">\n                {currentStep > 1 && (\n                  <button\n                    type=\"button\"\n                    onClick={prevStep}\n                    className=\"flex-1 py-3 px-4 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n                  >\n                    이전\n                  </button>\n                )}\n                \n                <button\n                  type=\"button\"\n                  onClick={currentStep === 4 ? handleSubmit : nextStep}\n                  disabled={isSubmitting}\n                  className=\"flex-1 flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isSubmitting ? (\n                    <div className=\"flex items-center\">\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      등록 중...\n                    </div>\n                  ) : currentStep === 4 ? (\n                    <div className=\"flex items-center\">\n                      <Save className=\"h-4 w-4 mr-2\" />\n                      상품 등록 완료\n                    </div>\n                  ) : (\n                    '다음'\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </PortalLayout>\n      </div>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/marketplace.tsx",["951","952"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { MarketplaceFilters, POPULAR_CATEGORIES, MarketplaceCategory } from '@/types/marketplace';\nimport { allPhilippinesRegions } from '@/data/philippinesRegions';\nimport { \n  Search, \n  Filter, \n  Grid, \n  List, \n  MapPin, \n  Heart, \n  MessageCircle,\n  TrendingUp,\n  Clock,\n  Shield,\n  Star,\n  Eye,\n  Plus,\n  LogIn,\n  SlidersHorizontal,\n  X,\n  ChevronDown,\n  Package\n} from 'lucide-react';\n\nexport default function MarketplacePage() {\n  const router = useRouter();\n  const [currentLanguage, setCurrentLanguage] = useState('ko');\n  const [filters, setFilters] = useState<MarketplaceFilters>({});\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 실제로는 auth context에서 가져올 예정\n  const [activeSubSection, setActiveSubSection] = useState('all');\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [priceRange, setPriceRange] = useState({ min: '', max: '' });\n  const [selectedCondition, setSelectedCondition] = useState<string[]>([]);\n\n\n  const handleCategorySelect = (categoryId: string) => {\n    setFilters({ ...filters, category: categoryId as any });\n    setActiveSubSection(categoryId);\n  };\n\n  const handleSellClick = () => {\n    if (!isLoggedIn) {\n      // 로그인 모달 또는 페이지로 이동\n      router.push('/auth/login?redirect=/marketplace/sell');\n    } else {\n      router.push('/marketplace/sell');\n    }\n  };\n\n  const getLocalizedCategoryName = (category: any) => {\n    return category.name;\n  };\n\n  const subSections = [\n    { id: 'all', name: '전체', nameEn: 'All', icon: '🏪' },\n    { id: 'electronics', name: '전자제품', nameEn: 'Electronics', icon: '📱' },\n    { id: 'vehicles', name: '차량', nameEn: 'Vehicles', icon: '🚗' },\n    { id: 'furniture', name: '가구', nameEn: 'Furniture', icon: '🛋️' },\n    { id: 'clothing', name: '의류', nameEn: 'Fashion', icon: '👕' },\n    { id: 'home_appliances', name: '가전', nameEn: 'Appliances', icon: '🏠' },\n    { id: 'sports', name: '스포츠', nameEn: 'Sports', icon: '⚽' },\n    { id: 'books', name: '도서', nameEn: 'Books', icon: '📚' },\n    { id: 'beauty', name: '뷰티', nameEn: 'Beauty', icon: '💄' },\n    { id: 'others', name: '기타', nameEn: 'Others', icon: '📦' }\n  ];\n\n  const conditions = [\n    { value: 'new', label: '새상품', labelEn: 'New' },\n    { value: 'like_new', label: '거의새것', labelEn: 'Like New' },\n    { value: 'good', label: '좋음', labelEn: 'Good' },\n    { value: 'fair', label: '보통', labelEn: 'Fair' },\n    { value: 'poor', label: '나쁨', labelEn: 'Poor' }\n  ];\n\n  // 필터 적용 함수\n  const applyFilters = () => {\n    const newFilters: MarketplaceFilters = {\n      ...filters,\n      category: activeSubSection !== 'all' ? activeSubSection as MarketplaceCategory : undefined,\n      regionId: selectedRegion || undefined,\n      minPrice: priceRange.min ? parseInt(priceRange.min) : undefined,\n      maxPrice: priceRange.max ? parseInt(priceRange.max) : undefined,\n      condition: selectedCondition.length > 0 ? selectedCondition : undefined,\n      searchQuery: searchTerm || undefined\n    };\n    setFilters(newFilters);\n    setShowFilters(false);\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n    setSelectedRegion('');\n    setPriceRange({ min: '', max: '' });\n    setSelectedCondition([]);\n    setSearchTerm('');\n    setActiveSubSection('all');\n  };\n\n  const toggleCondition = (condition: string) => {\n    setSelectedCondition(prev => \n      prev.includes(condition) \n        ? prev.filter(c => c !== condition)\n        : [...prev, condition]\n    );\n  };\n\n  // 상품 데이터는 API에서 가져올 예정\n  const sampleItems: any[] = [\n    {\n      id: '1',\n      title: 'iPhone 13 Pro 256GB',\n      price: 35000,\n      location: 'BGC, Taguig',\n      category: 'electronics',\n      condition: 'like_new',\n      image: 'https://images.unsplash.com/photo-1632633728024-f8b43b1f2b3c?w=300&h=300&fit=crop',\n      seller: {\n        name: 'John Kim',\n        rating: 4.8\n      },\n      views: 234,\n      posted: '2일 전'\n    },\n    {\n      id: '2',\n      title: '삼성 55인치 스마트 TV',\n      price: 18000,\n      location: 'Makati City',\n      category: 'electronics',\n      condition: 'good',\n      image: 'https://images.unsplash.com/photo-1593359677879-a4bb92f829d1?w=300&h=300&fit=crop',\n      seller: {\n        name: 'Sarah Lee',\n        rating: 4.5\n      },\n      views: 156,\n      posted: '1주 전'\n    }\n  ];\n\n  // 필터링된 상품들\n  const filteredItems = useMemo(() => {\n    return sampleItems.filter(item => {\n      if (activeSubSection !== 'all' && item.category !== activeSubSection) return false;\n      if (selectedRegion && !item.location.toLowerCase().includes(selectedRegion.toLowerCase())) return false;\n      if (selectedCondition.length > 0 && !selectedCondition.includes(item.condition)) return false;\n      if (priceRange.min && item.price < parseInt(priceRange.min)) return false;\n      if (priceRange.max && item.price > parseInt(priceRange.max)) return false;\n      if (searchTerm && !item.title.toLowerCase().includes(searchTerm.toLowerCase())) return false;\n      return true;\n    });\n  }, [sampleItems, activeSubSection, selectedRegion, selectedCondition, priceRange, searchTerm]);\n\n  return (\n    <>\n      <SEOHead\n        title=\"Philippines Marketplace - Buy & Sell Everything\"\n        description=\"Buy and sell electronics, furniture, vehicles, and more in the Philippines. Safe marketplace for expats and locals.\"\n        keywords=\"marketplace, buy, sell, philippines, electronics, furniture, vehicles\"\n        type=\"website\"\n        locale={currentLanguage}\n      />\n\n      <FacebookLayout section=\"marketplace\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                🛒 중고장터\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-6\">\n                필리핀 전역에서 모든 것을 사고팔아보세요. 안전하고 신뢰할 수 있는 거래 플랫폼입니다.\n              </p>\n\n              {/* Action Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n                <button\n                  onClick={handleSellClick}\n                  className=\"flex items-center justify-center space-x-2 px-8 py-4 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition-colors shadow-lg\"\n                >\n                  <Plus className=\"h-5 w-5\" />\n                  <span>무료로 판매하기</span>\n                </button>\n                \n                <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                  <div className=\"flex items-center space-x-1\">\n                    <Shield className=\"h-4 w-4 text-green-600\" />\n                    <span>\n                      {(currentLanguage as string) === 'ko' ? '안전 거래' :\n                       (currentLanguage as string) === 'zh' ? '安全交易' :\n                       (currentLanguage as string) === 'ja' ? '安全取引' :\n                       'Safe Trading'}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center space-x-1\">\n                    <Star className=\"h-4 w-4 text-yellow-600\" />\n                    <span>\n                      {(currentLanguage as string) === 'ko' ? '신뢰 시스템' :\n                       (currentLanguage as string) === 'zh' ? '信任系统' :\n                       (currentLanguage as string) === 'ja' ? '信頼システム' :\n                       'Trust System'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Login Notice for Non-Users */}\n              {!isLoggedIn && (\n                <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4 max-w-2xl mx-auto\">\n                  <div className=\"flex items-center justify-center space-x-2 text-blue-800\">\n                    <LogIn className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">\n                      {(currentLanguage as string) === 'ko' ? '로그인하고 더 많은 기능을 이용하세요!' :\n                       (currentLanguage as string) === 'zh' ? '登录享受更多功能！' :\n                       (currentLanguage as string) === 'ja' ? 'ログインしてより多くの機能をご利用ください！' :\n                       'Login to access more features!'}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-blue-600 mt-1\">\n                    {(currentLanguage as string) === 'ko' ? '상품 등록, 메시지 보내기, 찜하기 등' :\n                     (currentLanguage as string) === 'zh' ? '商品发布、发送消息、收藏等' :\n                     (currentLanguage as string) === 'ja' ? '商品登録、メッセージ送信、お気に入り等' :\n                     'Post items, send messages, save favorites and more'}\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Sub-Section Navigation */}\n            <div className=\"mb-8\">\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {subSections.map((section) => (\n                    <button\n                      key={section.id}\n                      onClick={() => setActiveSubSection(section.id)}\n                      className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${\n                        activeSubSection === section.id\n                          ? 'bg-blue-600 text-white'\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <span>{section.icon}</span>\n                      <span className=\"text-sm font-medium\">\n                        {section.name}\n                      </span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Search and Filter Bar */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder={\n                      (currentLanguage as string) === 'ko' ? '무엇을 찾고 계신가요? (예: iPhone, 소파, 자동차)' :\n                      (currentLanguage as string) === 'zh' ? '您在寻找什么？（例如：iPhone、沙发、汽车）' :\n                      (currentLanguage as string) === 'ja' ? '何をお探しですか？（例：iPhone、ソファ、車）' :\n                      'What are you looking for? (e.g. iPhone, sofa, car)'\n                    }\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setShowFilters(!showFilters)}\n                    className=\"flex items-center space-x-2 px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                  >\n                    <SlidersHorizontal className=\"h-5 w-5\" />\n                    <span>필터</span>\n                    {(selectedRegion || selectedCondition.length > 0 || priceRange.min || priceRange.max) && (\n                      <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                    )}\n                  </button>\n                  <button \n                    onClick={applyFilters}\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                  >\n                    검색\n                  </button>\n                </div>\n              </div>\n\n              {/* Filter Panel */}\n              {showFilters && (\n                <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                    {/* 지역 필터 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">지역</label>\n                      <select\n                        value={selectedRegion}\n                        onChange={(e) => setSelectedRegion(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value=\"\">전체 지역</option>\n                        {allPhilippinesRegions.map(region => (\n                          <option key={region.id} value={region.name}>\n                            {region.nameKo} ({region.name})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* 가격 범위 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">가격 범위</label>\n                      <div className=\"flex space-x-2\">\n                        <input\n                          type=\"number\"\n                          placeholder=\"최소\"\n                          value={priceRange.min}\n                          onChange={(e) => setPriceRange(prev => ({ ...prev, min: e.target.value }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                        />\n                        <input\n                          type=\"number\"\n                          placeholder=\"최대\"\n                          value={priceRange.max}\n                          onChange={(e) => setPriceRange(prev => ({ ...prev, max: e.target.value }))}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                        />\n                      </div>\n                    </div>\n\n                    {/* 상품 상태 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">상품 상태</label>\n                      <div className=\"space-y-2\">\n                        {conditions.map(condition => (\n                          <label key={condition.value} className=\"flex items-center\">\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedCondition.includes(condition.value)}\n                              onChange={() => toggleCondition(condition.value)}\n                              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mr-2\"\n                            />\n                            <span className=\"text-sm text-gray-700\">\n                              {(currentLanguage as string) === 'ko' ? condition.label : condition.labelEn}\n                            </span>\n                          </label>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* 보기 옵션 & 필터 액션 */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">보기 옵션</label>\n                      <div className=\"flex space-x-2 mb-4\">\n                        <button\n                          onClick={() => setViewMode('grid')}\n                          className={`p-2 border rounded-lg ${viewMode === 'grid' ? 'bg-blue-50 border-blue-300' : 'border-gray-300'}`}\n                        >\n                          <Grid className=\"h-4 w-4\" />\n                        </button>\n                        <button\n                          onClick={() => setViewMode('list')}\n                          className={`p-2 border rounded-lg ${viewMode === 'list' ? 'bg-blue-50 border-blue-300' : 'border-gray-300'}`}\n                        >\n                          <List className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                      <button\n                        onClick={clearFilters}\n                        className=\"w-full px-3 py-2 text-sm text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\n                      >\n                        필터 초기화\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Results Section */}\n            <div className=\"mb-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900\">\n                    {activeSubSection === 'all' \n                      ? ((currentLanguage as string) === 'ko' ? '전체 상품' : 'All Items')\n                      : ((currentLanguage as string) === 'ko' ? \n                          subSections.find(s => s.id === activeSubSection)?.name : \n                          subSections.find(s => s.id === activeSubSection)?.nameEn)\n                    }\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    {filteredItems.length}개의 상품이 있습니다\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <select className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\">\n                    <option value=\"newest\">최신순</option>\n                    <option value=\"price_low\">낮은 가격순</option>\n                    <option value=\"price_high\">높은 가격순</option>\n                    <option value=\"popular\">인기순</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* Items Grid/List */}\n              {filteredItems.length > 0 ? (\n                <div className={viewMode === 'grid' \n                  ? \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6\" \n                  : \"space-y-4\"\n                }>\n                  {filteredItems.map((item) => (\n                    <div \n                      key={item.id} \n                      className={`bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow cursor-pointer ${\n                        viewMode === 'list' ? 'flex' : ''\n                      }`}\n                      onClick={() => router.push(`/marketplace/item/${item.id}`)}\n                    >\n                      <div className={`relative ${viewMode === 'list' ? 'w-32 h-32' : 'w-full h-48'}`}>\n                        <img \n                          src={item.image}\n                          alt={item.title}\n                          className=\"w-full h-full object-cover\"\n                        />\n                        <div className=\"absolute top-2 right-2\">\n                          <button \n                            className=\"p-2 bg-white rounded-full shadow-sm hover:bg-gray-50\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              // 찜하기 기능\n                            }}\n                          >\n                            <Heart className=\"h-4 w-4 text-gray-600\" />\n                          </button>\n                        </div>\n                        <div className=\"absolute bottom-2 left-2\">\n                          <span className={`px-2 py-1 rounded text-xs font-medium text-white ${\n                            item.condition === 'new' ? 'bg-green-600' :\n                            item.condition === 'like_new' ? 'bg-blue-600' :\n                            item.condition === 'good' ? 'bg-yellow-600' : 'bg-gray-600'\n                          }`}>\n                            {item.condition === 'new' ? '새상품' :\n                             item.condition === 'like_new' ? '거의새것' :\n                             item.condition === 'good' ? '좋음' : '보통'}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div className={`p-4 ${viewMode === 'list' ? 'flex-1' : ''}`}>\n                        <h3 className=\"font-semibold text-gray-900 mb-2 line-clamp-2\">\n                          {item.title}\n                        </h3>\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-lg font-bold text-blue-600\">₱{item.price.toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2 text-sm text-gray-600 mb-3\">\n                          <MapPin className=\"h-4 w-4\" />\n                          <span>{item.location}</span>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-6 h-6 bg-gray-300 rounded-full\"></div>\n                            <div>\n                              <div className=\"text-sm font-medium\">{item.seller.name}</div>\n                              <div className=\"flex items-center space-x-1\">\n                                <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />\n                                <span className=\"text-xs text-gray-600\">{item.seller.rating}</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center space-x-1 text-xs text-gray-500\">\n                            <Eye className=\"h-3 w-3\" />\n                            <span>{item.views}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Package className=\"h-12 w-12 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">상품이 없습니다</h3>\n                  <p className=\"text-gray-600 mb-4\">\n                    선택하신 조건에 맞는 상품이 없습니다. 필터를 조정해보세요.\n                  </p>\n                  <button\n                    onClick={clearFilters}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    필터 초기화\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Quick Stats */}\n            {activeSubSection === 'all' && (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n                <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                  <div className=\"text-2xl font-bold text-blue-600\">{sampleItems.length}</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '전체 상품' : 'Total Items'}\n                  </div>\n                </div>\n                <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                  <div className=\"text-2xl font-bold text-green-600\">8,901</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '완료된 거래' : 'Completed Deals'}\n                  </div>\n                </div>\n                <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                  <div className=\"text-2xl font-bold text-purple-600\">2,567</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '인증 판매자' : 'Verified Sellers'}\n                  </div>\n                </div>\n                <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                  <div className=\"text-2xl font-bold text-orange-600\">4.8/5</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '평균 평점' : 'Average Rating'}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Trust & Safety */}\n            <div className=\"bg-gradient-to-r from-blue-50 to-green-50 rounded-2xl p-8 mb-8\">\n              <div className=\"text-center mb-6\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                  {(currentLanguage as string) === 'ko' ? '🛡️ 안전한 거래를 위한 가이드' :\n                   (currentLanguage as string) === 'zh' ? '🛡️ 安全交易指南' :\n                   (currentLanguage as string) === 'ja' ? '🛡️ 安全取引ガイド' :\n                   '🛡️ Safe Trading Guidelines'}\n                </h2>\n                <p className=\"text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '사기를 방지하고 안전한 거래를 위해 다음 가이드라인을 따라주세요' :\n                   (currentLanguage as string) === 'zh' ? '请遵循以下准则以防止欺诈并确保安全交易' :\n                   (currentLanguage as string) === 'ja' ? '詐欺を防止し安全な取引のため、以下のガイドラインに従ってください' :\n                   'Follow these guidelines to prevent fraud and ensure safe transactions'}\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Shield className=\"h-8 w-8 text-blue-600\" />\n                  </div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">\n                    {(currentLanguage as string) === 'ko' ? '인증된 판매자' : 'Verified Sellers'}\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '신원이 확인된 판매자와 거래하세요' : 'Trade with identity-verified sellers'}\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <MapPin className=\"h-8 w-8 text-green-600\" />\n                  </div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">\n                    {(currentLanguage as string) === 'ko' ? '공공장소 만남' : 'Public Meetups'}\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '안전한 공공장소에서 거래하세요' : 'Meet in safe public places'}\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <MessageCircle className=\"h-8 w-8 text-purple-600\" />\n                  </div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">\n                    {(currentLanguage as string) === 'ko' ? '플랫폼 내 채팅' : 'In-App Messaging'}\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '플랫폼 내에서 안전하게 소통하세요' : 'Communicate safely within the platform'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* CTA Section */}\n            <div className=\"text-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                {(currentLanguage as string) === 'ko' ? '지금 시작해보세요!' :\n                 (currentLanguage as string) === 'zh' ? '立即开始！' :\n                 (currentLanguage as string) === 'ja' ? '今すぐ始めましょう！' :\n                 'Get Started Today!'}\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                {(currentLanguage as string) === 'ko' ? '수천 명의 사용자들이 이미 안전하고 편리한 거래를 경험하고 있습니다' :\n                 (currentLanguage as string) === 'zh' ? '成千上万的用户已经在体验安全便捷的交易' :\n                 (currentLanguage as string) === 'ja' ? '何千人ものユーザーが既に安全で便利な取引を体験しています' :\n                 'Thousands of users are already enjoying safe and convenient trading'}\n              </p>\n              <button\n                onClick={handleSellClick}\n                className=\"px-8 py-4 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition-colors shadow-lg\"\n              >\n                {(currentLanguage as string) === 'ko' ? '무료로 판매 시작하기' :\n                 (currentLanguage as string) === 'zh' ? '免费开始销售' :\n                 (currentLanguage as string) === 'ja' ? '無料で販売開始' :\n                 'Start Selling for Free'}\n              </button>\n            </div>\n          </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/messages.tsx",["953"],[],"import React, { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { toast } from 'react-hot-toast';\n\ninterface Message {\n  id: string;\n  fromUser: {\n    id: string;\n    name: string;\n    image?: string;\n    email: string;\n  };\n  toUser: {\n    id: string;\n    name: string;\n    image?: string;\n    email: string;\n  };\n  subject: string;\n  content: string;\n  isRead: boolean;\n  createdAt: string;\n}\n\ninterface Conversation {\n  user: {\n    id: string;\n    name: string;\n    image?: string;\n    email: string;\n  };\n  lastMessage: Message;\n  unreadCount: number;\n}\n\nexport default function MessagesPage() {\n  const { data: session } = useSession();\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState<'inbox' | 'sent'>('inbox');\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState({ subject: '', content: '' });\n  const [showCompose, setShowCompose] = useState(false);\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [replyMessage, setReplyMessage] = useState('');\n\n  useEffect(() => {\n    if (!session) {\n      router.push('/login');\n      return;\n    }\n\n    // 모의 데이터 로드\n    loadConversations();\n  }, [session, router]);\n\n  const loadConversations = async () => {\n    try {\n      const response = await fetch('/api/messages/conversations');\n      if (response.ok) {\n        const data = await response.json();\n        setConversations(data.data.conversations || []);\n      } else {\n        console.error('Failed to load conversations');\n        setConversations([]);\n      }\n    } catch (error) {\n      console.error('Error loading conversations:', error);\n      setConversations([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMessages = async (userEmail: string) => {\n    try {\n      const response = await fetch(`/api/messages/user/${encodeURIComponent(userEmail)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setMessages(data.data.messages || []);\n      } else {\n        console.error('Failed to load messages');\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error loading messages:', error);\n      setMessages([]);\n    }\n  };\n\n  const handleConversationClick = (userEmail: string) => {\n    setSelectedConversation(userEmail);\n    loadMessages(userEmail);\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.content.trim() || !recipientEmail.trim()) {\n      alert('받는 사람과 메시지 내용을 입력해주세요.');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/messages/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          toEmail: recipientEmail,\n          subject: newMessage.subject,\n          content: newMessage.content\n        }),\n      });\n\n      if (response.ok) {\n        alert('메시지가 전송되었습니다.');\n        setNewMessage({ subject: '', content: '' });\n        setRecipientEmail('');\n        setShowCompose(false);\n        // 대화 목록 새로고침\n        loadConversations();\n      } else {\n        const errorData = await response.json();\n        alert(errorData.error?.message || '메시지 전송 중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      alert('메시지 전송 중 오류가 발생했습니다.');\n    }\n  };\n\n  const sendReply = async () => {\n    if (!replyMessage.trim() || !selectedConversation) return;\n\n    try {\n      const response = await fetch('/api/messages/reply', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          receiverId: selectedConversation,\n          subject: 'Re: 답장',\n          content: replyMessage,\n          senderName: session?.user?.name || 'Anonymous'\n        }),\n      });\n\n      if (response.ok) {\n        toast.success('메시지가 전송되었습니다.');\n        setReplyMessage('');\n        \n        // 메시지 목록에 즉시 추가\n        const newMsg: Message = {\n          id: Date.now().toString(),\n          fromUser: {\n            id: session?.user?.email || '',\n            name: session?.user?.name || 'Anonymous',\n            email: session?.user?.email || '',\n            image: session?.user?.image || undefined\n          },\n          toUser: {\n            id: selectedConversation,\n            name: selectedConversation,\n            email: selectedConversation,\n            image: undefined\n          },\n          subject: 'Re: 답장',\n          content: replyMessage,\n          createdAt: new Date().toISOString(),\n          isRead: true\n        };\n        \n        setMessages(prev => [...prev, newMsg]);\n      } else {\n        toast.error('메시지 전송에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Error sending reply:', error);\n      toast.error('메시지 전송 중 오류가 발생했습니다.');\n    }\n  };\n\n  const markAsRead = async (messageId: string) => {\n    try {\n      const response = await fetch(`/api/messages/${messageId}/read`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (response.ok) {\n        setMessages(prev => \n          prev.map(msg => \n            msg.id === messageId ? { ...msg, isRead: true } : msg\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error marking message as read:', error);\n    }\n  };\n\n  if (!session) {\n    return (\n      <FacebookLayout>\n        <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-sm p-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">로그인이 필요합니다</h1>\n          <p className=\"text-gray-600\">쪽지를 확인하려면 먼저 로그인해주세요.</p>\n        </div>\n      </FacebookLayout>\n    );\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"쪽지함 - 필직\"\n        description=\"다른 사용자들과 개인 메시지를 주고받으세요\"\n        keywords=\"쪽지, 메시지, 개인메시지, 필직\"\n      />\n\n      <FacebookLayout>\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n            {/* 헤더 */}\n            <div className=\"border-b border-gray-200 p-6\">\n              <div className=\"flex items-center justify-between\">\n                <h1 className=\"text-3xl font-bold text-gray-800\">쪽지함</h1>\n                <button\n                  onClick={() => setShowCompose(true)}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center space-x-2\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                    <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                  </svg>\n                  <span>새 쪽지</span>\n                </button>\n              </div>\n\n              {/* 탭 */}\n              <div className=\"flex space-x-4 mt-4\">\n                <button\n                  onClick={() => setActiveTab('inbox')}\n                  className={`px-4 py-2 rounded-lg font-medium ${\n                    activeTab === 'inbox'\n                      ? 'bg-blue-100 text-blue-800'\n                      : 'text-gray-600 hover:bg-gray-100'\n                  }`}\n                >\n                  받은 쪽지함\n                </button>\n                <button\n                  onClick={() => setActiveTab('sent')}\n                  className={`px-4 py-2 rounded-lg font-medium ${\n                    activeTab === 'sent'\n                      ? 'bg-blue-100 text-blue-800'\n                      : 'text-gray-600 hover:bg-gray-100'\n                  }`}\n                >\n                  보낸 쪽지함\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex h-96\">\n              {/* 대화 목록 */}\n              <div className=\"w-1/3 border-r border-gray-200 overflow-y-auto\">\n                {loading ? (\n                  <div className=\"p-6 text-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n                    <p className=\"text-gray-600 mt-2\">로딩 중...</p>\n                  </div>\n                ) : conversations.length === 0 ? (\n                  <div className=\"p-6 text-center\">\n                    <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                      <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                    </svg>\n                    <p className=\"text-gray-600\">대화가 없습니다</p>\n                  </div>\n                ) : (\n                  <div className=\"divide-y divide-gray-200\">\n                    {conversations.map((conversation) => (\n                      <div\n                        key={conversation.user.email}\n                        onClick={() => handleConversationClick(conversation.user.email)}\n                        className={`p-4 cursor-pointer hover:bg-gray-50 ${\n                          selectedConversation === conversation.user.email ? 'bg-blue-50' : ''\n                        }`}\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          {conversation.user.image ? (\n                            <img\n                              src={conversation.user.image}\n                              alt={conversation.user.name}\n                              className=\"w-10 h-10 rounded-full\"\n                            />\n                          ) : (\n                            <div className=\"w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center\">\n                              <svg className=\"w-6 h-6 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                              </svg>\n                            </div>\n                          )}\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center justify-between\">\n                              <p className=\"text-sm font-medium text-gray-800 truncate\">\n                                {conversation.user.name}\n                              </p>\n                              {conversation.unreadCount > 0 && (\n                                <span className=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">\n                                  {conversation.unreadCount}\n                                </span>\n                              )}\n                            </div>\n                            <p className=\"text-sm text-gray-600 truncate\">\n                              {conversation.lastMessage.content}\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                              {new Date(conversation.lastMessage.createdAt).toLocaleDateString('ko-KR')}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* 메시지 내용 */}\n              <div className=\"flex-1 flex flex-col\">\n                {selectedConversation ? (\n                  <>\n                    {/* 메시지 목록 */}\n                    <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                      {messages.map((message) => (\n                        <div\n                          key={message.id}\n                          className={`flex ${message.fromUser.email === session?.user?.email ? 'justify-end' : 'justify-start'}`}\n                        >\n                          <div\n                            className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                              message.fromUser.email === session?.user?.email\n                                ? 'bg-blue-600 text-white'\n                                : 'bg-gray-200 text-gray-800'\n                            }`}\n                          >\n                            {message.subject && (\n                              <div className=\"font-semibold text-sm mb-1\">{message.subject}</div>\n                            )}\n                            <div className=\"text-sm\">{message.content}</div>\n                            <div className={`text-xs mt-1 ${\n                              message.fromUser.email === session?.user?.email ? 'text-blue-200' : 'text-gray-500'\n                            }`}>\n                              {new Date(message.createdAt).toLocaleString('ko-KR')}\n                              {!message.isRead && message.fromUser.email !== session?.user?.email && (\n                                <span className=\"ml-2 bg-red-500 text-white text-xs px-1 rounded\">새 메시지</span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    {/* 메시지 입력 */}\n                    <div className=\"border-t border-gray-200 p-4\">\n                      <div className=\"flex space-x-2\">\n                        <input\n                          type=\"text\"\n                          value={replyMessage}\n                          onChange={(e) => setReplyMessage(e.target.value)}\n                          placeholder=\"메시지를 입력하세요...\"\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          onKeyPress={async (e) => {\n                            if (e.key === 'Enter' && replyMessage.trim()) {\n                              await sendReply();\n                            }\n                          }}\n                        />\n                        <button \n                          onClick={sendReply}\n                          disabled={!replyMessage.trim()}\n                          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          전송\n                        </button>\n                      </div>\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"flex-1 flex items-center justify-center\">\n                    <div className=\"text-center text-gray-500\">\n                      <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                        <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                      </svg>\n                      <p>대화를 선택해주세요</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 새 쪽지 작성 모달 */}\n        {showCompose && (\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl mx-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-800\">새 쪽지 작성</h3>\n                <button\n                  onClick={() => setShowCompose(false)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n\n              <form onSubmit={(e) => { e.preventDefault(); handleSendMessage(); }} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">받는 사람 (이메일)</label>\n                  <input\n                    type=\"email\"\n                    value={recipientEmail}\n                    onChange={(e) => setRecipientEmail(e.target.value)}\n                    required\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"user@example.com\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">제목</label>\n                  <input\n                    type=\"text\"\n                    value={newMessage.subject}\n                    onChange={(e) => setNewMessage(prev => ({ ...prev, subject: e.target.value }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"제목을 입력하세요\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">메시지</label>\n                  <textarea\n                    value={newMessage.content}\n                    onChange={(e) => setNewMessage(prev => ({ ...prev, content: e.target.value }))}\n                    required\n                    rows={5}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"메시지를 입력하세요...\"\n                  />\n                </div>\n\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowCompose(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    전송\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/my-posts.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/my-properties.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/owner/submit.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/police.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/profile/dashboard.tsx",["954","955","956"],[],"import { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport DynamicHeader from '@/components/common/DynamicHeader';\nimport PortalLayout from '@/components/layout/PortalLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { \n  User, \n  Settings, \n  Package, \n  MessageCircle, \n  Heart, \n  Star, \n  Eye, \n  Plus,\n  Edit3,\n  Calendar,\n  MapPin,\n  Phone,\n  Mail,\n  Shield,\n  TrendingUp,\n  DollarSign,\n  Clock,\n  AlertCircle,\n  CheckCircle\n} from 'lucide-react';\n\nexport default function UserDashboard() {\n  const router = useRouter();\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [activeTab, setActiveTab] = useState('overview');\n\n  // 사용자 데이터 (실제로는 API에서 가져올 예정)\n  const userData = {\n    id: 'user-123',\n    name: 'John Doe',\n    email: 'john@example.com',\n    phone: '+63 912 345 6789',\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n    location: '마카티, 마닐라',\n    joinedAt: '2024-01-15',\n    rating: 4.5,\n    totalReviews: 23,\n    verified: false\n  };\n\n  const dashboardStats = {\n    activeListings: 5,\n    totalViews: 1247,\n    messages: 12,\n    favorites: 8,\n    completedDeals: 15,\n    totalEarnings: 125000\n  };\n\n  const recentListings = [\n    {\n      id: '1',\n      title: 'iPhone 14 Pro Max 256GB',\n      price: 45000,\n      views: 234,\n      messages: 8,\n      status: 'active',\n      image: 'https://images.unsplash.com/photo-1510557880182-3d4d3cba35a5?w=150&h=150&fit=crop'\n    },\n    {\n      id: '2', \n      title: '소파 3인용 (거의 새것)',\n      price: 12000,\n      views: 89,\n      messages: 3,\n      status: 'active',\n      image: 'https://images.unsplash.com/photo-1555041469-a586c61ea9bc?w=150&h=150&fit=crop'\n    },\n    {\n      id: '3',\n      title: '삼성 세탁기 15kg',\n      price: 25000,\n      views: 156,\n      messages: 5,\n      status: 'sold',\n      image: 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=150&h=150&fit=crop'\n    }\n  ];\n\n  const recentMessages = [\n    {\n      id: '1',\n      item: 'iPhone 14 Pro Max',\n      buyer: 'Maria Santos',\n      message: '혹시 네고 가능한가요?',\n      timestamp: '2시간 전',\n      unread: true\n    },\n    {\n      id: '2',\n      item: '소파 3인용',\n      buyer: 'Kim Lee',\n      message: '언제 볼 수 있나요?',\n      timestamp: '5시간 전',\n      unread: true\n    },\n    {\n      id: '3',\n      item: '삼성 세탁기',\n      buyer: 'Chen Wu',\n      message: '감사합니다!',\n      timestamp: '1일 전',\n      unread: false\n    }\n  ];\n\n  const handleLanguageChange = (language: string) => {\n    setCurrentLanguage(language);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'text-green-600 bg-green-100';\n      case 'sold': return 'text-gray-600 bg-gray-100';\n      case 'pending': return 'text-yellow-600 bg-yellow-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active': return '판매중';\n      case 'sold': return '판매완료';\n      case 'pending': return '대기중';\n      default: return status;\n    }\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"Dashboard - My Profile\"\n        description=\"Manage your listings, messages, and account settings\"\n        type=\"website\"\n        locale={currentLanguage}\n      />\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <DynamicHeader \n          currentLanguage={currentLanguage} \n          onLanguageChange={handleLanguageChange} \n        />\n        \n        <PortalLayout>\n          <div className=\"py-8\">\n            {/* 프로필 헤더 */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex flex-col md:flex-row items-start md:items-center space-y-4 md:space-y-0 md:space-x-6\">\n                <div className=\"relative\">\n                  <img\n                    src={userData.avatar}\n                    alt={userData.name}\n                    className=\"w-20 h-20 rounded-full object-cover\"\n                  />\n                  <button className=\"absolute -bottom-1 -right-1 p-1.5 bg-blue-600 text-white rounded-full hover:bg-blue-700\">\n                    <Edit3 className=\"h-3 w-3\" />\n                  </button>\n                </div>\n                \n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h1 className=\"text-2xl font-bold text-gray-900\">{userData.name}</h1>\n                    {userData.verified ? (\n                      <div className=\"flex items-center space-x-1 text-green-600\">\n                        <CheckCircle className=\"h-5 w-5\" />\n                        <span className=\"text-sm font-medium\">인증됨</span>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center space-x-1 text-yellow-600\">\n                        <AlertCircle className=\"h-5 w-5\" />\n                        <span className=\"text-sm font-medium\">미인증</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-4 text-sm text-gray-600 mb-3\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\n                      <span>{userData.rating} ({userData.totalReviews} 리뷰)</span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <MapPin className=\"h-4 w-4\" />\n                      <span>{userData.location}</span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <Calendar className=\"h-4 w-4\" />\n                      <span>가입일: {userData.joinedAt}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm text-gray-600\">연락처:</span>\n                    <span className=\"text-sm text-gray-900\">{userData.email}</span>\n                    <span className=\"text-gray-400\">•</span>\n                    <span className=\"text-sm text-gray-900\">{userData.phone}</span>\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-3\">\n                  <button \n                    onClick={() => router.push('/profile/edit')}\n                    className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>설정</span>\n                  </button>\n                  <button \n                    onClick={() => router.push('/marketplace/sell')}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                    <span>상품 등록</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* 통계 카드 */}\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-8\">\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <Package className=\"h-6 w-6 text-blue-600 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-gray-900\">{dashboardStats.activeListings}</div>\n                <div className=\"text-sm text-gray-600\">판매중</div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <Eye className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-gray-900\">{dashboardStats.totalViews.toLocaleString()}</div>\n                <div className=\"text-sm text-gray-600\">조회수</div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <MessageCircle className=\"h-6 w-6 text-purple-600 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-gray-900\">{dashboardStats.messages}</div>\n                <div className=\"text-sm text-gray-600\">메시지</div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <Heart className=\"h-6 w-6 text-red-600 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-gray-900\">{dashboardStats.favorites}</div>\n                <div className=\"text-sm text-gray-600\">찜한 상품</div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <CheckCircle className=\"h-6 w-6 text-green-600 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-gray-900\">{dashboardStats.completedDeals}</div>\n                <div className=\"text-sm text-gray-600\">완료된 거래</div>\n              </div>\n\n              <div className=\"bg-white rounded-xl p-4 text-center shadow-sm border border-gray-200\">\n                <DollarSign className=\"h-6 w-6 text-yellow-600 mx-auto mb-2\" />\n                <div className=\"text-2xl font-bold text-gray-900\">₱{dashboardStats.totalEarnings.toLocaleString()}</div>\n                <div className=\"text-sm text-gray-600\">총 수익</div>\n              </div>\n            </div>\n\n            {/* 탭 네비게이션 */}\n            <div className=\"mb-6\">\n              <div className=\"border-b border-gray-200\">\n                <nav className=\"-mb-px flex space-x-8\">\n                  {[\n                    { id: 'overview', label: '개요', icon: TrendingUp },\n                    { id: 'listings', label: '내 상품', icon: Package },\n                    { id: 'messages', label: '메시지', icon: MessageCircle },\n                    { id: 'favorites', label: '찜한 상품', icon: Heart }\n                  ].map((tab) => (\n                    <button\n                      key={tab.id}\n                      onClick={() => setActiveTab(tab.id)}\n                      className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${\n                        activeTab === tab.id\n                          ? 'border-blue-500 text-blue-600'\n                          : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                      }`}\n                    >\n                      <tab.icon className=\"h-4 w-4\" />\n                      <span>{tab.label}</span>\n                    </button>\n                  ))}\n                </nav>\n              </div>\n            </div>\n\n            {/* 탭 컨텐츠 */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {/* 메인 컨텐츠 */}\n              <div className=\"lg:col-span-2\">\n                {activeTab === 'overview' && (\n                  <div className=\"space-y-6\">\n                    {/* 최근 등록한 상품 */}\n                    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-gray-900\">최근 등록한 상품</h3>\n                        <button \n                          onClick={() => setActiveTab('listings')}\n                          className=\"text-sm text-blue-600 hover:text-blue-700\"\n                        >\n                          모두 보기 →\n                        </button>\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        {recentListings.map((item) => (\n                          <div key={item.id} className=\"flex items-center space-x-4 p-3 border border-gray-200 rounded-lg hover:bg-gray-50\">\n                            <img\n                              src={item.image}\n                              alt={item.title}\n                              className=\"w-16 h-16 object-cover rounded-lg\"\n                            />\n                            <div className=\"flex-1\">\n                              <h4 className=\"font-medium text-gray-900\">{item.title}</h4>\n                              <p className=\"text-lg font-bold text-blue-600\">₱{item.price.toLocaleString()}</p>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className=\"flex items-center space-x-2 text-sm text-gray-600 mb-1\">\n                                <Eye className=\"h-4 w-4\" />\n                                <span>{item.views}</span>\n                                <MessageCircle className=\"h-4 w-4\" />\n                                <span>{item.messages}</span>\n                              </div>\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(item.status)}`}>\n                                {getStatusText(item.status)}\n                              </span>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {activeTab === 'listings' && (\n                  <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">내 상품 목록</h3>\n                    <div className=\"space-y-4\">\n                      {recentListings.map((item) => (\n                        <div key={item.id} className=\"flex items-center space-x-4 p-4 border border-gray-200 rounded-lg\">\n                          <img\n                            src={item.image}\n                            alt={item.title}\n                            className=\"w-20 h-20 object-cover rounded-lg\"\n                          />\n                          <div className=\"flex-1\">\n                            <h4 className=\"font-medium text-gray-900 mb-1\">{item.title}</h4>\n                            <p className=\"text-lg font-bold text-blue-600 mb-2\">₱{item.price.toLocaleString()}</p>\n                            <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                              <div className=\"flex items-center space-x-1\">\n                                <Eye className=\"h-4 w-4\" />\n                                <span>{item.views} 조회</span>\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                <MessageCircle className=\"h-4 w-4\" />\n                                <span>{item.messages} 메시지</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex flex-col space-y-2\">\n                            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(item.status)}`}>\n                              {getStatusText(item.status)}\n                            </span>\n                            <button className=\"text-sm text-blue-600 hover:text-blue-700\">\n                              편집\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {activeTab === 'messages' && (\n                  <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">최근 메시지</h3>\n                    <div className=\"space-y-4\">\n                      {recentMessages.map((msg) => (\n                        <div key={msg.id} className={`p-4 border rounded-lg ${msg.unread ? 'bg-blue-50 border-blue-200' : 'border-gray-200'}`}>\n                          <div className=\"flex items-start justify-between mb-2\">\n                            <div>\n                              <h4 className=\"font-medium text-gray-900\">{msg.item}</h4>\n                              <p className=\"text-sm text-gray-600\">{msg.buyer}</p>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"text-xs text-gray-500\">{msg.timestamp}</span>\n                              {msg.unread && (\n                                <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                              )}\n                            </div>\n                          </div>\n                          <p className=\"text-gray-700\">{msg.message}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* 사이드바 */}\n              <div className=\"space-y-6\">\n                {/* 빠른 액션 */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">빠른 액션</h3>\n                  <div className=\"space-y-3\">\n                    <button \n                      onClick={() => router.push('/marketplace/sell')}\n                      className=\"w-full flex items-center space-x-3 p-3 text-left border border-gray-200 rounded-lg hover:bg-gray-50\"\n                    >\n                      <Plus className=\"h-5 w-5 text-blue-600\" />\n                      <span>새 상품 등록</span>\n                    </button>\n                    <button className=\"w-full flex items-center space-x-3 p-3 text-left border border-gray-200 rounded-lg hover:bg-gray-50\">\n                      <MessageCircle className=\"h-5 w-5 text-green-600\" />\n                      <span>메시지 확인</span>\n                    </button>\n                    <button \n                      onClick={() => router.push('/profile/edit')}\n                      className=\"w-full flex items-center space-x-3 p-3 text-left border border-gray-200 rounded-lg hover:bg-gray-50\"\n                    >\n                      <Settings className=\"h-5 w-5 text-purple-600\" />\n                      <span>계정 설정</span>\n                    </button>\n                  </div>\n                </div>\n\n                {/* 월간 통계 */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">이번 달 활동</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">새 조회수</span>\n                      <span className=\"font-medium\">+234</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">새 메시지</span>\n                      <span className=\"font-medium\">+12</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">완료된 거래</span>\n                      <span className=\"font-medium\">3</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">수익</span>\n                      <span className=\"font-medium text-green-600\">₱15,000</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 계정 상태 */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">계정 상태</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">이메일 인증</span>\n                      <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">핸드폰 인증</span>\n                      <AlertCircle className=\"h-5 w-5 text-yellow-600\" />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">신분증 인증</span>\n                      <AlertCircle className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                  </div>\n                  <button className=\"w-full mt-4 px-4 py-2 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n                    인증 완료하기\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </PortalLayout>\n      </div>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/profile/edit.tsx",["957"],[],"import React, { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { toast } from 'react-hot-toast';\n\ninterface ProfileFormData {\n  name: string;\n  bio: string;\n  location: string;\n  phone: string;\n  whatsapp: string;\n}\n\nexport default function EditProfilePage() {\n  const { data: session } = useSession();\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formData, setFormData] = useState<ProfileFormData>({\n    name: '',\n    bio: '',\n    location: '',\n    phone: '',\n    whatsapp: ''\n  });\n\n  useEffect(() => {\n    if (!session) {\n      router.push('/login');\n      return;\n    }\n\n    // 기존 프로필 정보 로드 (실제로는 API에서 가져옴)\n    setFormData({\n      name: session.user?.name || '',\n      bio: '필직에서 활동하는 사용자입니다.',\n      location: '필리핀',\n      phone: '',\n      whatsapp: ''\n    });\n  }, [session, router]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const response = await fetch('/api/profile/update', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        toast.success('프로필이 업데이트되었습니다!');\n        router.push('/profile');\n      } else {\n        const errorData = await response.json();\n        toast.error(errorData.error || '프로필 업데이트 중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      toast.error('프로필 업데이트 중 오류가 발생했습니다.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!session) {\n    return (\n      <FacebookLayout>\n        <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-sm p-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">로그인이 필요합니다</h1>\n          <p className=\"text-gray-600\">프로필을 수정하려면 먼저 로그인해주세요.</p>\n        </div>\n      </FacebookLayout>\n    );\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"프로필 수정 - 필직\"\n        description=\"내 프로필 정보를 수정하고 업데이트하세요\"\n        keywords=\"프로필수정, 사용자정보, 필직\"\n      />\n\n      <FacebookLayout>\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h1 className=\"text-2xl font-bold text-gray-800\">프로필 수정</h1>\n              <button\n                onClick={() => router.back()}\n                className=\"text-gray-600 hover:text-gray-800\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* 현재 프로필 이미지 */}\n            <div className=\"text-center mb-6\">\n              <div className=\"inline-block relative\">\n                {session.user?.image ? (\n                  <img \n                    src={session.user.image} \n                    alt={session.user.name || 'User'}\n                    className=\"w-24 h-24 rounded-full border-4 border-white shadow-lg\"\n                  />\n                ) : (\n                  <div className=\"w-24 h-24 bg-gray-300 rounded-full border-4 border-white shadow-lg flex items-center justify-center\">\n                    <svg className=\"w-12 h-12 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                )}\n              </div>\n              <p className=\"text-sm text-gray-600 mt-2\">\n                프로필 이미지는 OAuth 제공업체에서 자동으로 가져옵니다\n              </p>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* 기본 정보 */}\n              <div>\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">기본 정보</h2>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      이름 *\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleInputChange}\n                      required\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"실명을 입력하세요\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      이메일\n                    </label>\n                    <input\n                      type=\"email\"\n                      value={session.user?.email || ''}\n                      disabled\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      이메일은 OAuth 제공업체에서 관리되므로 변경할 수 없습니다\n                    </p>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      자기소개\n                    </label>\n                    <textarea\n                      name=\"bio\"\n                      value={formData.bio}\n                      onChange={handleInputChange}\n                      rows={3}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"간단한 자기소개를 작성해주세요\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      거주 지역\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"location\"\n                      value={formData.location}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"예: 마닐라, BGC\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* 연락처 정보 */}\n              <div>\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">연락처 정보</h2>\n                \n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      전화번호\n                    </label>\n                    <input\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"+639171234567\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      국가번호를 포함해서 입력해주세요 (예: +63)\n                    </p>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      WhatsApp 번호\n                    </label>\n                    <input\n                      type=\"tel\"\n                      name=\"whatsapp\"\n                      value={formData.whatsapp}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"+639171234567\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      WhatsApp에서 사용하는 번호를 입력해주세요\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* 개인정보 안내 */}\n              <div className=\"bg-blue-50 border-l-4 border-blue-400 p-4\">\n                <div className=\"flex\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm text-blue-700\">\n                      <strong>개인정보 보호:</strong> 입력한 연락처 정보는 다른 사용자들이 연락할 수 있도록 \n                      프로필에 표시됩니다. 원하지 않으시면 입력하지 않으셔도 됩니다.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* 제출 버튼 */}\n              <div className=\"flex justify-end space-x-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => router.push('/profile')}\n                  className=\"px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                >\n                  취소\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {isSubmitting ? '저장 중...' : '변경사항 저장'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/profile.tsx",["958"],[],"import React, { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\n\ninterface UserProfile {\n  name: string;\n  email: string;\n  image?: string;\n  bio?: string;\n  location?: string;\n  phone?: string;\n  whatsapp?: string;\n  joinedAt: string;\n  postsCount: number;\n  propertiesCount: number;\n}\n\nexport default function ProfilePage() {\n  const { data: session } = useSession();\n  const router = useRouter();\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!session) {\n      router.push('/login');\n      return;\n    }\n\n    // 프로필 정보 로드 (실제로는 API에서 가져옴)\n    setProfile({\n      name: session.user?.name || '',\n      email: session.user?.email || '',\n      image: session.user?.image || '',\n      bio: '필직에서 활동하는 사용자입니다.',\n      location: '필리핀',\n      phone: '',\n      whatsapp: '',\n      joinedAt: '2024-01-01',\n      postsCount: 5,\n      propertiesCount: 2\n    });\n    setLoading(false);\n  }, [session, router]);\n\n  if (!session) {\n    return (\n      <FacebookLayout>\n        <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-sm p-6\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">로그인이 필요합니다</h1>\n          <p className=\"text-gray-600\">프로필을 보려면 먼저 로그인해주세요.</p>\n        </div>\n      </FacebookLayout>\n    );\n  }\n\n  if (loading) {\n    return (\n      <FacebookLayout>\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center py-8\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"text-gray-600 mt-4\">프로필을 불러오는 중...</p>\n          </div>\n        </div>\n      </FacebookLayout>\n    );\n  }\n\n  return (\n    <>\n      <SEOHead\n        title=\"내 프로필 - 필직\"\n        description=\"필직에서의 내 프로필과 활동 정보\"\n        keywords=\"프로필, 사용자, 필직\"\n      />\n\n      <FacebookLayout>\n        <div className=\"max-w-4xl mx-auto\">\n          {/* 프로필 헤더 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <div className=\"flex flex-col md:flex-row items-start md:items-center space-y-4 md:space-y-0 md:space-x-6\">\n              <div className=\"flex-shrink-0\">\n                {profile?.image ? (\n                  <img \n                    src={profile.image} \n                    alt={profile.name}\n                    className=\"w-24 h-24 rounded-full border-4 border-white shadow-lg\"\n                  />\n                ) : (\n                  <div className=\"w-24 h-24 bg-gray-300 rounded-full border-4 border-white shadow-lg flex items-center justify-center\">\n                    <svg className=\"w-12 h-12 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"flex-1\">\n                <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">{profile?.name}</h1>\n                <p className=\"text-gray-600 mb-2\">{profile?.email}</p>\n                {profile?.bio && (\n                  <p className=\"text-gray-700 mb-4\">{profile.bio}</p>\n                )}\n                \n                <div className=\"flex flex-wrap gap-4 text-sm text-gray-600\">\n                  {profile?.location && (\n                    <div className=\"flex items-center space-x-1\">\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <span>{profile.location}</span>\n                    </div>\n                  )}\n                  <div className=\"flex items-center space-x-1\">\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\" />\n                    </svg>\n                    <span>가입일: {new Date(profile?.joinedAt || '').toLocaleDateString('ko-KR')}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => router.push('/profile/edit')}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  프로필 수정\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* 통계 카드 */}\n          <div className=\"grid md:grid-cols-3 gap-6 mb-6\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center\">\n              <div className=\"text-3xl font-bold text-blue-600 mb-2\">{profile?.postsCount}</div>\n              <div className=\"text-gray-600\">작성한 게시글</div>\n              <button\n                onClick={() => router.push('/my-posts')}\n                className=\"mt-3 text-blue-600 hover:text-blue-800 text-sm font-medium\"\n              >\n                게시글 보기 →\n              </button>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center\">\n              <div className=\"text-3xl font-bold text-green-600 mb-2\">{profile?.propertiesCount}</div>\n              <div className=\"text-gray-600\">등록한 매물</div>\n              <button\n                onClick={() => router.push('/my-properties')}\n                className=\"mt-3 text-green-600 hover:text-green-800 text-sm font-medium\"\n              >\n                매물 보기 →\n              </button>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow-sm p-6 text-center\">\n              <div className=\"text-3xl font-bold text-purple-600 mb-2\">0</div>\n              <div className=\"text-gray-600\">받은 좋아요</div>\n              <div className=\"mt-3 text-gray-400 text-sm\">\n                활동하며 좋아요를 받아보세요\n              </div>\n            </div>\n          </div>\n\n          {/* 연락처 정보 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">연락처 정보</h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">이메일</label>\n                <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                  <svg className=\"w-5 h-5 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                    <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                  </svg>\n                  <span className=\"text-gray-800\">{profile?.email}</span>\n                </div>\n              </div>\n\n              {profile?.phone && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">전화번호</label>\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n                    </svg>\n                    <span className=\"text-gray-800\">{profile.phone}</span>\n                  </div>\n                </div>\n              )}\n\n              {profile?.whatsapp && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">WhatsApp</label>\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <svg className=\"w-5 h-5 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.520-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.106\"/>\n                    </svg>\n                    <span className=\"text-gray-800\">{profile.whatsapp}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {(!profile?.phone && !profile?.whatsapp) && (\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>연락처 정보를 추가하여 다른 사용자들과 소통해보세요.</p>\n                <button\n                  onClick={() => router.push('/profile/edit')}\n                  className=\"mt-2 text-blue-600 hover:text-blue-800 font-medium\"\n                >\n                  연락처 추가하기 →\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* 빠른 액션 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">빠른 작업</h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <button\n                onClick={() => router.push('/properties/add')}\n                className=\"flex items-center space-x-3 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\"\n              >\n                <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                  </svg>\n                </div>\n                <div className=\"text-left\">\n                  <div className=\"font-medium text-gray-800\">매물 등록</div>\n                  <div className=\"text-sm text-gray-600\">새로운 부동산 매물을 등록하세요</div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => router.push('/community')}\n                className=\"flex items-center space-x-3 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\"\n              >\n                <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"text-left\">\n                  <div className=\"font-medium text-gray-800\">게시글 작성</div>\n                  <div className=\"text-sm text-gray-600\">커뮤니티에 새 글을 작성하세요</div>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/properties/add.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/properties.tsx",["959","960"],[],"import { useState, useMemo, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport PropertyGridByRegion from '@/components/property/PropertyGridByRegion';\nimport PropertySearch from '@/components/property/PropertySearch';\nimport CategorySelector from '@/components/property/CategorySelector';\nimport FloatingContactButton from '@/components/common/FloatingContactButton';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { BreadcrumbSchema } from '@/components/seo/JsonLd';\nimport { Property, PropertyFilters } from '@/types/property';\nimport { mockProperties } from '@/data/mockProperties';\nimport { mockMonthlyStayProperties } from '@/data/mockMonthlyStayProperties';\nimport { defaultSEO, getLocalizedSEO } from '@/utils/seo';\nimport { Filter, Grid, List, SlidersHorizontal, MapPin, Building, Users, Calendar } from 'lucide-react';\nimport { toast } from 'react-hot-toast';\n\nexport default function PropertiesPage() {\n  const router = useRouter();\n  const currentLanguage = 'ko';\n  const [filters, setFilters] = useState<PropertyFilters>({});\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [showFilters, setShowFilters] = useState(false);\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  // SEO 설정\n  const seoConfig = useMemo(() => {\n    const baseSEO = defaultSEO.properties;\n    return getLocalizedSEO(baseSEO, currentLanguage);\n  }, [currentLanguage]);\n\n  const breadcrumbs = [\n    { name: 'Home', url: '/' },\n    { name: 'Properties', url: '/properties' }\n  ];\n\n  // 모든 매물 결합\n  const allProperties = useMemo(() => {\n    return [...mockProperties, ...mockMonthlyStayProperties];\n  }, []);\n\n  // 필터링된 매물\n  const filteredProperties = useMemo(() => {\n    let filtered = allProperties;\n    \n    if (filters.region) {\n      filtered = filtered.filter(property => property.region === filters.region);\n    }\n    \n    if (filters.type) {\n      filtered = filtered.filter(property => property.type === filters.type);\n    }\n    \n    if (filters.category) {\n      if (filters.category === 'monthly_stay') {\n        filtered = filtered.filter(property => property.monthlyStay?.available);\n      } else if (filters.category === 'long_term') {\n        filtered = filtered.filter(property => !property.monthlyStay?.available);\n      }\n    }\n    \n    if (filters.minPrice !== undefined) {\n      filtered = filtered.filter(property => property.price >= filters.minPrice!);\n    }\n    \n    if (filters.maxPrice !== undefined) {\n      filtered = filtered.filter(property => property.price <= filters.maxPrice!);\n    }\n    \n    if (filters.bedrooms !== undefined) {\n      filtered = filtered.filter(property => property.bedrooms >= filters.bedrooms!);\n    }\n    \n    if (filters.bathrooms !== undefined) {\n      filtered = filtered.filter(property => property.bathrooms >= filters.bathrooms!);\n    }\n    \n    if (filters.furnished !== undefined) {\n      filtered = filtered.filter(property => property.furnished === filters.furnished);\n    }\n\n    // Monthly stay specific filters\n    if (filters.travelerFriendly) {\n      filtered = filtered.filter(property => property.monthlyStay?.available === true);\n    }\n\n    if (filters.nearTouristSpots) {\n      filtered = filtered.filter(property => \n        property.monthlyStay?.touristAttractions?.some(attraction => \n          attraction.type === 'beach' || attraction.type === 'temple'\n        )\n      );\n    }\n\n    if (filters.wifiSpeed) {\n      filtered = filtered.filter(property => {\n        const wifiSpeed = property.monthlyStay?.livingConvenience?.wifi_speed;\n        if (!wifiSpeed) return false;\n        \n        switch (filters.wifiSpeed) {\n          case 'basic': return true;\n          case 'fast': return wifiSpeed === 'fast' || wifiSpeed === 'ultra';\n          case 'ultra': return wifiSpeed === 'ultra';\n          default: return true;\n        }\n      });\n    }\n    \n    // Sort properties\n    if (filters.sortBy) {\n      filtered.sort((a, b) => {\n        switch (filters.sortBy) {\n          case 'price':\n            return a.price - b.price;\n          case 'date':\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n          case 'popularity':\n            return (b.viewCount || 0) - (a.viewCount || 0);\n          default:\n            return 0;\n        }\n      });\n    }\n    \n    return filtered;\n  }, [allProperties, filters]);\n\n  // 지역별 통계\n  const regionStats = useMemo(() => {\n    const stats = allProperties.reduce((acc, property) => {\n      const region = property.region;\n      if (!acc[region]) {\n        acc[region] = { count: 0, avgPrice: 0, totalPrice: 0 };\n      }\n      acc[region].count++;\n      acc[region].totalPrice += property.price;\n      acc[region].avgPrice = Math.round(acc[region].totalPrice / acc[region].count);\n      return acc;\n    }, {} as Record<string, { count: number; avgPrice: number; totalPrice: number }>);\n    \n    return Object.entries(stats).map(([region, data]) => ({\n      region,\n      ...data\n    }));\n  }, [allProperties]);\n\n\n  // 검색 기능\n  const searchProperties = async () => {\n    setLoading(true);\n    try {\n      const queryParams = new URLSearchParams();\n      \n      if (filters.region) queryParams.append('region', filters.region);\n      if (filters.type) queryParams.append('propertyType', filters.type);\n      if (filters.minPrice) queryParams.append('minPrice', filters.minPrice.toString());\n      if (filters.maxPrice) queryParams.append('maxPrice', filters.maxPrice.toString());\n      if (filters.bedrooms) queryParams.append('bedrooms', filters.bedrooms.toString());\n      if (filters.bathrooms) queryParams.append('bathrooms', filters.bathrooms.toString());\n      if (filters.search) queryParams.append('search', filters.search);\n\n      const response = await fetch(`/api/properties/search?${queryParams}`);\n      const data = await response.json();\n\n      if (response.ok) {\n        setProperties(data.properties);\n      } else {\n        throw new Error('Failed to fetch properties');\n      }\n    } catch (error) {\n      toast.error('매물 검색 중 오류가 발생했습니다.');\n      console.error('Search error:', error);\n      // 오류 시 목 데이터 사용\n      setProperties([...mockProperties, ...mockMonthlyStayProperties]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 초기 로드 및 필터 변경 시 검색\n  useEffect(() => {\n    // 초기에는 목 데이터 사용\n    setProperties([...mockProperties, ...mockMonthlyStayProperties]);\n  }, []);\n\n  const handleFiltersChange = (newFilters: PropertyFilters) => {\n    setFilters(newFilters);\n  };\n\n  const handlePropertyContact = (property: Property) => {\n    if (property.contact.whatsapp) {\n      window.open(`https://wa.me/${property.contact.whatsapp}`, '_blank');\n    }\n  };\n\n  const handlePropertyLike = async (property: Property) => {\n    try {\n      const response = await fetch(`/api/properties/${property.id}/like`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (response.ok) {\n        toast.success('좋아요를 눌렀습니다!');\n        // 좋아요 수 업데이트\n        searchProperties();\n      }\n    } catch (error) {\n      toast.error('좋아요 처리 중 오류가 발생했습니다.');\n      console.error('Like error:', error);\n    }\n  };\n\n  const handlePropertyShare = (property: Property) => {\n    if (navigator.share) {\n      navigator.share({\n        title: property.title,\n        text: property.description,\n        url: `/property/${property.id}`,\n      });\n    } else {\n      navigator.clipboard.writeText(`${window.location.origin}/property/${property.id}`);\n    }\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n  };\n\n  return (\n    <>\n      <SEOHead\n        title={seoConfig.title}\n        description={seoConfig.description}\n        keywords={seoConfig.keywords}\n        image={seoConfig.image}\n        type=\"website\"\n        locale={currentLanguage}\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n      />\n      \n      <BreadcrumbSchema items={breadcrumbs} />\n\n      <FacebookLayout section=\"properties\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                🏢 All Properties\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-6\">\n                필리핀 전역의 프리미엄 렌탈 매물을 찾아보세요. 외국인을 위한 검증된 매물들입니다.\n              </p>\n\n              {/* 매물 등록 버튼 */}\n              <div className=\"mb-6\">\n                <button\n                  onClick={() => router.push('/properties/add')}\n                  className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center space-x-2\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span>매물 등록하기</span>\n                </button>\n              </div>\n\n              {/* Quick Stats */}\n              <div className=\"flex flex-wrap justify-center gap-4 text-sm\">\n                <div className=\"bg-white px-4 py-2 rounded-full shadow-sm border border-gray-200\">\n                  📍 {allProperties.length} Properties Available\n                </div>\n                <div className=\"bg-white px-4 py-2 rounded-full shadow-sm border border-gray-200\">\n                  🏙️ {regionStats.length} Cities\n                </div>\n                <div className=\"bg-white px-4 py-2 rounded-full shadow-sm border border-gray-200\">\n                  💰 From ₱{Math.min(...allProperties.map(p => p.price)).toLocaleString()}/month\n                </div>\n                <div className=\"bg-white px-4 py-2 rounded-full shadow-sm border border-gray-200\">\n                  🌐 Multilingual Support\n                </div>\n              </div>\n            </div>\n\n            {/* Region Stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n              {regionStats.map((stat) => (\n                <div key={stat.region} className=\"bg-white rounded-xl p-4 shadow-sm border border-gray-200 text-center\">\n                  <div className=\"text-lg font-bold text-gray-900 capitalize\">{stat.region}</div>\n                  <div className=\"text-sm text-gray-600 mb-1\">{stat.count} properties</div>\n                  <div className=\"text-sm font-medium text-blue-600\">\n                    Avg: ₱{stat.avgPrice.toLocaleString()}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Search Section */}\n            <div className=\"mb-8\">\n              <PropertySearch \n                filters={filters}\n                onFiltersChange={handleFiltersChange}\n                onSearch={searchProperties}\n                language={currentLanguage}\n              />\n            </div>\n\n            {/* Category Selector */}\n            <div className=\"mb-8\">\n              <CategorySelector \n                filters={filters}\n                onFiltersChange={handleFiltersChange}\n                language={currentLanguage}\n              />\n            </div>\n\n            {/* Controls */}\n            <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between gap-4 mb-6\">\n              {/* Results Info */}\n              <div className=\"text-gray-600\">\n                <span className=\"font-medium\">{filteredProperties.length}</span> of {allProperties.length} properties found\n                {Object.keys(filters).length > 0 && (\n                  <button \n                    onClick={clearFilters}\n                    className=\"ml-4 text-blue-600 hover:text-blue-700 text-sm underline\"\n                  >\n                    Clear all filters\n                  </button>\n                )}\n              </div>\n\n              {/* View Controls */}\n              <div className=\"flex items-center gap-4\">\n                {/* Sort */}\n                <select\n                  value={filters.sortBy || ''}\n                  onChange={(e) => handleFiltersChange({ ...filters, sortBy: e.target.value as any })}\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">Sort by</option>\n                  <option value=\"price\">Price: Low to High</option>\n                  <option value=\"date\">Newest First</option>\n                  <option value=\"popularity\">Most Popular</option>\n                </select>\n\n                {/* View Mode */}\n                <div className=\"flex bg-gray-100 rounded-lg p-1\">\n                  <button\n                    onClick={() => setViewMode('grid')}\n                    className={`p-2 rounded-md transition-colors ${\n                      viewMode === 'grid' \n                        ? 'bg-white text-blue-600 shadow-sm' \n                        : 'text-gray-600 hover:text-gray-900'\n                    }`}\n                  >\n                    <Grid className=\"h-4 w-4\" />\n                  </button>\n                  <button\n                    onClick={() => setViewMode('list')}\n                    className={`p-2 rounded-md transition-colors ${\n                      viewMode === 'list' \n                        ? 'bg-white text-blue-600 shadow-sm' \n                        : 'text-gray-600 hover:text-gray-900'\n                    }`}\n                  >\n                    <List className=\"h-4 w-4\" />\n                  </button>\n                </div>\n\n                {/* Mobile Filter Toggle */}\n                <button\n                  onClick={() => setShowFilters(!showFilters)}\n                  className=\"md:hidden flex items-center gap-2 px-3 py-2 border border-gray-300 rounded-lg text-sm hover:bg-gray-50\"\n                >\n                  <SlidersHorizontal className=\"h-4 w-4\" />\n                  Filters\n                </button>\n              </div>\n            </div>\n\n            {/* Active Filters */}\n            {Object.keys(filters).length > 0 && (\n              <div className=\"flex flex-wrap gap-2 mb-6\">\n                {filters.region && (\n                  <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm flex items-center gap-1\">\n                    <MapPin className=\"h-3 w-3\" />\n                    {filters.region}\n                  </span>\n                )}\n                {filters.type && (\n                  <span className=\"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm flex items-center gap-1\">\n                    <Building className=\"h-3 w-3\" />\n                    {filters.type}\n                  </span>\n                )}\n                {filters.category && (\n                  <span className=\"bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm flex items-center gap-1\">\n                    <Calendar className=\"h-3 w-3\" />\n                    {filters.category === 'monthly_stay' ? 'Monthly Stay' : 'Long Term'}\n                  </span>\n                )}\n                {filters.bedrooms && (\n                  <span className=\"bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm\">\n                    {filters.bedrooms}+ bedrooms\n                  </span>\n                )}\n                {filters.furnished !== undefined && (\n                  <span className=\"bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm\">\n                    {filters.furnished ? 'Furnished' : 'Unfurnished'}\n                  </span>\n                )}\n              </div>\n            )}\n\n            {/* Properties Display */}\n            {filteredProperties.length > 0 ? (\n              <PropertyGridByRegion \n                properties={filteredProperties}\n                language={currentLanguage}\n                onContact={handlePropertyContact}\n                onLike={handlePropertyLike}\n                onShare={handlePropertyShare}\n                viewMode={viewMode}\n              />\n            ) : (\n              <div className=\"text-center py-16\">\n                <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Building className=\"h-12 w-12 text-gray-400\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No Properties Found</h3>\n                <p className=\"text-gray-600 mb-6\">\n                  No properties match your current search criteria. Try adjusting your filters.\n                </p>\n                <button \n                  onClick={clearFilters}\n                  className=\"bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n                >\n                  Clear All Filters\n                </button>\n              </div>\n            )}\n\n            {/* Call to Action */}\n            <div className=\"bg-blue-50 rounded-2xl p-8 mt-12 text-center\">\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                Can't Find What You're Looking For?\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Our expert team can help you find properties that match your specific requirements.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button\n                  onClick={() => router.push('/contact')}\n                  className=\"bg-blue-600 text-white px-8 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n                >\n                  Contact Property Expert\n                </button>\n                <button\n                  onClick={() => router.push('/owner/submit')}\n                  className=\"border border-blue-600 text-blue-600 px-8 py-3 rounded-lg font-medium hover:bg-blue-50 transition-colors\"\n                >\n                  List Your Property\n                </button>\n              </div>\n            </div>\n          </main>\n        <FloatingContactButton />\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/property/[id].tsx",["961"],[],"import { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { BreadcrumbSchema, RealEstateSchema, ReviewSchema } from '@/components/seo/JsonLd';\nimport { Property } from '@/types/property';\nimport { mockProperties } from '@/data/mockProperties';\nimport { mockMonthlyStayProperties } from '@/data/mockMonthlyStayProperties';\nimport { generatePropertySEO, generateBreadcrumbs } from '@/utils/seo';\nimport { \n  MapPin, Bed, Bath, Maximize, Car, Wifi, Shield, \n  Star, Heart, Share2, Phone, MessageCircle, Calendar,\n  Users, Building, Waves, Home, Check, X, ChevronLeft,\n  ChevronRight, Eye, Clock, Tag, MoreHorizontal\n} from 'lucide-react';\n\ninterface PropertyPageProps {\n  property: Property | null;\n}\n\nexport default function PropertyPage({ property }: PropertyPageProps) {\n  const router = useRouter();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isLiked, setIsLiked] = useState(false);\n  const [showImageModal, setShowImageModal] = useState(false);\n\n  // 매물이 없는 경우 로딩 또는 404 처리\n  if (!property) {\n    return (\n      <FacebookLayout>\n        <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n          <div className=\"bg-white rounded-lg shadow-lg p-8 text-center max-w-md\">\n            <div className=\"text-6xl mb-4\">🏠</div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">매물을 찾을 수 없습니다</h1>\n            <p className=\"text-gray-600 mb-6\">요청하신 매물이 존재하지 않거나 삭제되었습니다.</p>\n            <button \n              onClick={() => router.push('/')}\n              className=\"bg-[#1877f2] text-white px-8 py-3 rounded-lg font-medium hover:bg-[#1664d8] transition-colors\"\n            >\n              홈으로 돌아가기\n            </button>\n          </div>\n        </div>\n      </FacebookLayout>\n    );\n  }\n\n  // SEO 설정\n  const seoConfig = useMemo(() => {\n    const propertySEO = {\n      id: property.id,\n      title: property.title,\n      description: property.description,\n      location: property.address,\n      price: property.price,\n      currency: 'PHP',\n      bedrooms: property.bedrooms,\n      bathrooms: property.bathrooms,\n      area: property.area,\n      images: property.images.map(img => typeof img === 'string' ? img : img.url),\n      amenities: property.amenities,\n      type: property.type as 'house' | 'condo' | 'apartment',\n      availability: 'available' as const,\n      publishedTime: property.createdAt,\n      modifiedTime: property.updatedAt || property.createdAt\n    };\n    \n    return generatePropertySEO(propertySEO);\n  }, [property]);\n\n  // 빵 부스러기 생성\n  const breadcrumbs = [\n    { name: '홈', url: '/' },\n    { name: '부동산', url: '/properties' },\n    { name: property.title, url: `/property/${property.id}` }\n  ];\n\n  const handleMessageClick = () => {\n    // 페이스북 메신저 스타일 메시지\n    alert('판매자에게 메시지를 보냅니다.');\n  };\n\n  const handleShare = async () => {\n    if (navigator.share) {\n      try {\n        await navigator.share({\n          title: property.title,\n          text: property.description,\n          url: window.location.href,\n        });\n      } catch (error) {\n        console.log('Error sharing:', error);\n      }\n    } else {\n      // Fallback for browsers that don't support Web Share API\n      navigator.clipboard.writeText(window.location.href);\n      alert('Link copied to clipboard!');\n    }\n  };\n\n  const handleLike = () => {\n    setIsLiked(!isLiked);\n  };\n\n  // 가격 포맷팅\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'PHP',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(price);\n  };\n\n  // 더미 리뷰 데이터\n  const reviews = [\n    {\n      id: 1,\n      author: 'John Smith',\n      rating: 5,\n      date: '2024-01-15',\n      comment: 'Amazing apartment with great location. The owner was very helpful and responsive.',\n      avatar: '/images/avatar1.jpg'\n    },\n    {\n      id: 2,\n      author: '김민수',\n      rating: 4,\n      date: '2024-01-10',\n      comment: 'Good value for money. Clean and well-maintained property.',\n      avatar: '/images/avatar2.jpg'\n    }\n  ];\n\n  return (\n    <>\n      <SEOHead\n        title={seoConfig.title}\n        description={seoConfig.description}\n        keywords={seoConfig.keywords}\n        image={typeof property.images[0] === 'string' ? property.images[0] : property.images[0]?.url}\n        type=\"product\"\n        locale=\"ko\"\n        alternateLocales={['en', 'ko', 'zh', 'ja']}\n        price={property.price.toString()}\n        currency=\"PHP\"\n        availability={seoConfig.availability}\n        publishedTime={property.createdAt}\n        modifiedTime={property.updatedAt || property.createdAt}\n      />\n      \n      <BreadcrumbSchema items={breadcrumbs} />\n      \n      <RealEstateSchema\n        name={property.title}\n        description={property.description}\n        url={`${process.env.NEXT_PUBLIC_SITE_URL}/property/${property.id}`}\n        image={property.images.map(img => typeof img === 'string' ? img : img.url)}\n        address={{\n          streetAddress: property.address,\n          addressLocality: property.region.charAt(0).toUpperCase() + property.region.slice(1),\n          addressRegion: property.region === 'manila' ? 'NCR' : property.region.charAt(0).toUpperCase() + property.region.slice(1),\n          postalCode: property.region === 'manila' ? '1000' : '6000',\n          addressCountry: 'Philippines'\n        }}\n        floorSize={{\n          value: property.area,\n          unitCode: 'SQM'\n        }}\n        numberOfRooms={property.bedrooms}\n        numberOfBathroomsTotal={property.bathrooms}\n        amenityFeature={property.amenities}\n        offers={{\n          price: property.price.toString(),\n          priceCurrency: 'PHP',\n          availability: 'InStock',\n          validFrom: new Date().toISOString(),\n          priceSpecification: {\n            price: property.price.toString(),\n            priceCurrency: 'PHP',\n            unitCode: 'MON'\n          }\n        }}\n      />\n\n      {/* 리뷰 스키마 - TODO: 실제 리뷰 데이터 연동 */}\n      {/* {reviews.map((review) => (\n        <ReviewSchema\n          key={review.id}\n          itemReviewed={{\n            name: property.title,\n            description: property.description,\n            image: typeof property.images[0] === 'string' ? property.images[0] : property.images[0]?.url\n          }}\n          author={typeof review.author === 'string' ? review.author : (review.author?.name || 'Anonymous')}\n          reviewRating={{\n            ratingValue: review.rating,\n            bestRating: 5,\n            worstRating: 1\n          }}\n          reviewBody={review.comment}\n          datePublished={review.date}\n        />\n      ))} */}\n\n      <FacebookLayout>\n        {/* 페이스북 스타일 이미지 갤러리 */}\n        <div className=\"bg-black\">\n          <div className=\"max-w-7xl mx-auto relative\">\n            <div className=\"relative h-[60vh] md:h-[70vh]\">\n              <Image\n                src={(() => {\n                  const currentImage = property.images[currentImageIndex];\n                  return currentImage ? (typeof currentImage === 'string' ? currentImage : currentImage.url) : '';\n                })()}\n                alt={property.title}\n                fill\n                className=\"object-contain\"\n              />\n              \n              {/* 이미지 네비게이션 */}\n              {currentImageIndex > 0 && (\n                <button\n                  onClick={() => setCurrentImageIndex(currentImageIndex - 1)}\n                  className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/80 backdrop-blur-sm p-2 rounded-full hover:bg-white transition-colors\"\n                >\n                  <ChevronLeft className=\"h-6 w-6\" />\n                </button>\n              )}\n              {currentImageIndex < property.images.length - 1 && (\n                <button\n                  onClick={() => setCurrentImageIndex(currentImageIndex + 1)}\n                  className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/80 backdrop-blur-sm p-2 rounded-full hover:bg-white transition-colors\"\n                >\n                  <ChevronRight className=\"h-6 w-6\" />\n                </button>\n              )}\n\n              {/* 상단 액션 버튼 */}\n              <div className=\"absolute top-4 right-4 flex gap-2\">\n                <button\n                  onClick={handleLike}\n                  className={`p-2 rounded-full backdrop-blur-sm transition-colors ${\n                    isLiked ? 'bg-red-500 text-white' : 'bg-white/80 text-gray-700 hover:bg-white'\n                  }`}\n                >\n                  <Heart className=\"h-5 w-5\" fill={isLiked ? 'currentColor' : 'none'} />\n                </button>\n                <button\n                  onClick={handleShare}\n                  className=\"p-2 bg-white/80 backdrop-blur-sm text-gray-700 rounded-full hover:bg-white transition-colors\"\n                >\n                  <Share2 className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              {/* 이미지 카운터 */}\n              <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-black/60 text-white px-3 py-1 rounded-full text-sm\">\n                {currentImageIndex + 1} / {property.images.length}\n              </div>\n            </div>\n\n            {/* 썸네일 스트립 */}\n            <div className=\"bg-white border-t\">\n              <div className=\"flex gap-1 p-2 overflow-x-auto\">\n                {property.images.map((image, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentImageIndex(index)}\n                    className={`relative h-16 w-16 flex-shrink-0 rounded overflow-hidden ${\n                      currentImageIndex === index ? 'ring-2 ring-[#1877f2]' : ''\n                    }`}\n                  >\n                    <Image\n                      src={typeof image === 'string' ? image : image?.url}\n                      alt={`썸네일 ${index + 1}`}\n                      fill\n                      className=\"object-cover\"\n                    />\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 메인 컨텐츠 */}\n        <div className=\"bg-gray-100 min-h-screen\">\n          <div className=\"max-w-7xl mx-auto px-4 py-6\">{/* 메인 컨텐츠 그리드 */}\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* 왼쪽: 매물 정보 */}\n              <div className=\"lg:col-span-2 space-y-4\">\n                {/* 가격 및 기본 정보 카드 */}\n                <div className=\"bg-white rounded-lg shadow-sm\">\n                  <div className=\"p-6\">\n                    <div className=\"flex items-start justify-between mb-4\">\n                      <div>\n                        <h1 className=\"text-2xl font-semibold text-gray-900 mb-2\">{property.title}</h1>\n                        <div className=\"text-3xl font-bold text-[#1877f2] mb-2\">\n                          {formatPrice(property.price)}\n                          <span className=\"text-base font-normal text-gray-600\"> / 월</span>\n                        </div>\n                        <div className=\"flex items-center gap-3 text-gray-600 text-sm\">\n                          <span className=\"flex items-center\">\n                            <Bed className=\"h-4 w-4 mr-1\" />\n                            {property.bedrooms}개 침실\n                          </span>\n                          <span className=\"text-gray-300\">·</span>\n                          <span className=\"flex items-center\">\n                            <Bath className=\"h-4 w-4 mr-1\" />\n                            {property.bathrooms}개 욕실\n                          </span>\n                          <span className=\"text-gray-300\">·</span>\n                          <span className=\"flex items-center\">\n                            <Maximize className=\"h-4 w-4 mr-1\" />\n                            {property.area}㎡\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* 위치 정보 */}\n                    <div className=\"border-t pt-4\">\n                      <div className=\"flex items-start gap-3\">\n                        <MapPin className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n                        <div>\n                          <p className=\"text-gray-900 font-medium\">{property.address}</p>\n                          <p className=\"text-gray-600 text-sm\">\n                            {property.region === 'manila' ? '마닐라' : '세부'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* 메타 정보 */}\n                    <div className=\"flex items-center gap-4 mt-4 text-sm text-gray-600\">\n                      <span className=\"flex items-center\">\n                        <Clock className=\"h-4 w-4 mr-1\" />\n                        1시간 전 게시됨\n                      </span>\n                      <span className=\"flex items-center\">\n                        <Eye className=\"h-4 w-4 mr-1\" />\n                        조회 152회\n                      </span>\n                      <span className=\"flex items-center\">\n                        <Tag className=\"h-4 w-4 mr-1\" />\n                        {property.type === 'condo' ? '콘도' : property.type === 'house' ? '주택' : '아파트'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 상세 설명 */}\n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <h2 className=\"text-lg font-semibold mb-3\">상세 설명</h2>\n                  <p className=\"text-gray-700 leading-relaxed whitespace-pre-line\">{property.description}</p>\n                </div>\n\n                {/* 편의시설 */}\n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <h2 className=\"text-lg font-semibold mb-3\">편의시설</h2>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {property.amenities.map((amenity, index) => (\n                      <div key={index} className=\"flex items-center text-gray-700\">\n                        <div className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center mr-3\">\n                          <Check className=\"h-4 w-4 text-[#1877f2]\" />\n                        </div>\n                        <span className=\"text-sm\">{amenity}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* 추가 정보 */}\n                <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                  <h2 className=\"text-lg font-semibold mb-3\">추가 정보</h2>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-gray-600 text-sm\">매물 유형</p>\n                      <p className=\"font-medium\">{property.type === 'condo' ? '콘도' : property.type === 'house' ? '주택' : '아파트'}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-gray-600 text-sm\">가구 포함</p>\n                      <p className=\"font-medium\">{property.furnished ? '포함' : '미포함'}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-gray-600 text-sm\">월세</p>\n                      <p className=\"font-medium\">{formatPrice(property.price)}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-gray-600 text-sm\">면적</p>\n                      <p className=\"font-medium\">{property.area}㎡</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* 오른쪽: 판매자 정보 (고정) */}\n              <div className=\"lg:col-span-1\">\n                <div className=\"sticky top-20\">\n                  {/* 판매자 정보 카드 */}\n                  <div className=\"bg-white rounded-lg shadow-sm p-6 mb-4\">\n                    <h3 className=\"text-lg font-semibold mb-4\">판매자 정보</h3>\n                    \n                    {/* 판매자 프로필 */}\n                    <div className=\"flex items-center mb-4\">\n                      <div className=\"w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center mr-3\">\n                        <Users className=\"h-6 w-6 text-gray-600\" />\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">\n                          {property.contact.contactName || '부동산 에이전트'}\n                        </p>\n                        <p className=\"text-sm text-gray-600\">인증된 판매자</p>\n                      </div>\n                    </div>\n\n                    {/* 액션 버튼 */}\n                    <button\n                      onClick={handleMessageClick}\n                      className=\"w-full bg-[#1877f2] text-white py-3 rounded-lg font-medium hover:bg-[#1664d8] transition-colors flex items-center justify-center gap-2 mb-3\"\n                    >\n                      <MessageCircle className=\"h-5 w-5\" />\n                      메시지 보내기\n                    </button>\n\n                    {/* 추가 액션 */}\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={handleLike}\n                        className={`flex-1 py-2 rounded-lg font-medium transition-colors flex items-center justify-center gap-2 ${\n                          isLiked \n                            ? 'bg-red-50 text-red-600 border border-red-200' \n                            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                        }`}\n                      >\n                        <Heart className=\"h-4 w-4\" fill={isLiked ? 'currentColor' : 'none'} />\n                        저장\n                      </button>\n                      <button\n                        onClick={handleShare}\n                        className=\"flex-1 bg-gray-100 text-gray-700 py-2 rounded-lg font-medium hover:bg-gray-200 transition-colors flex items-center justify-center gap-2\"\n                      >\n                        <Share2 className=\"h-4 w-4\" />\n                        공유\n                      </button>\n                    </div>\n\n                    {/* 판매자 평가 */}\n                    <div className=\"mt-4 pt-4 border-t\">\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-gray-600\">응답률</span>\n                        <span className=\"font-medium\">98%</span>\n                      </div>\n                      <div className=\"flex items-center justify-between text-sm mt-2\">\n                        <span className=\"text-gray-600\">평균 응답 시간</span>\n                        <span className=\"font-medium\">1시간 이내</span>\n                      </div>\n                      <div className=\"flex items-center justify-between text-sm mt-2\">\n                        <span className=\"text-gray-600\">등록된 매물</span>\n                        <span className=\"font-medium\">15개</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 신고하기 */}\n                  <div className=\"bg-white rounded-lg shadow-sm p-4\">\n                    <button className=\"text-gray-600 text-sm hover:text-gray-900 flex items-center justify-center w-full\">\n                      <MoreHorizontal className=\"h-4 w-4 mr-2\" />\n                      이 매물 신고하기\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 비슷한 매물 섹션 */}\n            <div className=\"mt-12\">\n              <h2 className=\"text-xl font-semibold mb-6\">비슷한 매물</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                {mockProperties.slice(0, 4).map((similarProperty) => (\n                  <div\n                    key={similarProperty.id}\n                    className=\"bg-white rounded-lg shadow-sm overflow-hidden cursor-pointer hover:shadow-md transition-shadow\"\n                    onClick={() => router.push(`/property/${similarProperty.id}`)}\n                  >\n                    <div className=\"relative h-48\">\n                      <Image\n                        src={typeof similarProperty.images[0] === 'string' ? similarProperty.images[0] : similarProperty.images[0]?.url}\n                        alt={similarProperty.title}\n                        fill\n                        className=\"object-cover\"\n                      />\n                    </div>\n                    <div className=\"p-4\">\n                      <h3 className=\"font-medium text-gray-900 mb-1 line-clamp-1\">\n                        {similarProperty.title}\n                      </h3>\n                      <p className=\"text-[#1877f2] font-bold text-lg mb-1\">\n                        {formatPrice(similarProperty.price)}\n                      </p>\n                      <p className=\"text-gray-600 text-sm line-clamp-1\">\n                        {similarProperty.address}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </FacebookLayout>\n    </>\n  );\n}\n\n// Server-side rendering for SEO\nexport async function getServerSideProps({ params }: { params: { id: string } }) {\n  const propertyId = params.id;\n  \n  // 모든 매물에서 해당 ID 찾기\n  const allProperties = [...mockProperties, ...mockMonthlyStayProperties];\n  const property = allProperties.find(p => p.id === propertyId);\n  \n  if (!property) {\n    return {\n      notFound: true,\n    };\n  }\n\n  return {\n    props: {\n      property,\n    },\n  };\n}","/mnt/c/Users/peter/Documents/jig/src/pages/robots.txt.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/roommates.tsx",["962"],[],"import React, { useState } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport SendMessageButton from '@/components/messages/SendMessageButton';\n\ninterface RoommatePost {\n  id: string;\n  title: string;\n  description: string;\n  location: string;\n  priceRange: string;\n  roomType: string;\n  preferences: string[];\n  author: {\n    name: string;\n    email: string;\n    image?: string;\n  };\n  createdAt: string;\n  images: string[];\n}\n\nconst SAMPLE_POSTS: RoommatePost[] = [\n  {\n    id: '1',\n    title: 'BGC 콘도 룸메이트 구합니다 - 외국인 환영',\n    description: '보니파시오 글로벌 시티 내 고급 콘도에서 함께 지낼 룸메이트를 찾고 있습니다. 깨끗하고 조용한 환경을 선호합니다.',\n    location: 'BGC, Taguig City',\n    priceRange: '₱15,000 - ₱20,000',\n    roomType: '개인실',\n    preferences: ['금연', '애완동물 불가', '외국인 환영', '직장인'],\n    author: {\n      name: '김민수',\n      email: 'minsu.kim@example.com',\n      image: '/images/avatars/user1.jpg'\n    },\n    createdAt: '2024-01-15T10:30:00Z',\n    images: ['/images/roommate1.jpg', '/images/roommate1-2.jpg']\n  },\n  {\n    id: '2',\n    title: 'Makati CBD 근처 룸메이트 찾습니다',\n    description: '직장인 대상으로 깨끗하고 편안한 공간을 공유할 룸메이트를 찾고 있습니다. 대중교통 접근 용이.',\n    location: 'Makati City',\n    priceRange: '₱12,000 - ₱18,000',\n    roomType: '공용실',\n    preferences: ['금연', '조용한 환경', '직장인', '국제적'],\n    author: {\n      name: 'Sarah Johnson',\n      email: 'sarah.johnson@example.com'\n    },\n    createdAt: '2024-01-14T14:20:00Z',\n    images: ['/images/roommate2.jpg']\n  },\n  {\n    id: '3',\n    title: 'Ortigas 고급 콘도 룸메이트 모집',\n    description: '쇼핑몰과 비즈니스 센터가 가까운 콘도에서 함께 지낼 룸메이트를 찾습니다. 국제적인 환경을 원합니다.',\n    location: 'Ortigas Center, Pasig',\n    priceRange: '₱10,000 - ₱16,000',\n    roomType: '개인실',\n    preferences: ['애완동물 환영', '다국적', '사교적', '학생/직장인'],\n    author: {\n      name: 'Tanaka Hiroshi',\n      email: 'hiroshi.tanaka@example.com'\n    },\n    createdAt: '2024-01-13T09:15:00Z',\n    images: ['/images/roommate3.jpg']\n  }\n];\n\nexport default function RoommatesPage() {\n  const { data: session } = useSession();\n  const router = useRouter();\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const [selectedPriceRange, setSelectedPriceRange] = useState('');\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    description: '',\n    location: '',\n    priceRange: '',\n    roomType: '',\n    preferences: [] as string[]\n  });\n\n  const filteredPosts = SAMPLE_POSTS.filter(post => {\n    return (\n      (!selectedLocation || post.location.toLowerCase().includes(selectedLocation.toLowerCase())) &&\n      (!selectedPriceRange || post.priceRange === selectedPriceRange) &&\n      (!selectedRoomType || post.roomType === selectedRoomType)\n    );\n  });\n\n  const handlePostSubmit = () => {\n    if (!session) {\n      alert('로그인이 필요합니다.');\n      router.push('/login');\n      return;\n    }\n\n    if (!newPost.title || !newPost.description || !newPost.location) {\n      alert('필수 정보를 모두 입력해주세요.');\n      return;\n    }\n\n    alert('룸메이트 구하기 게시글이 등록되었습니다!');\n    setShowPostForm(false);\n    setNewPost({\n      title: '',\n      description: '',\n      location: '',\n      priceRange: '',\n      roomType: '',\n      preferences: []\n    });\n  };\n\n  const togglePreference = (preference: string) => {\n    setNewPost(prev => ({\n      ...prev,\n      preferences: prev.preferences.includes(preference)\n        ? prev.preferences.filter(p => p !== preference)\n        : [...prev.preferences, preference]\n    }));\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"룸메이트 구하기 - 필직\"\n        description=\"필리핀에서 함께 지낼 룸메이트를 찾아보세요. 다양한 지역과 조건의 룸메이트 매칭 서비스\"\n        keywords=\"룸메이트, 하우스메이트, 필리핀, 마닐라, 세부, 쉐어하우스, 필직\"\n      />\n\n      <FacebookLayout>\n        <div className=\"max-w-6xl mx-auto\">\n          {/* 헤더 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">룸메이트 구하기</h1>\n                <p className=\"text-gray-600\">필리핀에서 함께 지낼 룸메이트를 찾아보세요</p>\n              </div>\n              <button\n                onClick={() => setShowPostForm(true)}\n                className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                </svg>\n                <span>룸메이트 구하기 글쓰기</span>\n              </button>\n            </div>\n          </div>\n\n          {/* 필터 */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <h2 className=\"text-lg font-semibold mb-4\">필터</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">지역</label>\n                <select\n                  value={selectedLocation}\n                  onChange={(e) => setSelectedLocation(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체 지역</option>\n                  <option value=\"BGC\">BGC</option>\n                  <option value=\"Makati\">Makati</option>\n                  <option value=\"Ortigas\">Ortigas</option>\n                  <option value=\"Alabang\">Alabang</option>\n                  <option value=\"Quezon City\">Quezon City</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">가격대</label>\n                <select\n                  value={selectedPriceRange}\n                  onChange={(e) => setSelectedPriceRange(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체 가격대</option>\n                  <option value=\"₱10,000 - ₱16,000\">₱10,000 - ₱16,000</option>\n                  <option value=\"₱12,000 - ₱18,000\">₱12,000 - ₱18,000</option>\n                  <option value=\"₱15,000 - ₱20,000\">₱15,000 - ₱20,000</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">방 타입</label>\n                <select\n                  value={selectedRoomType}\n                  onChange={(e) => setSelectedRoomType(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">전체 타입</option>\n                  <option value=\"개인실\">개인실</option>\n                  <option value=\"공용실\">공용실</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {/* 룸메이트 목록 */}\n          <div className=\"space-y-6\">\n            {filteredPosts.map((post) => (\n              <div key={post.id} className=\"bg-white rounded-lg shadow-sm p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">{post.title}</h3>\n                    <p className=\"text-gray-600 mb-4\">{post.description}</p>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-5 h-5 text-gray-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <span className=\"text-sm text-gray-700\">{post.location}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-5 h-5 text-gray-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clipRule=\"evenodd\" />\n                        </svg>\n                        <span className=\"text-sm text-gray-700\">{post.priceRange}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-5 h-5 text-gray-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                        </svg>\n                        <span className=\"text-sm text-gray-700\">{post.roomType}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-2\">선호 조건</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {post.preferences.map((pref, index) => (\n                          <span\n                            key={index}\n                            className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\"\n                          >\n                            {pref}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        {post.author.image ? (\n                          <img\n                            src={post.author.image}\n                            alt={post.author.name}\n                            className=\"w-8 h-8 rounded-full\"\n                          />\n                        ) : (\n                          <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                            <svg className=\"w-5 h-5 text-gray-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </div>\n                        )}\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-800\">{post.author.name}</p>\n                          <p className=\"text-xs text-gray-500\">\n                            {new Date(post.createdAt).toLocaleDateString('ko-KR')}\n                          </p>\n                        </div>\n                      </div>\n                      <SendMessageButton\n                        recipientEmail={post.author.email}\n                        recipientName={post.author.name}\n                        className=\"text-sm\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* 게시글 작성 모달 */}\n          {showPostForm && (\n            <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n              <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-medium text-gray-800\">룸메이트 구하기 글쓰기</h3>\n                  <button\n                    onClick={() => setShowPostForm(false)}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </button>\n                </div>\n\n                <form onSubmit={(e) => { e.preventDefault(); handlePostSubmit(); }} className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">제목 *</label>\n                    <input\n                      type=\"text\"\n                      value={newPost.title}\n                      onChange={(e) => setNewPost(prev => ({ ...prev, title: e.target.value }))}\n                      required\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"룸메이트 구하기 제목을 입력하세요\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">상세 설명 *</label>\n                    <textarea\n                      value={newPost.description}\n                      onChange={(e) => setNewPost(prev => ({ ...prev, description: e.target.value }))}\n                      required\n                      rows={4}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder=\"룸메이트 조건, 생활 스타일, 기타 정보를 입력하세요\"\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">지역 *</label>\n                      <input\n                        type=\"text\"\n                        value={newPost.location}\n                        onChange={(e) => setNewPost(prev => ({ ...prev, location: e.target.value }))}\n                        required\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"예: BGC, Makati City\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">가격대</label>\n                      <input\n                        type=\"text\"\n                        value={newPost.priceRange}\n                        onChange={(e) => setNewPost(prev => ({ ...prev, priceRange: e.target.value }))}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"예: ₱15,000 - ₱20,000\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">방 타입</label>\n                    <select\n                      value={newPost.roomType}\n                      onChange={(e) => setNewPost(prev => ({ ...prev, roomType: e.target.value }))}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                      <option value=\"\">선택하세요</option>\n                      <option value=\"개인실\">개인실</option>\n                      <option value=\"공용실\">공용실</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">선호 조건</label>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {['금연', '애완동물 불가', '애완동물 환영', '외국인 환영', '직장인', '학생', '조용한 환경', '사교적'].map((pref) => (\n                        <label key={pref} className=\"flex items-center space-x-2\">\n                          <input\n                            type=\"checkbox\"\n                            checked={newPost.preferences.includes(pref)}\n                            onChange={() => togglePreference(pref)}\n                            className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">{pref}</span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPostForm(false)}\n                      className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                    >\n                      취소\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                    >\n                      게시글 등록\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/sitemap.xml.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/tl.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/travel.tsx",["963","964","965"],[],"import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport FacebookLayout from '@/components/layout/FacebookLayout';\nimport SEOHead from '@/components/seo/SEOHead';\nimport { \n  MapPin, \n  Calendar, \n  Camera,\n  Star,\n  Users,\n  Clock,\n  Heart,\n  Share2,\n  Eye,\n  Search,\n  Filter,\n  Plane,\n  Car,\n  Hotel,\n  Utensils,\n  Mountain,\n  Waves,\n  Sun,\n  Palmtree,\n  Navigation,\n  Info,\n  Shield,\n  Smartphone,\n  CreditCard,\n  Globe,\n  Phone\n} from 'lucide-react';\n\ninterface TravelDestination {\n  id: string;\n  name: string;\n  nameKo: string;\n  nameTl: string;\n  region: string;\n  description: string;\n  descriptionKo: string;\n  descriptionTl: string;\n  highlights: string[];\n  image: string;\n  images: string[];\n  category: string;\n  rating: number;\n  reviewCount: number;\n  bestTimeToVisit: string;\n  estimatedCost: {\n    budget: number;\n    midrange: number;\n    luxury: number;\n  };\n  duration: string;\n  difficulty: 'easy' | 'moderate' | 'challenging';\n  activities: string[];\n  coordinates: {\n    lat: number;\n    lng: number;\n  };\n  isFeatured: boolean;\n  isPopular: boolean;\n}\n\ninterface TravelGuide {\n  id: string;\n  title: string;\n  titleKo: string;\n  titleTl: string;\n  category: string;\n  description: string;\n  content: string;\n  author: string;\n  publishDate: string;\n  readTime: string;\n  image: string;\n  tags: string[];\n  views: number;\n  likes: number;\n}\n\nexport default function TravelPage() {\n  const router = useRouter();\n  const currentLanguage = 'ko';\n  const [activeCategory, setActiveCategory] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [destinations, setDestinations] = useState<TravelDestination[]>([]);\n  const [travelGuides, setTravelGuides] = useState<TravelGuide[]>([]);\n  const [loading, setLoading] = useState(true);\n\n\n  // 데이터 가져오기\n  useEffect(() => {\n    const fetchTravelData = async () => {\n      setLoading(true);\n      try {\n        const [destinationsRes, guidesRes] = await Promise.all([\n          fetch('/api/travel/destinations'),\n          fetch('/api/travel/guides')\n        ]);\n\n        const destinationsResult = await destinationsRes.json();\n        const guidesResult = await guidesRes.json();\n\n        if (destinationsResult.success) {\n          setDestinations(destinationsResult.data);\n        }\n        if (guidesResult.success) {\n          console.log('Travel guides data:', guidesResult.data);\n          setTravelGuides(guidesResult.data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch travel data:', error);\n        // 폴백 데이터 사용\n        setDestinations(sampleDestinations);\n        setTravelGuides(sampleGuides);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTravelData();\n  }, []);\n\n  const categories = [\n    { id: 'all', name: '전체', nameEn: 'All', nameTl: 'Lahat', icon: '🏝️' },\n    { id: 'beaches', name: '해변', nameEn: 'Beaches', nameTl: 'Mga Beach', icon: '🏖️' },\n    { id: 'mountains', name: '산', nameEn: 'Mountains', nameTl: 'Mga Bundok', icon: '⛰️' },\n    { id: 'cities', name: '도시', nameEn: 'Cities', nameTl: 'Mga Lungsod', icon: '🏙️' },\n    { id: 'islands', name: '섬', nameEn: 'Islands', nameTl: 'Mga Isla', icon: '🏝️' },\n    { id: 'heritage', name: '문화유산', nameEn: 'Heritage', nameTl: 'Pamana', icon: '🏛️' },\n    { id: 'adventure', name: '어드벤처', nameEn: 'Adventure', nameTl: 'Adventure', icon: '🎒' }\n  ];\n\n  const regions = [\n    { id: 'luzon', name: '루손', nameEn: 'Luzon', nameTl: 'Luzon' },\n    { id: 'visayas', name: '비사야', nameEn: 'Visayas', nameTl: 'Visayas' },\n    { id: 'mindanao', name: '민다나오', nameEn: 'Mindanao', nameTl: 'Mindanao' }\n  ];\n\n  // 샘플 데이터 (API 연동 실패 시 폴백)\n  const sampleDestinations: TravelDestination[] = [\n    {\n      id: '1',\n      name: 'Boracay Island',\n      nameKo: '보라카이 섬',\n      nameTl: 'Boracay Island',\n      region: 'Visayas',\n      description: 'World-famous white sand beach paradise with crystal clear waters and vibrant nightlife.',\n      descriptionKo: '수정처럼 맑은 바다와 활기찬 밤문화를 자랑하는 세계적으로 유명한 화이트 샌드 비치 천국입니다.',\n      descriptionTl: 'World-famous white sand beach paradise na may crystal clear waters at vibrant nightlife.',\n      highlights: ['White Beach', 'Water Sports', 'Sunset Sailing', 'D\\'Mall Shopping'],\n      image: 'https://images.unsplash.com/photo-1544551763-46a013bb70d5?w=500&h=300&fit=crop',\n      images: [\n        'https://images.unsplash.com/photo-1544551763-46a013bb70d5?w=500&h=300&fit=crop',\n        'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=500&h=300&fit=crop'\n      ],\n      category: 'beaches',\n      rating: 4.8,\n      reviewCount: 1245,\n      bestTimeToVisit: 'November to April',\n      estimatedCost: {\n        budget: 2500,\n        midrange: 5000,\n        luxury: 12000\n      },\n      duration: '3-5 days',\n      difficulty: 'easy',\n      activities: ['Swimming', 'Diving', 'Parasailing', 'Island Hopping', 'Nightlife'],\n      coordinates: { lat: 11.9674, lng: 121.9248 },\n      isFeatured: true,\n      isPopular: true\n    },\n    {\n      id: '2',\n      name: 'Baguio City',\n      nameKo: '바기오 시티',\n      nameTl: 'Baguio City',\n      region: 'Luzon',\n      description: 'Summer capital of the Philippines known for its cool climate, pine trees, and beautiful parks.',\n      descriptionKo: '시원한 기후, 소나무, 아름다운 공원으로 유명한 필리핀의 여름 수도입니다.',\n      descriptionTl: 'Summer capital ng Pilipinas na kilala sa cool climate, pine trees, at magagandang parks.',\n      highlights: ['Burnham Park', 'Session Road', 'Mines View Park', 'Camp John Hay'],\n      image: 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=500&h=300&fit=crop',\n      images: [\n        'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=500&h=300&fit=crop',\n        'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=500&h=300&fit=crop'\n      ],\n      category: 'cities',\n      rating: 4.5,\n      reviewCount: 892,\n      bestTimeToVisit: 'December to February',\n      estimatedCost: {\n        budget: 1500,\n        midrange: 3000,\n        luxury: 7000\n      },\n      duration: '2-3 days',\n      difficulty: 'easy',\n      activities: ['Sightseeing', 'Shopping', 'Photography', 'Hiking', 'Food Tours'],\n      coordinates: { lat: 16.4023, lng: 120.5960 },\n      isFeatured: false,\n      isPopular: true\n    },\n    {\n      id: '3',\n      name: 'Palawan',\n      nameKo: '팔라완',\n      nameTl: 'Palawan',\n      region: 'Luzon',\n      description: 'Last frontier of the Philippines with pristine beaches, underground rivers, and diverse wildlife.',\n      descriptionKo: '깨끗한 해변, 지하강, 다양한 야생동물을 보유한 필리핀의 마지막 개척지입니다.',\n      descriptionTl: 'Last frontier ng Pilipinas na may pristine beaches, underground rivers, at diverse wildlife.',\n      highlights: ['El Nido', 'Coron', 'Puerto Princesa Underground River', 'Big Lagoon'],\n      image: 'https://images.unsplash.com/photo-1539650116574-75c0c6d73f6e?w=500&h=300&fit=crop',\n      images: [\n        'https://images.unsplash.com/photo-1539650116574-75c0c6d73f6e?w=500&h=300&fit=crop',\n        'https://images.unsplash.com/photo-1544273813-6e8b31b8e0bb?w=500&h=300&fit=crop'\n      ],\n      category: 'islands',\n      rating: 4.9,\n      reviewCount: 2156,\n      bestTimeToVisit: 'November to May',\n      estimatedCost: {\n        budget: 4000,\n        midrange: 8000,\n        luxury: 18000\n      },\n      duration: '5-7 days',\n      difficulty: 'moderate',\n      activities: ['Island Hopping', 'Diving', 'Snorkeling', 'Cave Exploration', 'Wildlife Watching'],\n      coordinates: { lat: 9.8349, lng: 118.7384 },\n      isFeatured: true,\n      isPopular: true\n    }\n  ];\n\n  const sampleGuides: TravelGuide[] = [\n    {\n      id: '1',\n      title: 'Ultimate Philippines Travel Guide for First-Time Visitors',\n      titleKo: '첫 방문자를 위한 완벽한 필리핀 여행 가이드',\n      titleTl: 'Ultimate Philippines Travel Guide para sa First-Time Visitors',\n      category: 'planning',\n      description: 'Everything you need to know for your first trip to the Philippines',\n      content: 'Comprehensive guide covering visa requirements, best destinations, budget planning, and cultural tips.',\n      author: 'Travel Philippines Team',\n      publishDate: '2024-01-15',\n      readTime: '12 min',\n      image: 'https://images.unsplash.com/photo-1551632811-561732d1e306?w=400&h=250&fit=crop',\n      tags: ['planning', 'first-time', 'visa', 'budget'],\n      views: 15420,\n      likes: 1245\n    },\n    {\n      id: '2',\n      title: 'Best Food to Try in the Philippines',\n      titleKo: '필리핀에서 꼭 먹어봐야 할 최고의 음식들',\n      titleTl: 'Best Food na Dapat Tikman sa Pilipinas',\n      category: 'food',\n      description: 'A culinary journey through Philippine cuisine',\n      content: 'Discover the must-try dishes, street food, and regional specialties across the Philippines.',\n      author: 'FoodiesPH',\n      publishDate: '2024-01-10',\n      readTime: '8 min',\n      image: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=400&h=250&fit=crop',\n      tags: ['food', 'cuisine', 'street-food', 'local'],\n      views: 9876,\n      likes: 892\n    }\n  ];\n\n  const filteredDestinations = destinations.filter(destination => {\n    if (activeCategory !== 'all' && destination.category !== activeCategory) return false;\n    if (selectedRegion && destination.region !== selectedRegion) return false;\n    if (searchTerm && !destination.name.toLowerCase().includes(searchTerm.toLowerCase())) return false;\n    return true;\n  });\n\n  const getCategoryName = (category: any) => {\n    return category.name;\n  };\n\n  const getDestinationName = (destination: TravelDestination) => {\n    return destination.nameKo;\n  };\n\n  const getDestinationDescription = (destination: TravelDestination) => {\n    return destination.descriptionKo;\n  };\n\n  return (\n    <>\n      <SEOHead\n        title=\"Travel Philippines - Discover Amazing Destinations\"\n        description=\"Explore the beautiful Philippines with our comprehensive travel guide. Discover beaches, mountains, cities, and cultural heritage sites.\"\n        keywords=\"travel, philippines, tourism, destinations, beaches, mountains, islands\"\n        type=\"website\"\n        locale={currentLanguage}\n      />\n\n      <FacebookLayout section=\"travel\">\n          <main className=\"py-8\">\n            {/* Hero Section */}\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n                ✈️ 필리핀 여행\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-6\">\n                7,640개의 아름다운 섬으로 이루어진 열대 천국을 발견하세요\n              </p>\n\n              {/* Quick Stats */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 max-w-4xl mx-auto mb-8\">\n                <div className=\"bg-white rounded-xl p-4 shadow-sm\">\n                  <div className=\"text-2xl font-bold text-blue-600\">7,640</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '섬들' : (currentLanguage as string) === 'tl' ? 'Mga Isla' : 'Islands'}\n                  </div>\n                </div>\n                <div className=\"bg-white rounded-xl p-4 shadow-sm\">\n                  <div className=\"text-2xl font-bold text-green-600\">300+</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '관광지' : (currentLanguage as string) === 'tl' ? 'Destinations' : 'Destinations'}\n                  </div>\n                </div>\n                <div className=\"bg-white rounded-xl p-4 shadow-sm\">\n                  <div className=\"text-2xl font-bold text-purple-600\">25°C</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '평균 기온' : (currentLanguage as string) === 'tl' ? 'Avg Temp' : 'Avg Temp'}\n                  </div>\n                </div>\n                <div className=\"bg-white rounded-xl p-4 shadow-sm\">\n                  <div className=\"text-2xl font-bold text-orange-600\">181</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {(currentLanguage as string) === 'ko' ? '언어' : (currentLanguage as string) === 'tl' ? 'Languages' : 'Languages'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Category Navigation */}\n            <div className=\"mb-8\">\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {categories.map((category) => (\n                    <button\n                      key={category.id}\n                      onClick={() => setActiveCategory(category.id)}\n                      className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${\n                        activeCategory === category.id\n                          ? 'bg-blue-600 text-white'\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <span>{category.icon}</span>\n                      <span className=\"text-sm font-medium\">\n                        {getCategoryName(category)}\n                      </span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Search and Filter */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder={\n                      (currentLanguage as string) === 'ko' ? '여행지나 활동을 검색하세요...' :\n                      (currentLanguage as string) === 'tl' ? 'Maghanap ng destination o activity...' :\n                      'Search destinations or activities...'\n                    }\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <select\n                  value={selectedRegion}\n                  onChange={(e) => setSelectedRegion(e.target.value)}\n                  className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"\">\n                    {(currentLanguage as string) === 'ko' ? '모든 지역' : (currentLanguage as string) === 'tl' ? 'Lahat ng Region' : 'All Regions'}\n                  </option>\n                  {regions.map(region => (\n                    <option key={region.id} value={region.nameEn}>\n                      {(currentLanguage as string) === 'ko' ? region.name : region.nameEn}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {/* Featured Destinations */}\n            <div className=\"mb-12\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">\n                🌟 {(currentLanguage as string) === 'ko' ? '추천 여행지' :\n                    (currentLanguage as string) === 'tl' ? 'Featured Destinations' :\n                    'Featured Destinations'}\n              </h2>\n              \n              {loading ? (\n                <div className=\"flex justify-center py-12\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {filteredDestinations.slice(0, 6).map((destination) => (\n                    <div \n                      key={destination.id} \n                      className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\"\n                      onClick={() => router.push(`/travel/destination/${destination.id}`)}\n                    >\n                      <div className=\"relative h-48\">\n                        <img \n                          src={destination.image} \n                          alt={getDestinationName(destination)}\n                          className=\"w-full h-full object-cover\"\n                        />\n                        <div className=\"absolute top-3 right-3 flex space-x-2\">\n                          {destination.isFeatured && (\n                            <span className=\"px-2 py-1 bg-yellow-500 text-white text-xs font-medium rounded\">\n                              Featured\n                            </span>\n                          )}\n                          {destination.isPopular && (\n                            <span className=\"px-2 py-1 bg-red-500 text-white text-xs font-medium rounded\">\n                              Popular\n                            </span>\n                          )}\n                        </div>\n                        <div className=\"absolute bottom-3 left-3\">\n                          <span className=\"px-2 py-1 bg-black bg-opacity-70 text-white text-sm rounded\">\n                            {destination.region}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"p-6\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                          {getDestinationName(destination)}\n                        </h3>\n                        <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">\n                          {getDestinationDescription(destination)}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between mb-4\">\n                          <div className=\"flex items-center space-x-1\">\n                            <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\n                            <span className=\"text-sm font-medium\">{destination.rating}</span>\n                            <span className=\"text-sm text-gray-500\">({destination.reviewCount})</span>\n                          </div>\n                          <span className=\"text-sm text-gray-500\">{destination.duration}</span>\n                        </div>\n\n                        <div className=\"flex items-center justify-between mb-4\">\n                          <div className=\"text-sm\">\n                            <span className=\"text-gray-500\">From </span>\n                            <span className=\"font-semibold text-blue-600\">₱{destination.estimatedCost.budget.toLocaleString()}</span>\n                          </div>\n                          <span className={`px-2 py-1 rounded text-xs font-medium ${\n                            destination.difficulty === 'easy' ? 'bg-green-100 text-green-800' :\n                            destination.difficulty === 'moderate' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-red-100 text-red-800'\n                          }`}>\n                            {destination.difficulty}\n                          </span>\n                        </div>\n\n                        <div className=\"flex flex-wrap gap-1 mb-4\">\n                          {destination.activities.slice(0, 3).map((activity, index) => (\n                            <span \n                              key={index}\n                              className=\"px-2 py-1 bg-blue-50 text-blue-700 text-xs rounded\"\n                            >\n                              {activity}\n                            </span>\n                          ))}\n                        </div>\n\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-1 text-sm text-gray-500\">\n                            <Calendar className=\"h-4 w-4\" />\n                            <span>{destination.bestTimeToVisit}</span>\n                          </div>\n                          <div className=\"flex space-x-2\">\n                            <button className=\"p-2 text-gray-400 hover:text-red-500 transition-colors\">\n                              <Heart className=\"h-4 w-4\" />\n                            </button>\n                            <button className=\"p-2 text-gray-400 hover:text-blue-500 transition-colors\">\n                              <Share2 className=\"h-4 w-4\" />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Travel Guides */}\n            <div className=\"mb-12\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">\n                📚 {(currentLanguage as string) === 'ko' ? '여행 가이드' :\n                    (currentLanguage as string) === 'tl' ? 'Travel Guides' :\n                    'Travel Guides'}\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {travelGuides.map((guide) => (\n                  <div \n                    key={guide.id} \n                    className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\"\n                    onClick={() => router.push(`/travel/guide/${guide.id}`)}\n                  >\n                    <div className=\"flex\">\n                      <div className=\"w-1/3\">\n                        <img \n                          src={guide.image} \n                          alt={guide.title}\n                          className=\"w-full h-32 object-cover\"\n                        />\n                      </div>\n                      <div className=\"flex-1 p-4\">\n                        <h3 className=\"font-semibold text-gray-900 mb-2 line-clamp-2\">\n                          {(currentLanguage as string) === 'ko' ? guide.titleKo : guide.title}\n                        </h3>\n                        <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">\n                          {guide.description}\n                        </p>\n                        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                          <div className=\"flex items-center space-x-3\">\n                            <span>{guide.author}</span>\n                            <span>{guide.readTime} read</span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <Eye className=\"h-3 w-3\" />\n                            <span>{guide.views.toLocaleString()}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Travel Tips */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n              <div className=\"bg-blue-50 rounded-xl p-6 text-center\">\n                <div className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Plane className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {(currentLanguage as string) === 'ko' ? '항공편' : 'Flights'}\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '최저가 항공료 검색' : 'Find best flight deals'}\n                </p>\n              </div>\n\n              <div className=\"bg-green-50 rounded-xl p-6 text-center\">\n                <div className=\"w-12 h-12 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Hotel className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {(currentLanguage as string) === 'ko' ? '숙소' : 'Accommodation'}\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '완벽한 숙소 찾기' : 'Book perfect stays'}\n                </p>\n              </div>\n\n              <div className=\"bg-orange-50 rounded-xl p-6 text-center\">\n                <div className=\"w-12 h-12 bg-orange-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Car className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {(currentLanguage as string) === 'ko' ? '교통' : 'Transportation'}\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '렌터카 및 투어' : 'Rent cars & tours'}\n                </p>\n              </div>\n\n              <div className=\"bg-purple-50 rounded-xl p-6 text-center\">\n                <div className=\"w-12 h-12 bg-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Utensils className=\"h-6 w-6 text-white\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {(currentLanguage as string) === 'ko' ? '음식' : 'Food'}\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  {(currentLanguage as string) === 'ko' ? '현지 맛집 발견' : 'Discover local cuisine'}\n                </p>\n              </div>\n            </div>\n\n            {/* Travel Essentials */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-8 text-white mb-12\">\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-2xl font-bold mb-2\">\n                  {(currentLanguage as string) === 'ko' ? '🎒 여행 필수 정보' :\n                   (currentLanguage as string) === 'tl' ? '🎒 Travel Essentials' :\n                   '🎒 Travel Essentials'}\n                </h2>\n                <p className=\"text-blue-100\">\n                  {(currentLanguage as string) === 'ko' ? '필리핀 여행을 위한 필수 준비 사항들' :\n                   (currentLanguage as string) === 'tl' ? 'Essential preparations para sa Philippines travel' :\n                   'Essential preparations for your Philippines trip'}\n                </p>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Shield className=\"h-8 w-8 text-white\" />\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">\n                    {(currentLanguage as string) === 'ko' ? '비자 요구사항' : 'Visa Requirements'}\n                  </h3>\n                  <p className=\"text-sm text-blue-100\">\n                    {(currentLanguage as string) === 'ko' ? '대부분의 국가는 30일 무비자 입국 가능' : 'Visa-free entry for most countries up to 30 days'}\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <CreditCard className=\"h-8 w-8 text-white\" />\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">\n                    {(currentLanguage as string) === 'ko' ? '화폐' : 'Currency'}\n                  </h3>\n                  <p className=\"text-sm text-blue-100\">\n                    {(currentLanguage as string) === 'ko' ? 'PHP (페소) - 현금 사용 권장' : 'PHP (Peso) - Cash is recommended'}\n                  </p>\n                </div>\n\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Smartphone className=\"h-8 w-8 text-white\" />\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">\n                    {(currentLanguage as string) === 'ko' ? '통신' : 'Connectivity'}\n                  </h3>\n                  <p className=\"text-sm text-blue-100\">\n                    {(currentLanguage as string) === 'ko' ? '공항에서 SIM 카드 구매 가능' : 'SIM cards available at airports'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Emergency Contacts */}\n            <div className=\"bg-red-50 border border-red-200 rounded-xl p-6\">\n              <h3 className=\"text-lg font-semibold text-red-900 mb-2\">\n                🚨 {(currentLanguage as string) === 'ko' ? '긴급 연락처' :\n                    (currentLanguage as string) === 'tl' ? 'Emergency Contacts' :\n                    'Emergency Contacts'}\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <div className=\"font-medium text-red-800\">Emergency Hotline</div>\n                  <div className=\"text-red-700\">911</div>\n                </div>\n                <div>\n                  <div className=\"font-medium text-red-800\">Tourist Hotline</div>\n                  <div className=\"text-red-700\">(02) 8524-1728</div>\n                </div>\n                <div>\n                  <div className=\"font-medium text-red-800\">DOT Emergency</div>\n                  <div className=\"text-red-700\">(02) 8459-5200</div>\n                </div>\n              </div>\n            </div>\n          </main>\n      </FacebookLayout>\n    </>\n  );\n}","/mnt/c/Users/peter/Documents/jig/src/pages/weather.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/pages/zh.tsx",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/admin.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/api.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/lucide-react.d.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/marketplace.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/menu.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/next-auth.d.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/property.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/template.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/types/user.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/utils/generateIcon.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/utils/logger.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/utils/resetMenu.ts",[],[],"/mnt/c/Users/peter/Documents/jig/src/utils/seo.ts",[],[],{"ruleId":"966","severity":1,"message":"967","line":530,"column":27,"nodeType":"968","messageId":"969","suggestions":"970"},{"ruleId":"966","severity":1,"message":"967","line":530,"column":29,"nodeType":"968","messageId":"969","suggestions":"971"},{"ruleId":"966","severity":1,"message":"967","line":530,"column":46,"nodeType":"968","messageId":"969","suggestions":"972"},{"ruleId":"966","severity":1,"message":"967","line":530,"column":55,"nodeType":"968","messageId":"969","suggestions":"973"},{"ruleId":"974","severity":1,"message":"975","line":38,"column":15,"nodeType":"976","endLine":38,"endColumn":90},{"ruleId":"974","severity":1,"message":"977","line":41,"column":15,"nodeType":"976","endLine":41,"endColumn":100},{"ruleId":"974","severity":1,"message":"978","line":44,"column":15,"nodeType":"976","endLine":44,"endColumn":95},{"ruleId":"974","severity":1,"message":"975","line":99,"column":13,"nodeType":"976","endLine":99,"endColumn":86},{"ruleId":"974","severity":1,"message":"977","line":102,"column":13,"nodeType":"976","endLine":102,"endColumn":96},{"ruleId":"974","severity":1,"message":"978","line":105,"column":13,"nodeType":"976","endLine":105,"endColumn":91},{"ruleId":"979","severity":1,"message":"980","line":127,"column":21,"nodeType":"976","endLine":131,"endColumn":23},{"ruleId":"979","severity":1,"message":"980","line":150,"column":27,"nodeType":"976","endLine":154,"endColumn":29},{"ruleId":"979","severity":1,"message":"980","line":497,"column":21,"nodeType":"976","endLine":501,"endColumn":23},{"ruleId":"966","severity":1,"message":"981","line":616,"column":25,"nodeType":"968","messageId":"969","suggestions":"982"},{"ruleId":"966","severity":1,"message":"981","line":617,"column":40,"nodeType":"968","messageId":"969","suggestions":"983"},{"ruleId":"966","severity":1,"message":"981","line":620,"column":25,"nodeType":"968","messageId":"969","suggestions":"984"},{"ruleId":"985","severity":1,"message":"986","line":80,"column":6,"nodeType":"987","endLine":80,"endColumn":28,"suggestions":"988"},{"ruleId":"985","severity":1,"message":"989","line":40,"column":6,"nodeType":"987","endLine":40,"endColumn":17,"suggestions":"990"},{"ruleId":"985","severity":1,"message":"991","line":187,"column":6,"nodeType":"987","endLine":187,"endColumn":8,"suggestions":"992"},{"ruleId":"966","severity":1,"message":"967","line":373,"column":62,"nodeType":"968","messageId":"969","suggestions":"993"},{"ruleId":"966","severity":1,"message":"967","line":373,"column":81,"nodeType":"968","messageId":"969","suggestions":"994"},{"ruleId":"974","severity":1,"message":"995","line":197,"column":17,"nodeType":"976","endLine":197,"endColumn":77},{"ruleId":"979","severity":1,"message":"980","line":117,"column":27,"nodeType":"976","endLine":121,"endColumn":29},{"ruleId":"966","severity":1,"message":"981","line":173,"column":46,"nodeType":"968","messageId":"969","suggestions":"996"},{"ruleId":"966","severity":1,"message":"981","line":173,"column":63,"nodeType":"968","messageId":"969","suggestions":"997"},{"ruleId":"966","severity":1,"message":"981","line":173,"column":72,"nodeType":"968","messageId":"969","suggestions":"998"},{"ruleId":"966","severity":1,"message":"981","line":173,"column":80,"nodeType":"968","messageId":"969","suggestions":"999"},{"ruleId":"979","severity":1,"message":"980","line":117,"column":19,"nodeType":"976","endLine":117,"endColumn":127},{"ruleId":"966","severity":1,"message":"967","line":307,"column":19,"nodeType":"968","messageId":"969","suggestions":"1000"},{"ruleId":"966","severity":1,"message":"967","line":307,"column":32,"nodeType":"968","messageId":"969","suggestions":"1001"},{"ruleId":"979","severity":1,"message":"980","line":436,"column":29,"nodeType":"976","endLine":440,"endColumn":31},{"ruleId":"979","severity":1,"message":"980","line":769,"column":23,"nodeType":"976","endLine":773,"endColumn":25},{"ruleId":"966","severity":1,"message":"967","line":93,"column":34,"nodeType":"968","messageId":"969","suggestions":"1002"},{"ruleId":"966","severity":1,"message":"967","line":93,"column":53,"nodeType":"968","messageId":"969","suggestions":"1003"},{"ruleId":"974","severity":1,"message":"1004","line":231,"column":19,"nodeType":"976","endLine":234,"endColumn":20},{"ruleId":"974","severity":1,"message":"1005","line":238,"column":19,"nodeType":"976","endLine":241,"endColumn":20},{"ruleId":"985","severity":1,"message":"1006","line":88,"column":6,"nodeType":"987","endLine":88,"endColumn":68,"suggestions":"1007"},{"ruleId":"979","severity":1,"message":"980","line":293,"column":33,"nodeType":"976","endLine":297,"endColumn":35},{"ruleId":"985","severity":1,"message":"1008","line":28,"column":6,"nodeType":"987","endLine":28,"endColumn":13,"suggestions":"1009"},{"ruleId":"985","severity":1,"message":"1010","line":140,"column":6,"nodeType":"987","endLine":140,"endColumn":36,"suggestions":"1011"},{"ruleId":"966","severity":1,"message":"981","line":206,"column":60,"nodeType":"968","messageId":"969","suggestions":"1012"},{"ruleId":"1013","severity":1,"message":"1014","line":268,"column":17,"nodeType":"976","endLine":268,"endColumn":67},{"ruleId":"979","severity":1,"message":"980","line":279,"column":21,"nodeType":"976","endLine":283,"endColumn":23},{"ruleId":"985","severity":1,"message":"1015","line":90,"column":6,"nodeType":"987","endLine":90,"endColumn":10,"suggestions":"1016"},{"ruleId":"979","severity":1,"message":"980","line":253,"column":17,"nodeType":"976","endLine":257,"endColumn":19},{"ruleId":"979","severity":1,"message":"980","line":304,"column":19,"nodeType":"976","endLine":309,"endColumn":21},{"ruleId":"979","severity":1,"message":"980","line":374,"column":17,"nodeType":"976","endLine":378,"endColumn":19},{"ruleId":"979","severity":1,"message":"980","line":441,"column":27,"nodeType":"976","endLine":445,"endColumn":29},{"ruleId":"985","severity":1,"message":"1017","line":84,"column":6,"nodeType":"987","endLine":84,"endColumn":35,"suggestions":"1018"},{"ruleId":"979","severity":1,"message":"980","line":212,"column":25,"nodeType":"976","endLine":216,"endColumn":27},{"ruleId":"979","severity":1,"message":"980","line":262,"column":27,"nodeType":"976","endLine":267,"endColumn":29},{"ruleId":"966","severity":1,"message":"981","line":166,"column":50,"nodeType":"968","messageId":"969","suggestions":"1019"},{"ruleId":"985","severity":1,"message":"1020","line":136,"column":6,"nodeType":"987","endLine":136,"endColumn":18,"suggestions":"1021"},{"ruleId":"985","severity":1,"message":"1020","line":146,"column":6,"nodeType":"987","endLine":146,"endColumn":8,"suggestions":"1022"},{"ruleId":"979","severity":1,"message":"980","line":320,"column":27,"nodeType":"976","endLine":324,"endColumn":29},{"ruleId":"985","severity":1,"message":"1023","line":111,"column":9,"nodeType":"1024","endLine":238,"endColumn":4},{"ruleId":"979","severity":1,"message":"980","line":605,"column":25,"nodeType":"976","endLine":609,"endColumn":27},{"ruleId":"985","severity":1,"message":"1025","line":134,"column":6,"nodeType":"987","endLine":134,"endColumn":15,"suggestions":"1026"},{"ruleId":"979","severity":1,"message":"980","line":287,"column":27,"nodeType":"976","endLine":291,"endColumn":29},{"ruleId":"979","severity":1,"message":"980","line":361,"column":29,"nodeType":"976","endLine":361,"endColumn":129},{"ruleId":"979","severity":1,"message":"980","line":415,"column":25,"nodeType":"976","endLine":419,"endColumn":27},{"ruleId":"985","severity":1,"message":"1027","line":75,"column":9,"nodeType":"1024","endLine":112,"endColumn":4},{"ruleId":"979","severity":1,"message":"980","line":525,"column":23,"nodeType":"976","endLine":529,"endColumn":25},{"ruleId":"985","severity":1,"message":"1028","line":114,"column":9,"nodeType":"1024","endLine":145,"endColumn":4},{"ruleId":"979","severity":1,"message":"980","line":430,"column":25,"nodeType":"976","endLine":434,"endColumn":27},{"ruleId":"979","severity":1,"message":"980","line":301,"column":29,"nodeType":"976","endLine":305,"endColumn":31},{"ruleId":"979","severity":1,"message":"980","line":156,"column":19,"nodeType":"976","endLine":160,"endColumn":21},{"ruleId":"979","severity":1,"message":"980","line":311,"column":29,"nodeType":"976","endLine":315,"endColumn":31},{"ruleId":"979","severity":1,"message":"980","line":344,"column":27,"nodeType":"976","endLine":348,"endColumn":29},{"ruleId":"979","severity":1,"message":"980","line":118,"column":19,"nodeType":"976","endLine":122,"endColumn":21},{"ruleId":"979","severity":1,"message":"980","line":87,"column":19,"nodeType":"976","endLine":91,"endColumn":21},{"ruleId":"966","severity":1,"message":"981","line":448,"column":20,"nodeType":"968","messageId":"969","suggestions":"1029"},{"ruleId":"966","severity":1,"message":"981","line":448,"column":36,"nodeType":"968","messageId":"969","suggestions":"1030"},{"ruleId":"1031","severity":1,"message":"1032","line":50,"column":21,"nodeType":"1033","endLine":50,"endColumn":28},{"ruleId":"979","severity":1,"message":"980","line":255,"column":27,"nodeType":"976","endLine":259,"endColumn":29},{"ruleId":"985","severity":1,"message":"1034","line":125,"column":6,"nodeType":"987","endLine":125,"endColumn":8,"suggestions":"1035"},{"ruleId":"979","severity":1,"message":"980","line":423,"column":25,"nodeType":"976","endLine":427,"endColumn":27},{"ruleId":"979","severity":1,"message":"980","line":527,"column":25,"nodeType":"976","endLine":531,"endColumn":27},"react/no-unescaped-entities","`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","JSXText","unescapedEntityAlts",["1036","1037","1038","1039"],["1040","1041","1042","1043"],["1044","1045","1046","1047"],["1048","1049","1050","1051"],"@next/next/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","JSXOpeningElement","Do not use an `<a>` element to navigate to `/properties/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/about/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.",["1052","1053","1054","1055"],["1056","1057","1058","1059"],["1060","1061","1062","1063"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'showBrowserNotification'. Either include it or remove the dependency array.","ArrayExpression",["1064"],"React Hook useEffect has a missing dependency: 'fetchDashboardData'. Either include it or remove the dependency array.",["1065"],"React Hook useEffect has a missing dependency: 'loadMenuItems'. Either include it or remove the dependency array.",["1066"],["1067","1068","1069","1070"],["1071","1072","1073","1074"],"Do not use an `<a>` element to navigate to `/admin/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages",["1075","1076","1077","1078"],["1079","1080","1081","1082"],["1083","1084","1085","1086"],["1087","1088","1089","1090"],["1091","1092","1093","1094"],["1095","1096","1097","1098"],["1099","1100","1101","1102"],["1103","1104","1105","1106"],"Do not use an `<a>` element to navigate to `/auth/login/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","Do not use an `<a>` element to navigate to `/admin/oauth-status/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["1107"],"React Hook useEffect has a missing dependency: 'verifyEmailToken'. Either include it or remove the dependency array.",["1108"],"React Hook useMemo has a missing dependency: 'blogPosts'. Either include it or remove the dependency array.",["1109"],["1110","1111","1112","1113"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'fetchPostDetail'. Either include it or remove the dependency array.",["1114"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["1115"],["1116","1117","1118","1119"],"React Hook useMemo has a missing dependency: 'faqData'. Either include it or remove the dependency array.",["1120"],["1121"],"The 'sampleDrivers' array makes the dependencies of useMemo Hook (at line 250) change on every render. To fix this, wrap the initialization of 'sampleDrivers' in its own useMemo() Hook.","VariableDeclarator","React Hook useMemo has a missing dependency: 'allProperties'. Either include it or remove the dependency array.",["1122"],"The 'sampleJobs' array makes the dependencies of useMemo Hook (at line 124) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'sampleJobs' in its own useMemo() Hook.","The 'sampleItems' array makes the dependencies of useMemo Hook (at line 158) change on every render. To fix this, wrap the initialization of 'sampleItems' in its own useMemo() Hook.",["1123","1124","1125","1126"],["1127","1128","1129","1130"],"react-hooks/rules-of-hooks","React Hook \"useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render.","Identifier","React Hook useEffect has missing dependencies: 'sampleDestinations' and 'sampleGuides'. Either include them or remove the dependency array.",["1131"],{"messageId":"1132","data":"1133","fix":"1134","desc":"1135"},{"messageId":"1132","data":"1136","fix":"1137","desc":"1138"},{"messageId":"1132","data":"1139","fix":"1140","desc":"1141"},{"messageId":"1132","data":"1142","fix":"1143","desc":"1144"},{"messageId":"1132","data":"1145","fix":"1146","desc":"1135"},{"messageId":"1132","data":"1147","fix":"1148","desc":"1138"},{"messageId":"1132","data":"1149","fix":"1150","desc":"1141"},{"messageId":"1132","data":"1151","fix":"1152","desc":"1144"},{"messageId":"1132","data":"1153","fix":"1154","desc":"1135"},{"messageId":"1132","data":"1155","fix":"1156","desc":"1138"},{"messageId":"1132","data":"1157","fix":"1158","desc":"1141"},{"messageId":"1132","data":"1159","fix":"1160","desc":"1144"},{"messageId":"1132","data":"1161","fix":"1162","desc":"1135"},{"messageId":"1132","data":"1163","fix":"1164","desc":"1138"},{"messageId":"1132","data":"1165","fix":"1166","desc":"1141"},{"messageId":"1132","data":"1167","fix":"1168","desc":"1144"},{"messageId":"1132","data":"1169","fix":"1170","desc":"1171"},{"messageId":"1132","data":"1172","fix":"1173","desc":"1174"},{"messageId":"1132","data":"1175","fix":"1176","desc":"1177"},{"messageId":"1132","data":"1178","fix":"1179","desc":"1180"},{"messageId":"1132","data":"1181","fix":"1182","desc":"1171"},{"messageId":"1132","data":"1183","fix":"1184","desc":"1174"},{"messageId":"1132","data":"1185","fix":"1186","desc":"1177"},{"messageId":"1132","data":"1187","fix":"1188","desc":"1180"},{"messageId":"1132","data":"1189","fix":"1190","desc":"1171"},{"messageId":"1132","data":"1191","fix":"1192","desc":"1174"},{"messageId":"1132","data":"1193","fix":"1194","desc":"1177"},{"messageId":"1132","data":"1195","fix":"1196","desc":"1180"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"messageId":"1132","data":"1203","fix":"1204","desc":"1135"},{"messageId":"1132","data":"1205","fix":"1206","desc":"1138"},{"messageId":"1132","data":"1207","fix":"1208","desc":"1141"},{"messageId":"1132","data":"1209","fix":"1210","desc":"1144"},{"messageId":"1132","data":"1211","fix":"1212","desc":"1135"},{"messageId":"1132","data":"1213","fix":"1214","desc":"1138"},{"messageId":"1132","data":"1215","fix":"1216","desc":"1141"},{"messageId":"1132","data":"1217","fix":"1218","desc":"1144"},{"messageId":"1132","data":"1219","fix":"1220","desc":"1171"},{"messageId":"1132","data":"1221","fix":"1222","desc":"1174"},{"messageId":"1132","data":"1223","fix":"1224","desc":"1177"},{"messageId":"1132","data":"1225","fix":"1226","desc":"1180"},{"messageId":"1132","data":"1227","fix":"1228","desc":"1171"},{"messageId":"1132","data":"1229","fix":"1230","desc":"1174"},{"messageId":"1132","data":"1231","fix":"1232","desc":"1177"},{"messageId":"1132","data":"1233","fix":"1234","desc":"1180"},{"messageId":"1132","data":"1235","fix":"1236","desc":"1171"},{"messageId":"1132","data":"1237","fix":"1238","desc":"1174"},{"messageId":"1132","data":"1239","fix":"1240","desc":"1177"},{"messageId":"1132","data":"1241","fix":"1242","desc":"1180"},{"messageId":"1132","data":"1243","fix":"1244","desc":"1171"},{"messageId":"1132","data":"1245","fix":"1246","desc":"1174"},{"messageId":"1132","data":"1247","fix":"1248","desc":"1177"},{"messageId":"1132","data":"1249","fix":"1250","desc":"1180"},{"messageId":"1132","data":"1251","fix":"1252","desc":"1135"},{"messageId":"1132","data":"1253","fix":"1254","desc":"1138"},{"messageId":"1132","data":"1255","fix":"1256","desc":"1141"},{"messageId":"1132","data":"1257","fix":"1258","desc":"1144"},{"messageId":"1132","data":"1259","fix":"1260","desc":"1135"},{"messageId":"1132","data":"1261","fix":"1262","desc":"1138"},{"messageId":"1132","data":"1263","fix":"1264","desc":"1141"},{"messageId":"1132","data":"1265","fix":"1266","desc":"1144"},{"messageId":"1132","data":"1267","fix":"1268","desc":"1135"},{"messageId":"1132","data":"1269","fix":"1270","desc":"1138"},{"messageId":"1132","data":"1271","fix":"1272","desc":"1141"},{"messageId":"1132","data":"1273","fix":"1274","desc":"1144"},{"messageId":"1132","data":"1275","fix":"1276","desc":"1135"},{"messageId":"1132","data":"1277","fix":"1278","desc":"1138"},{"messageId":"1132","data":"1279","fix":"1280","desc":"1141"},{"messageId":"1132","data":"1281","fix":"1282","desc":"1144"},{"desc":"1283","fix":"1284"},{"desc":"1285","fix":"1286"},{"desc":"1287","fix":"1288"},{"messageId":"1132","data":"1289","fix":"1290","desc":"1171"},{"messageId":"1132","data":"1291","fix":"1292","desc":"1174"},{"messageId":"1132","data":"1293","fix":"1294","desc":"1177"},{"messageId":"1132","data":"1295","fix":"1296","desc":"1180"},{"desc":"1297","fix":"1298"},{"desc":"1299","fix":"1300"},{"messageId":"1132","data":"1301","fix":"1302","desc":"1171"},{"messageId":"1132","data":"1303","fix":"1304","desc":"1174"},{"messageId":"1132","data":"1305","fix":"1306","desc":"1177"},{"messageId":"1132","data":"1307","fix":"1308","desc":"1180"},{"desc":"1309","fix":"1310"},{"desc":"1311","fix":"1312"},{"desc":"1313","fix":"1314"},{"messageId":"1132","data":"1315","fix":"1316","desc":"1171"},{"messageId":"1132","data":"1317","fix":"1318","desc":"1174"},{"messageId":"1132","data":"1319","fix":"1320","desc":"1177"},{"messageId":"1132","data":"1321","fix":"1322","desc":"1180"},{"messageId":"1132","data":"1323","fix":"1324","desc":"1171"},{"messageId":"1132","data":"1325","fix":"1326","desc":"1174"},{"messageId":"1132","data":"1327","fix":"1328","desc":"1177"},{"messageId":"1132","data":"1329","fix":"1330","desc":"1180"},{"desc":"1331","fix":"1332"},"replaceWithAlt",{"alt":"1333"},{"range":"1334","text":"1335"},"Replace with `&quot;`.",{"alt":"1336"},{"range":"1337","text":"1338"},"Replace with `&ldquo;`.",{"alt":"1339"},{"range":"1340","text":"1341"},"Replace with `&#34;`.",{"alt":"1342"},{"range":"1343","text":"1344"},"Replace with `&rdquo;`.",{"alt":"1333"},{"range":"1345","text":"1346"},{"alt":"1336"},{"range":"1347","text":"1348"},{"alt":"1339"},{"range":"1349","text":"1350"},{"alt":"1342"},{"range":"1351","text":"1352"},{"alt":"1333"},{"range":"1353","text":"1354"},{"alt":"1336"},{"range":"1355","text":"1356"},{"alt":"1339"},{"range":"1357","text":"1358"},{"alt":"1342"},{"range":"1359","text":"1360"},{"alt":"1333"},{"range":"1361","text":"1362"},{"alt":"1336"},{"range":"1363","text":"1364"},{"alt":"1339"},{"range":"1365","text":"1366"},{"alt":"1342"},{"range":"1367","text":"1368"},{"alt":"1369"},{"range":"1370","text":"1371"},"Replace with `&apos;`.",{"alt":"1372"},{"range":"1373","text":"1374"},"Replace with `&lsquo;`.",{"alt":"1375"},{"range":"1376","text":"1377"},"Replace with `&#39;`.",{"alt":"1378"},{"range":"1379","text":"1380"},"Replace with `&rsquo;`.",{"alt":"1369"},{"range":"1381","text":"1382"},{"alt":"1372"},{"range":"1383","text":"1384"},{"alt":"1375"},{"range":"1385","text":"1386"},{"alt":"1378"},{"range":"1387","text":"1388"},{"alt":"1369"},{"range":"1389","text":"1390"},{"alt":"1372"},{"range":"1391","text":"1392"},{"alt":"1375"},{"range":"1393","text":"1394"},{"alt":"1378"},{"range":"1395","text":"1396"},"Update the dependencies array to be: [service, autoRefresh, showBrowserNotification]",{"range":"1397","text":"1398"},"Update the dependencies array to be: [dateRange, fetchDashboardData]",{"range":"1399","text":"1400"},"Update the dependencies array to be: [loadMenuItems]",{"range":"1401","text":"1402"},{"alt":"1333"},{"range":"1403","text":"1333"},{"alt":"1336"},{"range":"1404","text":"1336"},{"alt":"1339"},{"range":"1405","text":"1339"},{"alt":"1342"},{"range":"1406","text":"1342"},{"alt":"1333"},{"range":"1407","text":"1333"},{"alt":"1336"},{"range":"1408","text":"1336"},{"alt":"1339"},{"range":"1409","text":"1339"},{"alt":"1342"},{"range":"1410","text":"1342"},{"alt":"1369"},{"range":"1411","text":"1412"},{"alt":"1372"},{"range":"1413","text":"1414"},{"alt":"1375"},{"range":"1415","text":"1416"},{"alt":"1378"},{"range":"1417","text":"1418"},{"alt":"1369"},{"range":"1419","text":"1420"},{"alt":"1372"},{"range":"1421","text":"1422"},{"alt":"1375"},{"range":"1423","text":"1424"},{"alt":"1378"},{"range":"1425","text":"1426"},{"alt":"1369"},{"range":"1427","text":"1428"},{"alt":"1372"},{"range":"1429","text":"1430"},{"alt":"1375"},{"range":"1431","text":"1432"},{"alt":"1378"},{"range":"1433","text":"1434"},{"alt":"1369"},{"range":"1435","text":"1436"},{"alt":"1372"},{"range":"1437","text":"1438"},{"alt":"1375"},{"range":"1439","text":"1440"},{"alt":"1378"},{"range":"1441","text":"1442"},{"alt":"1333"},{"range":"1443","text":"1444"},{"alt":"1336"},{"range":"1445","text":"1446"},{"alt":"1339"},{"range":"1447","text":"1448"},{"alt":"1342"},{"range":"1449","text":"1450"},{"alt":"1333"},{"range":"1451","text":"1452"},{"alt":"1336"},{"range":"1453","text":"1454"},{"alt":"1339"},{"range":"1455","text":"1456"},{"alt":"1342"},{"range":"1457","text":"1458"},{"alt":"1333"},{"range":"1459","text":"1460"},{"alt":"1336"},{"range":"1461","text":"1462"},{"alt":"1339"},{"range":"1463","text":"1464"},{"alt":"1342"},{"range":"1465","text":"1466"},{"alt":"1333"},{"range":"1467","text":"1468"},{"alt":"1336"},{"range":"1469","text":"1470"},{"alt":"1339"},{"range":"1471","text":"1472"},{"alt":"1342"},{"range":"1473","text":"1474"},"Update the dependencies array to be: [currentPage, searchTerm, filterProvider, filterRole, session, fetchUsers]",{"range":"1475","text":"1476"},"Update the dependencies array to be: [token, verifyEmailToken]",{"range":"1477","text":"1478"},"Update the dependencies array to be: [blogPosts, selectedCategory, searchTerm]",{"range":"1479","text":"1480"},{"alt":"1369"},{"range":"1481","text":"1482"},{"alt":"1372"},{"range":"1483","text":"1484"},{"alt":"1375"},{"range":"1485","text":"1486"},{"alt":"1378"},{"range":"1487","text":"1488"},"Update the dependencies array to be: [fetchPostDetail, id]",{"range":"1489","text":"1490"},"Update the dependencies array to be: [activeCategory, currentPage, fetchPosts]",{"range":"1491","text":"1492"},{"alt":"1369"},{"range":"1493","text":"1494"},{"alt":"1372"},{"range":"1495","text":"1496"},{"alt":"1375"},{"range":"1497","text":"1498"},{"alt":"1378"},{"range":"1499","text":"1500"},"Update the dependencies array to be: [faqData, searchTerm]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [faqData]",{"range":"1503","text":"1504"},"Update the dependencies array to be: [allProperties, filters.bathrooms, filters.bedrooms, filters.duration, filters.furnished, filters.maxPrice, filters.minPrice, filters.nearTouristSpots, filters.region, filters.sortBy, filters.travelerFriendly, filters.type, filters.wifiSpeed]",{"range":"1505","text":"1506"},{"alt":"1369"},{"range":"1507","text":"1508"},{"alt":"1372"},{"range":"1509","text":"1510"},{"alt":"1375"},{"range":"1511","text":"1512"},{"alt":"1378"},{"range":"1513","text":"1514"},{"alt":"1369"},{"range":"1515","text":"1516"},{"alt":"1372"},{"range":"1517","text":"1518"},{"alt":"1375"},{"range":"1519","text":"1520"},{"alt":"1378"},{"range":"1521","text":"1522"},"Update the dependencies array to be: [sampleDestinations, sampleGuides]",{"range":"1523","text":"1524"},"&quot;",[18332,18412],"\n                  내부 페이지는 &quot;/\"로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ","&ldquo;",[18332,18412],"\n                  내부 페이지는 &ldquo;/\"로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ","&#34;",[18332,18412],"\n                  내부 페이지는 &#34;/\"로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ","&rdquo;",[18332,18412],"\n                  내부 페이지는 &rdquo;/\"로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/&quot;로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/&ldquo;로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/&#34;로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/&rdquo;로 시작하고, 외부 사이트는 \"https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 &quot;https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 &ldquo;https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 &#34;https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 &rdquo;https://\"로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 \"https://&quot;로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 \"https://&ldquo;로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 \"https://&#34;로 시작합니다\n                ",[18332,18412],"\n                  내부 페이지는 \"/\"로 시작하고, 외부 사이트는 \"https://&rdquo;로 시작합니다\n                ","&apos;",[22580,22638],"• We&apos;ll contact you if any information needs clarification","&lsquo;",[22580,22638],"• We&lsquo;ll contact you if any information needs clarification","&#39;",[22580,22638],"• We&#39;ll contact you if any information needs clarification","&rsquo;",[22580,22638],"• We&rsquo;ll contact you if any information needs clarification",[22664,22722],"• Once approved, we&apos;ll discuss rental strategy and pricing",[22664,22722],"• Once approved, we&lsquo;ll discuss rental strategy and pricing",[22664,22722],"• Once approved, we&#39;ll discuss rental strategy and pricing",[22664,22722],"• Once approved, we&rsquo;ll discuss rental strategy and pricing",[22911,22967],"• We&apos;ll handle all tenant inquiries and arrange showings",[22911,22967],"• We&lsquo;ll handle all tenant inquiries and arrange showings",[22911,22967],"• We&#39;ll handle all tenant inquiries and arrange showings",[22911,22967],"• We&rsquo;ll handle all tenant inquiries and arrange showings",[2131,2153],"[service, autoRefresh, showBrowserNotification]",[1003,1014],"[dateRange, fetchDashboardData]",[4323,4325],"[loadMenuItems]",[15626,15627],[15626,15627],[15626,15627],[15626,15627],[15645,15646],[15645,15646],[15645,15646],[15645,15646],[6374,6490],"\n                addLoginAttempt(&#123;email: &apos;test@example.com', name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: &lsquo;test@example.com', name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: &#39;test@example.com', name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: &rsquo;test@example.com', name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com&apos;, name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com&lsquo;, name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com&#39;, name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com&rsquo;, name: '테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: &apos;테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: &lsquo;테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: &#39;테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: &rsquo;테스트 사용자', image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: '테스트 사용자&apos;, image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: '테스트 사용자&lsquo;, image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: '테스트 사용자&#39;, image: null&#125;)\n              ",[6374,6490],"\n                addLoginAttempt(&#123;email: 'test@example.com', name: '테스트 사용자&rsquo;, image: null&#125;)\n              ",[10638,10658],"\n                  &quot;",[10638,10658],"\n                  &ldquo;",[10638,10658],"\n                  &#34;",[10638,10658],"\n                  &rdquo;",[10670,10682],"&quot;에 대한 검색결과: ",[10670,10682],"&ldquo;에 대한 검색결과: ",[10670,10682],"&#34;에 대한 검색결과: ",[10670,10682],"&rdquo;에 대한 검색결과: ",[3350,3436],"\n                      이 단계를 건너뛰면 &quot;401 invalid_client\" 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 &ldquo;401 invalid_client\" 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 &#34;401 invalid_client\" 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 &rdquo;401 invalid_client\" 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 \"401 invalid_client&quot; 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 \"401 invalid_client&ldquo; 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 \"401 invalid_client&#34; 오류가 발생합니다!\n                    ",[3350,3436],"\n                      이 단계를 건너뛰면 \"401 invalid_client&rdquo; 오류가 발생합니다!\n                    ",[2149,2211],"[currentPage, searchTerm, filterProvider, filterRole, session, fetchUsers]",[785,792],"[token, verifyEmailToken]",[5094,5124],"[blogPosts, selectedCategory, searchTerm]",[7205,7398],"\n                Expert tips, city guides, and insights for foreigners living in the Philippines. \n                From apartment hunting to local culture, we&apos;ve got you covered.\n              ",[7205,7398],"\n                Expert tips, city guides, and insights for foreigners living in the Philippines. \n                From apartment hunting to local culture, we&lsquo;ve got you covered.\n              ",[7205,7398],"\n                Expert tips, city guides, and insights for foreigners living in the Philippines. \n                From apartment hunting to local culture, we&#39;ve got you covered.\n              ",[7205,7398],"\n                Expert tips, city guides, and insights for foreigners living in the Philippines. \n                From apartment hunting to local culture, we&rsquo;ve got you covered.\n              ",[1845,1849],"[fetchPostDetail, id]",[2004,2033],"[activeCategory, currentPage, fetchPosts]",[5021,5124],"\n                  Thank you for contacting us. We&apos;ll get back to you within 24 hours.\n                ",[5021,5124],"\n                  Thank you for contacting us. We&lsquo;ll get back to you within 24 hours.\n                ",[5021,5124],"\n                  Thank you for contacting us. We&#39;ll get back to you within 24 hours.\n                ",[5021,5124],"\n                  Thank you for contacting us. We&rsquo;ll get back to you within 24 hours.\n                ",[7621,7633],"[faqData, searchTerm]",[7861,7863],"[faqData]",[4689,4698],"[allProperties, filters.bathrooms, filters.bedrooms, filters.duration, filters.furnished, filters.maxPrice, filters.minPrice, filters.nearTouristSpots, filters.region, filters.sortBy, filters.travelerFriendly, filters.type, filters.wifiSpeed]",[17182,17249],"\n                Can&apos;t Find What You're Looking For?\n              ",[17182,17249],"\n                Can&lsquo;t Find What You're Looking For?\n              ",[17182,17249],"\n                Can&#39;t Find What You're Looking For?\n              ",[17182,17249],"\n                Can&rsquo;t Find What You're Looking For?\n              ",[17182,17249],"\n                Can't Find What You&apos;re Looking For?\n              ",[17182,17249],"\n                Can't Find What You&lsquo;re Looking For?\n              ",[17182,17249],"\n                Can't Find What You&#39;re Looking For?\n              ",[17182,17249],"\n                Can't Find What You&rsquo;re Looking For?\n              ",[2809,2811],"[sampleDestinations, sampleGuides]"]